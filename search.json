[{"path":"https://rjdverse.github.io/rjd3toolkit/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. E.g. edit roxygen2 comment .R file R/, .Rd file man/.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reproducible example.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look GitHub Actions build status making changes. README contain badges continuous integration services used package. require tidyverse style guide. can use lintr package check styles styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version (UNRELEASED) header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jean Palate. Author. Alain Quartier-la-Tente. Author. Tanguy Barthelemy. Author, maintainer, artist. Anna Smyk. Author.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palate J, Quartier-la-Tente , Barthelemy T, Smyk (2025). rjd3toolkit: Utility Functions Around 'JDemetra+ 3.0'. R package version 3.5.1.9000, https://github.com/rjdverse/rjd3toolkit.","code":"@Manual{,   title = {rjd3toolkit: Utility Functions Around 'JDemetra+ 3.0'},   author = {Jean Palate and Alain Quartier-la-Tente and Tanguy Barthelemy and Anna Smyk},   year = {2025},   note = {R package version 3.5.1.9000},   url = {https://github.com/rjdverse/rjd3toolkit}, }"},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"rjd3toolkit-","dir":"","previous_headings":"","what":"Utility Functions Around JDemetra+ 3.0","title":"Utility Functions Around JDemetra+ 3.0","text":"Utility package JDemetra+ 3.x R ecosystem. Contains functions used rjd3 packages systematically installed using rjd3 package.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main Functions","title":"Utility Functions Around JDemetra+ 3.0","text":"customize specifications rjd3x13 rjd3tramoseats generate user-defined regressors calendar correction generate auxiliary variables (outliers, ramps..) run arima model estimations perform tests (seasonality, normality, independence) access general functions auto-correlations, distributions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility Functions Around JDemetra+ 3.0","text":"Running rjd3 packages requires Java 17 higher. set configuration R explained ","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"latest-release","dir":"","previous_headings":"Installation","what":"Latest release","title":"Utility Functions Around JDemetra+ 3.0","text":"get current stable version (latest release): GitHub: r-universe:","code":"# install.packages(\"remotes\") remotes::install_github(\"rjdverse/rjd3toolkit@*release\") install.packages(\"rjd3toolkit\", repos = c(\"https://rjdverse.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Utility Functions Around JDemetra+ 3.0","text":"can install development version rjd3toolkit GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rjdverse/rjd3toolkit\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"package-maintenance-and-contributing","dir":"","previous_headings":"","what":"Package Maintenance and contributing","title":"Utility Functions Around JDemetra+ 3.0","text":"contribution welcome done pull requests /issues. pull requests include updated tests updated documentation. functionality changed, docstrings added updated.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"Utility Functions Around JDemetra+ 3.0","text":"code project licensed European Union Public Licence (EUPL).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ABS.html","id":null,"dir":"Reference","previous_headings":"","what":"Retail trade statistics in Australia — ABS","title":"Retail trade statistics in Australia — ABS","text":"Retail trade statistics Australia","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ABS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retail trade statistics in Australia — ABS","text":"","code":"ABS"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ABS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retail trade statistics in Australia — ABS","text":"object class data.frame 425 rows 22 columns.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ABS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retail trade statistics in Australia — ABS","text":"ABS","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Exports.html","id":null,"dir":"Reference","previous_headings":"","what":"Belgian exports to European countries — Exports","title":"Belgian exports to European countries — Exports","text":"Belgian exports European countries","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Exports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Belgian exports to European countries — Exports","text":"","code":"Exports"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Exports.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Belgian exports to European countries — Exports","text":"object class list length 34.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Exports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Belgian exports to European countries — Exports","text":"NBB","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Imports.html","id":null,"dir":"Reference","previous_headings":"","what":"Belgian imports from European countries — Imports","title":"Belgian imports from European countries — Imports","text":"Belgian imports European countries","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Imports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Belgian imports from European countries — Imports","text":"","code":"Imports"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Imports.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Belgian imports from European countries — Imports","text":"object class list length 34.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Imports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Belgian imports from European countries — Imports","text":"NBB","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Retail.html","id":null,"dir":"Reference","previous_headings":"","what":"US Retail trade statistics — Retail","title":"US Retail trade statistics — Retail","text":"US Retail trade statistics","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Retail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Retail trade statistics — Retail","text":"","code":"Retail"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Retail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Retail trade statistics — Retail","text":"object class list length 62.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/Retail.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Retail trade statistics — Retail","text":"US-Census Bureau","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Outliers/Ramps in Specification — add_outlier","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"Generic function add outliers Ramp regressors (add_outlier() add_ramp()) specification remove (remove_outlier() remove_ramp()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"","code":"add_outlier(x, type, date, name = sprintf(\"%s (%s)\", type, date), coef = 0)  remove_outlier(x, type = NULL, date = NULL, name = NULL)  add_ramp(x, start, end, name = sprintf(\"rp.%s - %s\", start, end), coef = 0)  remove_ramp(x, start = NULL, end = NULL, name = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"x specification customize, must \"SPEC\" class object (see details). type, date type date outliers. Possible type : \"AO\" = additive, \"LS\" = level shift, \"TC\" = transitory change \"\" = seasonal outlier. name name variable (format print). coef coefficient needs fixed. equal 0 outliers/ramps coefficients estimated. start, end dates ramp regressor.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()). Seasonal adjustment process performed, type Outlier allocated pre-defined component decomposition: \"AO\" \"TC\" irregular, \"LS\" Ramps trend.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"information outliers auxiliary variables JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Outliers/Ramps in Specification — add_outlier","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<-rjd3toolkit::add_outlier(init_spec, type=\"AO\", date=\"2012-01-01\") # ramp on year 2012 # new_spec<-rjd3toolkit::add_ramp(init_spec,start=\"2012-01-01\",end=\"2012-12-01\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"Function allowing add user-defined regressor specification allocate effect selected component, excepted calendar component. add user-defined calendar regressors, set_tradingdays. added specification, external regressor(s) also added modelling context used estimation process. see modelling_context example.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"","code":"add_usrdefvar(   x,   group = \"r\",   name,   label = paste0(group, \".\", name),   lag = 0,   coef = NULL,   regeffect = c(\"Undefined\", \"Trend\", \"Seasonal\", \"Irregular\", \"Series\",     \"SeasonallyAdjusted\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"x specification customize, must \"SPEC\" class object (see details). group, name name regressor format \"group.name\", default \"r.name\" default group NULL \"group.name\" modelling_context (see examples) label label variable displayed printing specification results. default equals group.name. lag integer defining user-defined variable lagged. default (lag = 0), regressor \\(x_t\\) lagged. lag = 1, \\(x_{t-1}\\) used. coef coefficient, needs fixed. regeffect component effect user-defined variable assigned. default (\"Undefined\"), see details.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()). Components effect regressor can allocated: \"Undefined\" : effect regressor assigned additional component, variable used improve pre-processing step, removed series decomposition. \"Trend\": decomposition effect allocated trend component, like Level-Shift \"Irregular\": decomposition effect allocated irregular component, like Additive-outlier. \"Seasonal\": decomposition effect allocated seasonal component, like Seasonal-outlier \"Series\": decomposition effect allocated raw series: \\(yc_t=y_t+ effect\\) \"SeasonallyAdjusted\": decomposition effect allocated seasonally adjusted series: \\(sa_t=T++effect\\)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"information outliers auxiliary variables JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/add_usrdefvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a User-Defined Variable to Pre-Processing Specification. — add_usrdefvar","text":"","code":"# creating one or several external regressors (TS objects), # which will be gathered in one or several groups iv1 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\" ) iv2 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\", delta = 1 ) # configuration 1: regressors in the same default group (named \"r\") variables <- list(\"iv1\" = iv1, \"iv2\" = iv2) # to use those regressors, input : name=r.iv1 and r.iv2 in add_usrdefvar function # configuration 2: group names are user-defined # here: regressors as a list of two groups (lists) reg1 and reg2 vars <- list(reg1 = list(iv1 = iv1), reg2 = list(iv2 = iv2)) # to use those regressors, input : name=reg1.iv1 and name=reg2.iv2 in add_usrdefvar function # creating the modelling context my_context <- modelling_context(variables = vars) # customize a default specification # init_spec <- rjd3x13::x13_spec(\"RSA5c\") # regressors have to be added one by one # new_spec<- add_usrdefvar(init_spec,name = \"reg1.iv1\", regeffect=\"Trend\") # new spec<- add_usrdefvar(new_spec,name = \"reg2.iv2\", regeffect=\"Trend\", coef=0.7) # modelling context is needed for the estimation phase # sa_x13<- rjd3x13::x13(ABS$X0.2.09.10.M, new_spec, context = my_context)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation of time series — aggregate","title":"Aggregation of time series — aggregate","text":"Makes frequency change series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation of time series — aggregate","text":"","code":"aggregate(   s,   nfreq = 1,   conversion = c(\"Sum\", \"Average\", \"First\", \"Last\", \"Min\", \"Max\"),   complete = TRUE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation of time series — aggregate","text":"s input time series. nfreq new frequency. Must la divisor frequency s. conversion Aggregation mode: sum (\"Sum\"), average (\"Average\"), first observation (\"First\"), last observation (\"Last\"), minimum (\"Min\"), maximum (\"Max\"). complete Boolean indicating observation given period new series set missing data original series missing.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation of time series — aggregate","text":"new time series frequency nfreq.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation of time series — aggregate","text":"","code":"s <- ABS$X0.2.09.10.M # Annual sum aggregate(s, nfreq = 1, conversion = \"Sum\") # first and last years removed #> Time Series: #> Start = 1983  #> End = 2016  #> Frequency = 1  #>  [1]  6132.6  6688.3  7614.5  8136.0  8692.8  9266.3  9592.9  9875.2 10051.2 #> [10] 10497.0 10705.9 11105.1 11442.6 11632.3 11813.7 12232.4 12719.2 13271.0 #> [19] 13814.6 14569.2 15539.8 16432.0 16625.9 16930.4 17811.7 18357.7 18801.6 #> [28] 18579.0 18172.0 18326.8 18171.6 18160.9 18727.3 18811.1 aggregate(s, nfreq = 1, conversion = \"Sum\", complete = FALSE) #> Time Series: #> Start = 1982  #> End = 2017  #> Frequency = 1  #>  [1]  4634.0  6132.6  6688.3  7614.5  8136.0  8692.8  9266.3  9592.9  9875.2 #> [10] 10051.2 10497.0 10705.9 11105.1 11442.6 11632.3 11813.7 12232.4 12719.2 #> [19] 13271.0 13814.6 14569.2 15539.8 16432.0 16625.9 16930.4 17811.7 18357.7 #> [28] 18801.6 18579.0 18172.0 18326.8 18171.6 18160.9 18727.3 18811.1 11172.0 # Quarterly mean aggregate(s, nfreq = 4, conversion = \"Average\") #>           Qtr1      Qtr2      Qtr3      Qtr4 #> 1982            468.8333  454.2000  621.6333 #> 1983  409.7667  492.1333  469.7333  672.5667 #> 1984  437.9667  528.5333  523.2000  739.7333 #> 1985  498.2000  616.6000  582.8000  840.5667 #> 1986  532.0333  633.1000  635.4000  911.4667 #> 1987  575.6667  686.2000  664.9333  970.8000 #> 1988  620.0667  726.1667  685.9000 1056.6333 #> 1989  634.1667  749.5667  732.2667 1081.6333 #> 1990  663.7333  797.3333  736.9333 1093.7333 #> 1991  672.6333  774.4333  768.8000 1134.5333 #> 1992  702.4667  845.3333  777.2000 1174.0000 #> 1993  719.7333  878.1333  781.6333 1189.1333 #> 1994  743.8667  884.1000  822.9000 1250.8333 #> 1995  748.7000  913.3333  870.4333 1281.7333 #> 1996  794.0667  922.2000  876.8667 1284.3000 #> 1997  808.7333  891.3333  915.4000 1322.4333 #> 1998  818.8000  929.9000  950.5333 1378.2333 #> 1999  861.2000  952.9333  985.4333 1440.1667 #> 2000  875.0000 1080.8333  974.3667 1493.4667 #> 2001  934.6667 1062.5333 1025.5667 1582.1000 #> 2002  971.0667 1136.4000 1067.2333 1681.7000 #> 2003 1030.8333 1232.4667 1160.4667 1756.1667 #> 2004 1101.3667 1313.8333 1263.5333 1798.6000 #> 2005 1194.8000 1290.7000 1259.5333 1796.9333 #> 2006 1145.3000 1348.4000 1290.1000 1859.6667 #> 2007 1215.3000 1386.4000 1377.0333 1958.5000 #> 2008 1296.6667 1406.4333 1411.3333 2004.8000 #> 2009 1298.1667 1509.6667 1437.3667 2022.0000 #> 2010 1320.3000 1456.1000 1442.3333 1974.2667 #> 2011 1283.9000 1451.1333 1390.5667 1931.7333 #> 2012 1281.1000 1488.1667 1383.4000 1956.2667 #> 2013 1302.7667 1439.4667 1362.4000 1952.5667 #> 2014 1269.7000 1438.7667 1370.7333 1974.4333 #> 2015 1297.4000 1450.6000 1424.3000 2070.1333 #> 2016 1375.5000 1498.9333 1385.2333 2010.7000 #> 2017 1297.0667 1510.7333"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove an arima model from an existing one. — arima_difference","title":"Remove an arima model from an existing one. — arima_difference","text":"exactly, m_diff = m_left - m_right iff m_left = m_right + m_diff.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove an arima model from an existing one. — arima_difference","text":"","code":"arima_difference(left, right, simplify = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove an arima model from an existing one. — arima_difference","text":"left Left operand (JD3_ARIMA object) right Right operand (JD3_ARIMA object) simplify Simplify results possible (common roots auto-regressive moving average polynomials, including unit roots)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove an arima model from an existing one. — arima_difference","text":"\"JD3_ARIMA\" model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove an arima model from an existing one. — arima_difference","text":"","code":"mod1 <- arima_model(delta = c(1, -2, 1)) mod2 <- arima_model(variance = .01) diff <- arima_difference(mod1, mod2) sum <- arima_sum(diff, mod2) # sum should be equal to mod1"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_model.html","id":null,"dir":"Reference","previous_headings":"","what":"ARIMA Model — arima_model","title":"ARIMA Model — arima_model","text":"ARIMA Model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARIMA Model — arima_model","text":"","code":"arima_model(name = \"arima\", ar = 1, delta = 1, ma = 1, variance = 1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARIMA Model — arima_model","text":"name Name model. ar coefficients regular auto-regressive polynomial (1 + ar(1)B + ar(2)B + ...). True signs. delta non stationary auto-regressive polynomial. ma coefficients regular moving average polynomial (1 + ma(1)B + ma(2)B + ...). True signs. variance variance.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARIMA Model — arima_model","text":"\"JD3_ARIMA\" model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARIMA Model — arima_model","text":"","code":"model <- arima_model(\"trend\", ar = c(1, -.8), delta = c(1, -1), ma = c(1, -.5), var = 100)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of an ARIMA model — arima_properties","title":"Properties of an ARIMA model — arima_properties","text":"(pseudo-)spectrum auto-covariances model returned","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of an ARIMA model — arima_properties","text":"","code":"arima_properties(model, nspectrum = 601, nac = 36)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properties of an ARIMA model — arima_properties","text":"model \"JD3_ARIMA\" model (created arima_model()). nspectrum number points calculate spectrum; th points uniformly distributed [0, pi] nac maximum lag calculate auto-covariances; model non-stationary, auto-covariances computed stationary transformation.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Properties of an ARIMA model — arima_properties","text":"list auto-covariances (pseudo-)spectrum","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Properties of an ARIMA model — arima_properties","text":"","code":"mod1 <- arima_model(ar = c(0.1, 0.2), delta = c(1, -1), ma = 0) arima_properties(mod1) #> $acf #>  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #>  #> $spectrum #>   [1] Inf   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [19]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [37]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [55]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [73]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>  [91]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [109]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [127]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [145]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [163]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [181]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [199]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [217]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [235]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [253]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [271]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [289]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [307]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [325]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [343]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [361]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [379]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [397]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [415]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [433]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [451]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [469]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [487]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [505]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [523]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [541]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [559]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [577]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> [595]   0   0   0   0   0   0   0 #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum ARIMA Models — arima_sum","title":"Sum ARIMA Models — arima_sum","text":"Sum ARIMA Models","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum ARIMA Models — arima_sum","text":"","code":"arima_sum(...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum ARIMA Models — arima_sum","text":"... list ARIMA models (created arima_model()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum ARIMA Models — arima_sum","text":"\"JD3_ARIMA\" model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum ARIMA Models — arima_sum","text":"Adds several Arima models, considering innovations independent. sum two Arima models computed follows: auto-regressive parts (stationary non stationary aggregated model smaller common multiple corresponding polynomials components. sum acf modified moving average polynomials computed factorized, get moving average polynomial innovation variance sum.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/arima_sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum ARIMA Models — arima_sum","text":"","code":"mod1 <- arima_model(ar = c(0.1, 0.2), delta = 0, ma = 0) mod2 <- arima_model(ar = 0, delta = 0, ma = c(0.4)) arima_sum(mod1, mod2)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/autocorrelations.html","id":null,"dir":"Reference","previous_headings":"","what":"Autocorrelation Functions — autocorrelations","title":"Autocorrelation Functions — autocorrelations","text":"Autocorrelation Functions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/autocorrelations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autocorrelation Functions — autocorrelations","text":"","code":"autocorrelations(data, mean = TRUE, n = 15)  autocorrelations_partial(data, mean = TRUE, n = 15)  autocorrelations_inverse(data, nar = 30, n = 15)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/autocorrelations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autocorrelation Functions — autocorrelations","text":"data data tested. mean Mean correction. TRUE, auto-correlations computed usual. FALSE, consider (known) mean 0 series corrected . n maximum lag calculate stats. nar number AR lags used compute inverse autocorrelations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/autocorrelations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autocorrelation Functions — autocorrelations","text":"","code":"x <- ABS$X0.2.09.10.M autocorrelations(x) #>         1         2         3         4         5         6         7         8  #> 0.5929536 0.4240349 0.4440918 0.4598396 0.5293772 0.5569575 0.5245444 0.4470131  #>         9        10        11        12        13        14        15  #> 0.4252213 0.3988519 0.5576846 0.9414002 0.5527883 0.3863764 0.4036775  autocorrelations_partial(x) #>           1           2           3           4           5           6  #>  0.59295361  0.11172156  0.24129386  0.16806055  0.26884488  0.20859429  #>           7           8           9          10          11          12  #>  0.14384105  0.01563160  0.03589726 -0.05361205  0.28459678  0.88297191  #>          13          14          15  #> -0.59831702 -0.19812352 -0.16655391  autocorrelations_inverse(x) #>            1            2            3            4            5            6  #>  0.127935871  0.041234692  0.081811935 -0.006654836  0.080157893  0.039683162  #>            7            8            9           10           11           12  #> -0.028236469  0.014953226 -0.007337534 -0.002900856  0.130858573  0.343983450  #>           13           14           15  #> -0.218005440 -0.072689677 -0.073542702"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/bsplines.html","id":null,"dir":"Reference","previous_headings":"","what":"B-Splines — bsplines","title":"B-Splines — bsplines","text":"B-Splines","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/bsplines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-Splines — bsplines","text":"","code":"bsplines(order = 4, knots, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/bsplines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-Splines — bsplines","text":"order Order splines (4 cubic) knots Knots splines ([0, period[) pos Requested positions ([0, period[). rows returned matrix correspond positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/bsplines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"B-Splines — bsplines","text":"matrix (len(pos) x len(knots))","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/bsplines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"B-Splines — bsplines","text":"","code":"s<-bsplines(knots = c(0,.2,.3, .9,.95, 1), pos=seq(0,1,0.01)) matplot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":null,"dir":"Reference","previous_headings":"","what":"Trading day regressors with pre-defined holidays — calendar_td","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"Allows generate trading day regressors (many defined groups), taking account 7 less different types days, Monday Sunday, specific holidays,defined beforehand calendar using functions national_calendar,weighted_calendar Chained_calendar.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"","code":"calendar_td(   calendar,   frequency,   start,   length,   s,   groups = c(1, 2, 3, 4, 5, 6, 0),   holiday = 7,   contrasts = TRUE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"calendar calendar containing required holidays frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. groups Groups days. length array must 7. indicates group week day belongs. first item corresponds Mondays last one Sundays. group used contrasts (usually Sundays) identified 0. groups identified 1, 2,... n (<= 6). instance, usual trading days defined c(1, 2, 3, 4, 5, 6, 0), week days c(1, 1, 1, 1, 1, 0, 0), week days, Saturdays, Sundays c(1, 1, 1, 1, 1, 2, 0) etc. holiday Day aggregate holidays . (holidays considered day). 1 Monday... 7 Sunday. necessary belong 0-group. contrasts true, variables defined contrasts 0-group. Otherwise, raw number days provided.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"Time series (object class c(\"ts\",\"mts\",\"matrix\")) corresponding group, starting 0-group (contrasts = FALSE) 1-group (contrasts = TRUE).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"Aggregated values monthly quarterly numbers days belonging given group, holidays summed together groups. Contrasts differences number days given group (1 6) number days reference group (0). Regressors corrected long-term mean contrasts = TRUE.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/calendar_td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trading day regressors with pre-defined holidays — calendar_td","text":"","code":"BE <- national_calendar(list(     fixed_day(7, 21),     special_day(\"NEWYEAR\"),     special_day(\"CHRISTMAS\"),     special_day(\"MAYDAY\"),     special_day(\"EASTERMONDAY\"),     special_day(\"ASCENSION\"),     special_day(\"WHITMONDAY\"),     special_day(\"ASSUMPTION\"),     special_day(\"ALLSAINTSDAY\"),     special_day(\"ARMISTICE\") )) calendar_td(BE, 12, c(1980, 1), 240,     holiday = 7, groups = c(1, 1, 1, 2, 2, 3, 0),     contrasts = FALSE ) #>          group_0 group_1 group_2 group_3 #> Jan 1980       5      13       9       4 #> Feb 1980       4      12       9       4 #> Mar 1980       5      13       8       5 #> Apr 1980       5      13       8       4 #> May 1980       7      11       8       5 #> Jun 1980       5      13       8       4 #> Jul 1980       5      13       9       4 #> Aug 1980       6      12       8       5 #> Sep 1980       4      14       8       4 #> Oct 1980       4      13      10       4 #> Nov 1980       7      11       8       4 #> Dec 1980       5      15       7       4 #> Jan 1981       5      12       9       5 #> Feb 1981       4      12       8       4 #> Mar 1981       5      14       8       4 #> Apr 1981       5      12       9       4 #> May 1981       7      12       7       5 #> Jun 1981       5      13       8       4 #> Jul 1981       5      12      10       4 #> Aug 1981       6      13       8       4 #> Sep 1981       4      14       8       4 #> Oct 1981       4      12      10       5 #> Nov 1981       6      12       8       4 #> Dec 1981       5      14       8       4 #> Jan 1982       6      12       8       5 #> Feb 1982       4      12       8       4 #> Mar 1982       4      15       8       4 #> Apr 1982       5      11      10       4 #> May 1982       8      12       7       4 #> Jun 1982       4      14       8       4 #> Jul 1982       5      11      10       5 #> Aug 1982       5      14       8       4 #> Sep 1982       4      13       9       4 #> Oct 1982       5      12       9       5 #> Nov 1982       6      13       7       4 #> Dec 1982       5      13      10       3 #> Jan 1983       6      13       8       4 #> Feb 1983       4      12       8       4 #> Mar 1983       4      14       9       4 #> Apr 1983       5      11       9       5 #> May 1983       7      13       7       4 #> Jun 1983       4      13       9       4 #> Jul 1983       6      12       8       5 #> Aug 1983       5      14       8       4 #> Sep 1983       4      12      10       4 #> Oct 1983       5      13       8       5 #> Nov 1983       6      13       7       4 #> Dec 1983       4      12      10       5 #> Jan 1984       5      14       8       4 #> Feb 1984       4      13       8       4 #> Mar 1984       4      12      10       5 #> Apr 1984       6      12       8       4 #> May 1984       6      13       8       4 #> Jun 1984       5      11       9       5 #> Jul 1984       6      14       8       3 #> Aug 1984       5      12      10       4 #> Sep 1984       5      12       8       5 #> Oct 1984       4      15       8       4 #> Nov 1984       5      12       9       4 #> Dec 1984       6      12       8       5 #> Jan 1985       5      13       9       4 #> Feb 1985       4      12       8       4 #> Mar 1985       5      12       9       5 #> Apr 1985       5      13       8       4 #> May 1985       7      11       9       4 #> Jun 1985       5      12       8       5 #> Jul 1985       4      15       8       4 #> Aug 1985       5      12       9       5 #> Sep 1985       5      13       8       4 #> Oct 1985       4      14       9       4 #> Nov 1985       6      11       8       5 #> Dec 1985       6      13       8       4 #> Jan 1986       5      12      10       4 #> Feb 1986       4      12       8       4 #> Mar 1986       6      12       8       5 #> Apr 1986       4      14       8       4 #> May 1986       7      11       8       5 #> Jun 1986       5      13       8       4 #> Jul 1986       5      13       9       4 #> Aug 1986       6      12       8       5 #> Sep 1986       4      14       8       4 #> Oct 1986       4      13      10       4 #> Nov 1986       7      11       8       4 #> Dec 1986       5      15       7       4 #> Jan 1987       5      12       9       5 #> Feb 1987       4      12       8       4 #> Mar 1987       5      14       8       4 #> Apr 1987       5      12       9       4 #> May 1987       7      12       7       5 #> Jun 1987       5      13       8       4 #> Jul 1987       5      12      10       4 #> Aug 1987       6      13       8       4 #> Sep 1987       4      14       8       4 #> Oct 1987       4      12      10       5 #> Nov 1987       6      12       8       4 #> Dec 1987       5      14       8       4 #> Jan 1988       6      12       8       5 #> Feb 1988       4      13       8       4 #> Mar 1988       4      14       9       4 #> Apr 1988       5      11       9       5 #> May 1988       7      13       7       4 #> Jun 1988       4      13       9       4 #> Jul 1988       6      12       8       5 #> Aug 1988       5      14       8       4 #> Sep 1988       4      12      10       4 #> Oct 1988       5      13       8       5 #> Nov 1988       6      13       7       4 #> Dec 1988       4      12      10       5 #> Jan 1989       5      14       8       4 #> Feb 1989       4      12       8       4 #> Mar 1989       5      12      10       4 #> Apr 1989       5      12       8       5 #> May 1989       7      13       7       4 #> Jun 1989       4      12      10       4 #> Jul 1989       6      13       7       5 #> Aug 1989       5      13       9       4 #> Sep 1989       4      12       9       5 #> Oct 1989       5      14       8       4 #> Nov 1989       6      12       9       3 #> Dec 1989       6      11       9       5 #> Jan 1990       5      14       8       4 #> Feb 1990       4      12       8       4 #> Mar 1990       4      12      10       5 #> Apr 1990       6      12       8       4 #> May 1990       6      13       8       4 #> Jun 1990       5      11       9       5 #> Jul 1990       6      14       8       3 #> Aug 1990       5      12      10       4 #> Sep 1990       5      12       8       5 #> Oct 1990       4      15       8       4 #> Nov 1990       5      12       9       4 #> Dec 1990       6      12       8       5 #> Jan 1991       5      13       9       4 #> Feb 1991       4      12       8       4 #> Mar 1991       5      12       9       5 #> Apr 1991       5      13       8       4 #> May 1991       7      11       9       4 #> Jun 1991       5      12       8       5 #> Jul 1991       4      15       8       4 #> Aug 1991       5      12       9       5 #> Sep 1991       5      13       8       4 #> Oct 1991       4      14       9       4 #> Nov 1991       6      11       8       5 #> Dec 1991       6      13       8       4 #> Jan 1992       5      12      10       4 #> Feb 1992       4      12       8       5 #> Mar 1992       5      14       8       4 #> Apr 1992       5      12       9       4 #> May 1992       7      12       7       5 #> Jun 1992       5      13       8       4 #> Jul 1992       5      12      10       4 #> Aug 1992       6      13       8       4 #> Sep 1992       4      14       8       4 #> Oct 1992       4      12      10       5 #> Nov 1992       6      12       8       4 #> Dec 1992       5      14       8       4 #> Jan 1993       6      12       8       5 #> Feb 1993       4      12       8       4 #> Mar 1993       4      15       8       4 #> Apr 1993       5      11      10       4 #> May 1993       8      12       7       4 #> Jun 1993       4      14       8       4 #> Jul 1993       5      11      10       5 #> Aug 1993       5      14       8       4 #> Sep 1993       4      13       9       4 #> Oct 1993       5      12       9       5 #> Nov 1993       6      13       7       4 #> Dec 1993       5      13      10       3 #> Jan 1994       6      13       8       4 #> Feb 1994       4      12       8       4 #> Mar 1994       4      14       9       4 #> Apr 1994       5      11       9       5 #> May 1994       7      13       7       4 #> Jun 1994       4      13       9       4 #> Jul 1994       6      12       8       5 #> Aug 1994       5      14       8       4 #> Sep 1994       4      12      10       4 #> Oct 1994       5      13       8       5 #> Nov 1994       6      13       7       4 #> Dec 1994       4      12      10       5 #> Jan 1995       5      14       8       4 #> Feb 1995       4      12       8       4 #> Mar 1995       4      13      10       4 #> Apr 1995       6      11       8       5 #> May 1995       6      14       7       4 #> Jun 1995       5      11      10       4 #> Jul 1995       6      13       7       5 #> Aug 1995       5      13       9       4 #> Sep 1995       4      12       9       5 #> Oct 1995       5      14       8       4 #> Nov 1995       6      12       9       3 #> Dec 1995       6      11       9       5 #> Jan 1996       5      14       8       4 #> Feb 1996       4      12       9       4 #> Mar 1996       5      12       9       5 #> Apr 1996       5      13       8       4 #> May 1996       7      11       9       4 #> Jun 1996       5      12       8       5 #> Jul 1996       4      15       8       4 #> Aug 1996       5      12       9       5 #> Sep 1996       5      13       8       4 #> Oct 1996       4      14       9       4 #> Nov 1996       6      11       8       5 #> Dec 1996       6      13       8       4 #> Jan 1997       5      12      10       4 #> Feb 1997       4      12       8       4 #> Mar 1997       6      12       8       5 #> Apr 1997       4      14       8       4 #> May 1997       7      11       8       5 #> Jun 1997       5      13       8       4 #> Jul 1997       5      13       9       4 #> Aug 1997       6      12       8       5 #> Sep 1997       4      14       8       4 #> Oct 1997       4      13      10       4 #> Nov 1997       7      11       8       4 #> Dec 1997       5      15       7       4 #> Jan 1998       5      12       9       5 #> Feb 1998       4      12       8       4 #> Mar 1998       5      14       8       4 #> Apr 1998       5      12       9       4 #> May 1998       7      12       7       5 #> Jun 1998       5      13       8       4 #> Jul 1998       5      12      10       4 #> Aug 1998       6      13       8       4 #> Sep 1998       4      14       8       4 #> Oct 1998       4      12      10       5 #> Nov 1998       6      12       8       4 #> Dec 1998       5      14       8       4 #> Jan 1999       6      12       8       5 #> Feb 1999       4      12       8       4 #> Mar 1999       4      15       8       4 #> Apr 1999       5      11      10       4 #> May 1999       8      12       7       4 #> Jun 1999       4      14       8       4 #> Jul 1999       5      11      10       5 #> Aug 1999       5      14       8       4 #> Sep 1999       4      13       9       4 #> Oct 1999       5      12       9       5 #> Nov 1999       6      13       7       4 #> Dec 1999       5      13      10       3"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Chained Calendar — chained_calendar","title":"Create a Chained Calendar — chained_calendar","text":"Allows combine two calendars, one one given date.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Chained Calendar — chained_calendar","text":"","code":"chained_calendar(calendar1, calendar2, break_date)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Chained Calendar — chained_calendar","text":"calendar1, calendar2 calendars chain. break_date break date format \"YYYY-MM-DD\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Chained Calendar — chained_calendar","text":"returns object class c(\"JD3_CHAINEDCALENDAR\",\"JD3_CALENDARDEFINITION\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Chained Calendar — chained_calendar","text":"chained calendar useful option major changes composition holidays take place. case two calendars describing situation change regime can defined bound together, one break one break.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Chained Calendar — chained_calendar","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chained_calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Chained Calendar — chained_calendar","text":"","code":"Belgium <- national_calendar(list(special_day(\"NEWYEAR\"), fixed_day(7, 21))) France <- national_calendar(list(special_day(\"NEWYEAR\"), fixed_day(7, 14))) chained_cal <- chained_calendar(France, Belgium, \"2000-01-01\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chi2distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Chi-Squared Distribution — density_chi2","title":"The Chi-Squared Distribution — density_chi2","text":"Density, (cumulative) distribution function random generation chi-squared distribution.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chi2distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Chi-Squared Distribution — density_chi2","text":"","code":"density_chi2(df, x)  cdf_chi2(df, x)  random_chi2(df, n)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/chi2distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Chi-Squared Distribution — density_chi2","text":"df degrees freedom. x vector quantiles. n number observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/clean_extremities.html","id":null,"dir":"Reference","previous_headings":"","what":"Removal of missing values at the beginning/end — clean_extremities","title":"Removal of missing values at the beginning/end — clean_extremities","text":"Removal missing values beginning/end","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/clean_extremities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removal of missing values at the beginning/end — clean_extremities","text":"","code":"clean_extremities(s)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/clean_extremities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removal of missing values at the beginning/end — clean_extremities","text":"s Original series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/clean_extremities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removal of missing values at the beginning/end — clean_extremities","text":"Cleaned series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/clean_extremities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removal of missing values at the beginning/end — clean_extremities","text":"","code":"y <- window(ABS$X0.2.09.10.M, start = 1982, end = 2018, extend = TRUE) y #>         Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct #> 1982     NA     NA     NA  460.1  502.6  443.8  459.1  438.4  465.1  452.7 #> 1983  379.2  378.0  472.1  503.4  510.6  462.4  468.3  458.2  482.7  485.3 #> 1984  414.7  414.5  484.7  487.3  597.9  500.4  543.4  503.4  522.8  556.6 #> 1985  516.3  452.5  525.8  587.7  700.3  561.8  602.8  582.5  563.1  637.1 #> 1986  570.5  478.2  547.4  594.3  751.6  553.4  663.2  581.1  661.9  665.6 #> 1987  613.9  513.2  599.9  674.1  714.0  670.5  720.9  601.6  672.3  709.1 #> 1988  631.0  551.1  678.1  715.7  740.8  722.0  683.5  650.9  723.3  729.6 #> 1989  631.5  552.0  719.0  697.6  764.8  786.3  715.1  723.8  757.9  751.7 #> 1990  678.2  586.2  726.8  744.1  815.5  832.4  710.3  759.4  741.1  786.6 #> 1991  694.0  604.7  719.2  748.2  828.2  746.9  794.5  770.4  741.5  858.6 #> 1992  740.0  665.9  701.5  831.4  878.6  826.0  788.2  723.6  819.8  902.5 #> 1993  762.1  643.0  754.1  840.7  906.6  887.1  771.5  728.7  844.7  886.9 #> 1994  745.7  664.4  821.5  831.7  908.0  912.6  782.9  798.8  887.0  934.6 #> 1995  752.4  682.5  811.2  906.0  927.2  906.8  880.6  873.9  856.8  920.6 #> 1996  833.1  737.1  812.0  895.2  962.8  908.6  908.0  888.9  833.7  933.7 #> 1997  840.9  727.4  857.9  849.0  994.8  830.2  971.1  836.0  939.1  976.9 #> 1998  917.3  716.2  822.9  970.1  970.2  849.4 1042.3  869.9  939.4 1021.3 #> 1999  942.0  738.4  903.2  953.2 1011.2  894.4 1054.5  899.5 1002.3 1043.7 #> 2000  924.9  798.2  901.9 1024.7 1052.3 1165.5  859.3 1009.2 1054.6 1070.4 #> 2001  971.9  814.6 1017.5 1039.2 1123.5 1024.9 1100.8  963.0 1012.9 1132.0 #> 2002 1027.9  841.4 1043.9 1075.3 1190.9 1143.0 1075.7 1065.9 1060.1 1211.4 #> 2003 1099.3  900.5 1092.7 1222.4 1237.1 1237.9 1182.0 1101.2 1198.2 1316.1 #> 2004 1182.9  989.8 1131.4 1277.1 1280.3 1384.1 1305.9 1166.8 1317.9 1358.3 #> 2005 1246.3 1037.3 1300.8 1153.7 1264.2 1454.2 1290.1 1210.7 1277.8 1314.4 #> 2006 1193.7 1037.7 1204.5 1348.6 1267.6 1429.0 1412.0 1239.2 1219.1 1344.6 #> 2007 1267.3 1047.0 1331.6 1302.6 1365.1 1491.5 1462.3 1315.5 1353.3 1440.6 #> 2008 1397.8 1140.5 1351.7 1396.6 1421.1 1401.6 1582.3 1268.4 1383.3 1452.4 #> 2009 1451.0 1056.6 1386.9 1509.1 1519.4 1500.5 1570.7 1341.5 1399.9 1534.3 #> 2010 1469.1 1111.9 1379.9 1389.7 1427.2 1551.4 1581.0 1324.0 1422.0 1464.9 #> 2011 1412.6 1117.5 1321.6 1472.6 1408.9 1471.9 1532.5 1293.5 1345.7 1404.7 #> 2012 1362.4 1131.7 1349.2 1391.2 1456.9 1616.4 1423.4 1359.0 1367.8 1442.6 #> 2013 1397.4 1113.6 1397.3 1339.1 1441.9 1537.4 1390.6 1337.2 1359.4 1463.3 #> 2014 1451.0 1064.9 1293.2 1442.9 1411.8 1461.6 1501.6 1254.2 1356.4 1478.7 #> 2015 1471.2 1053.8 1367.2 1442.2 1428.7 1480.9 1540.9 1331.9 1400.1 1566.3 #> 2016 1519.2 1155.8 1451.5 1451.0 1449.7 1596.1 1468.3 1293.9 1393.5 1497.4 #> 2017 1428.5 1092.4 1370.3 1522.6 1452.4 1557.2 1445.5 1303.1     NA     NA #> 2018     NA                                                                #>         Nov    Dec #> 1982  522.9  889.3 #> 1983  568.7  963.7 #> 1984  623.2 1039.4 #> 1985  697.1 1187.5 #> 1986  700.9 1367.9 #> 1987  743.2 1460.1 #> 1988  870.3 1570.0 #> 1989  923.8 1569.4 #> 1990  931.5 1563.1 #> 1991  944.7 1600.3 #> 1992  968.6 1650.9 #> 1993  970.0 1710.5 #> 1994 1000.4 1817.5 #> 1995 1067.4 1857.2 #> 1996 1081.6 1837.6 #> 1997 1111.3 1879.1 #> 1998 1137.7 1975.7 #> 1999 1207.2 2069.6 #> 2000 1232.5 2177.5 #> 2001 1344.8 2269.5 #> 2002 1495.1 2338.6 #> 2003 1528.2 2424.2 #> 2004 1536.7 2500.8 #> 2005 1540.4 2536.0 #> 2006 1623.3 2611.1 #> 2007 1687.9 2747.0 #> 2008 1675.9 2886.1 #> 2009 1736.6 2795.1 #> 2010 1705.5 2752.4 #> 2011 1660.0 2730.5 #> 2012 1672.9 2753.3 #> 2013 1668.9 2725.5 #> 2014 1687.7 2756.9 #> 2015 1730.5 2913.6 #> 2016 1684.3 2850.4 #> 2017     NA     NA #> 2018               clean_extremities(y) #>         Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct #> 1982                       460.1  502.6  443.8  459.1  438.4  465.1  452.7 #> 1983  379.2  378.0  472.1  503.4  510.6  462.4  468.3  458.2  482.7  485.3 #> 1984  414.7  414.5  484.7  487.3  597.9  500.4  543.4  503.4  522.8  556.6 #> 1985  516.3  452.5  525.8  587.7  700.3  561.8  602.8  582.5  563.1  637.1 #> 1986  570.5  478.2  547.4  594.3  751.6  553.4  663.2  581.1  661.9  665.6 #> 1987  613.9  513.2  599.9  674.1  714.0  670.5  720.9  601.6  672.3  709.1 #> 1988  631.0  551.1  678.1  715.7  740.8  722.0  683.5  650.9  723.3  729.6 #> 1989  631.5  552.0  719.0  697.6  764.8  786.3  715.1  723.8  757.9  751.7 #> 1990  678.2  586.2  726.8  744.1  815.5  832.4  710.3  759.4  741.1  786.6 #> 1991  694.0  604.7  719.2  748.2  828.2  746.9  794.5  770.4  741.5  858.6 #> 1992  740.0  665.9  701.5  831.4  878.6  826.0  788.2  723.6  819.8  902.5 #> 1993  762.1  643.0  754.1  840.7  906.6  887.1  771.5  728.7  844.7  886.9 #> 1994  745.7  664.4  821.5  831.7  908.0  912.6  782.9  798.8  887.0  934.6 #> 1995  752.4  682.5  811.2  906.0  927.2  906.8  880.6  873.9  856.8  920.6 #> 1996  833.1  737.1  812.0  895.2  962.8  908.6  908.0  888.9  833.7  933.7 #> 1997  840.9  727.4  857.9  849.0  994.8  830.2  971.1  836.0  939.1  976.9 #> 1998  917.3  716.2  822.9  970.1  970.2  849.4 1042.3  869.9  939.4 1021.3 #> 1999  942.0  738.4  903.2  953.2 1011.2  894.4 1054.5  899.5 1002.3 1043.7 #> 2000  924.9  798.2  901.9 1024.7 1052.3 1165.5  859.3 1009.2 1054.6 1070.4 #> 2001  971.9  814.6 1017.5 1039.2 1123.5 1024.9 1100.8  963.0 1012.9 1132.0 #> 2002 1027.9  841.4 1043.9 1075.3 1190.9 1143.0 1075.7 1065.9 1060.1 1211.4 #> 2003 1099.3  900.5 1092.7 1222.4 1237.1 1237.9 1182.0 1101.2 1198.2 1316.1 #> 2004 1182.9  989.8 1131.4 1277.1 1280.3 1384.1 1305.9 1166.8 1317.9 1358.3 #> 2005 1246.3 1037.3 1300.8 1153.7 1264.2 1454.2 1290.1 1210.7 1277.8 1314.4 #> 2006 1193.7 1037.7 1204.5 1348.6 1267.6 1429.0 1412.0 1239.2 1219.1 1344.6 #> 2007 1267.3 1047.0 1331.6 1302.6 1365.1 1491.5 1462.3 1315.5 1353.3 1440.6 #> 2008 1397.8 1140.5 1351.7 1396.6 1421.1 1401.6 1582.3 1268.4 1383.3 1452.4 #> 2009 1451.0 1056.6 1386.9 1509.1 1519.4 1500.5 1570.7 1341.5 1399.9 1534.3 #> 2010 1469.1 1111.9 1379.9 1389.7 1427.2 1551.4 1581.0 1324.0 1422.0 1464.9 #> 2011 1412.6 1117.5 1321.6 1472.6 1408.9 1471.9 1532.5 1293.5 1345.7 1404.7 #> 2012 1362.4 1131.7 1349.2 1391.2 1456.9 1616.4 1423.4 1359.0 1367.8 1442.6 #> 2013 1397.4 1113.6 1397.3 1339.1 1441.9 1537.4 1390.6 1337.2 1359.4 1463.3 #> 2014 1451.0 1064.9 1293.2 1442.9 1411.8 1461.6 1501.6 1254.2 1356.4 1478.7 #> 2015 1471.2 1053.8 1367.2 1442.2 1428.7 1480.9 1540.9 1331.9 1400.1 1566.3 #> 2016 1519.2 1155.8 1451.5 1451.0 1449.7 1596.1 1468.3 1293.9 1393.5 1497.4 #> 2017 1428.5 1092.4 1370.3 1522.6 1452.4 1557.2 1445.5 1303.1               #>         Nov    Dec #> 1982  522.9  889.3 #> 1983  568.7  963.7 #> 1984  623.2 1039.4 #> 1985  697.1 1187.5 #> 1986  700.9 1367.9 #> 1987  743.2 1460.1 #> 1988  870.3 1570.0 #> 1989  923.8 1569.4 #> 1990  931.5 1563.1 #> 1991  944.7 1600.3 #> 1992  968.6 1650.9 #> 1993  970.0 1710.5 #> 1994 1000.4 1817.5 #> 1995 1067.4 1857.2 #> 1996 1081.6 1837.6 #> 1997 1111.3 1879.1 #> 1998 1137.7 1975.7 #> 1999 1207.2 2069.6 #> 2000 1232.5 2177.5 #> 2001 1344.8 2269.5 #> 2002 1495.1 2338.6 #> 2003 1528.2 2424.2 #> 2004 1536.7 2500.8 #> 2005 1540.4 2536.0 #> 2006 1623.3 2611.1 #> 2007 1687.9 2747.0 #> 2008 1675.9 2886.1 #> 2009 1736.6 2795.1 #> 2010 1705.5 2752.4 #> 2011 1660.0 2730.5 #> 2012 1672.9 2753.3 #> 2013 1668.9 2725.5 #> 2014 1687.7 2756.9 #> 2015 1730.5 2913.6 #> 2016 1684.3 2850.4 #> 2017"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/compare_annual_totals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the annual totals of two series — compare_annual_totals","title":"Compare the annual totals of two series — compare_annual_totals","text":"Usually raw series corresponding seasonally adjusted series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/compare_annual_totals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the annual totals of two series — compare_annual_totals","text":"","code":"compare_annual_totals(raw, sa)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/compare_annual_totals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the annual totals of two series — compare_annual_totals","text":"raw Raw series sa Seasonally adjusted series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/compare_annual_totals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the annual totals of two series — compare_annual_totals","text":"largest annual difference (percentage average level seasonally adjusted series)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/compare_annual_totals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the annual totals of two series — compare_annual_totals","text":"","code":"s1<- rjd3toolkit::ABS$X0.2.09.10.M # two raw series for example's sake s2 <- rjd3toolkit::ABS$X0.2.08.10.M compare_annual_totals(s1,s2) #> [1] 0.8146783"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/data_to_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Promote a R time series to a ","title":"Promote a R time series to a ","text":"Promote R time series \"full JDemetra+ time series\"","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/data_to_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Promote a R time series to a ","text":"","code":"data_to_ts(s, name)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/data_to_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Promote a R time series to a ","text":"s R time series (class TS) name name series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/data_to_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Promote a R time series to a ","text":"Returns java object class JD3_TS","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/data_to_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Promote a R time series to a ","text":"","code":"s <- ABS$X0.2.09.10.M t <- data_to_ts(s, \"test\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/daysOf.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides a list of dates corresponding to each period of the given time series — daysOf","title":"Provides a list of dates corresponding to each period of the given time series — daysOf","text":"Provides list dates corresponding period given time series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/daysOf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides a list of dates corresponding to each period of the given time series — daysOf","text":"","code":"daysOf(ts, pos = 1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/daysOf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides a list of dates corresponding to each period of the given time series — daysOf","text":"ts time series pos position first considered period.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/daysOf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides a list of dates corresponding to each period of the given time series — daysOf","text":"list starting dates period","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/daysOf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides a list of dates corresponding to each period of the given time series — daysOf","text":"","code":"daysOf(Retail$BookStores) #>   [1] \"1992-01-01\" \"1992-02-01\" \"1992-03-01\" \"1992-04-01\" \"1992-05-01\" #>   [6] \"1992-06-01\" \"1992-07-01\" \"1992-08-01\" \"1992-09-01\" \"1992-10-01\" #>  [11] \"1992-11-01\" \"1992-12-01\" \"1993-01-01\" \"1993-02-01\" \"1993-03-01\" #>  [16] \"1993-04-01\" \"1993-05-01\" \"1993-06-01\" \"1993-07-01\" \"1993-08-01\" #>  [21] \"1993-09-01\" \"1993-10-01\" \"1993-11-01\" \"1993-12-01\" \"1994-01-01\" #>  [26] \"1994-02-01\" \"1994-03-01\" \"1994-04-01\" \"1994-05-01\" \"1994-06-01\" #>  [31] \"1994-07-01\" \"1994-08-01\" \"1994-09-01\" \"1994-10-01\" \"1994-11-01\" #>  [36] \"1994-12-01\" \"1995-01-01\" \"1995-02-01\" \"1995-03-01\" \"1995-04-01\" #>  [41] \"1995-05-01\" \"1995-06-01\" \"1995-07-01\" \"1995-08-01\" \"1995-09-01\" #>  [46] \"1995-10-01\" \"1995-11-01\" \"1995-12-01\" \"1996-01-01\" \"1996-02-01\" #>  [51] \"1996-03-01\" \"1996-04-01\" \"1996-05-01\" \"1996-06-01\" \"1996-07-01\" #>  [56] \"1996-08-01\" \"1996-09-01\" \"1996-10-01\" \"1996-11-01\" \"1996-12-01\" #>  [61] \"1997-01-01\" \"1997-02-01\" \"1997-03-01\" \"1997-04-01\" \"1997-05-01\" #>  [66] \"1997-06-01\" \"1997-07-01\" \"1997-08-01\" \"1997-09-01\" \"1997-10-01\" #>  [71] \"1997-11-01\" \"1997-12-01\" \"1998-01-01\" \"1998-02-01\" \"1998-03-01\" #>  [76] \"1998-04-01\" \"1998-05-01\" \"1998-06-01\" \"1998-07-01\" \"1998-08-01\" #>  [81] \"1998-09-01\" \"1998-10-01\" \"1998-11-01\" \"1998-12-01\" \"1999-01-01\" #>  [86] \"1999-02-01\" \"1999-03-01\" \"1999-04-01\" \"1999-05-01\" \"1999-06-01\" #>  [91] \"1999-07-01\" \"1999-08-01\" \"1999-09-01\" \"1999-10-01\" \"1999-11-01\" #>  [96] \"1999-12-01\" \"2000-01-01\" \"2000-02-01\" \"2000-03-01\" \"2000-04-01\" #> [101] \"2000-05-01\" \"2000-06-01\" \"2000-07-01\" \"2000-08-01\" \"2000-09-01\" #> [106] \"2000-10-01\" \"2000-11-01\" \"2000-12-01\" \"2001-01-01\" \"2001-02-01\" #> [111] \"2001-03-01\" \"2001-04-01\" \"2001-05-01\" \"2001-06-01\" \"2001-07-01\" #> [116] \"2001-08-01\" \"2001-09-01\" \"2001-10-01\" \"2001-11-01\" \"2001-12-01\" #> [121] \"2002-01-01\" \"2002-02-01\" \"2002-03-01\" \"2002-04-01\" \"2002-05-01\" #> [126] \"2002-06-01\" \"2002-07-01\" \"2002-08-01\" \"2002-09-01\" \"2002-10-01\" #> [131] \"2002-11-01\" \"2002-12-01\" \"2003-01-01\" \"2003-02-01\" \"2003-03-01\" #> [136] \"2003-04-01\" \"2003-05-01\" \"2003-06-01\" \"2003-07-01\" \"2003-08-01\" #> [141] \"2003-09-01\" \"2003-10-01\" \"2003-11-01\" \"2003-12-01\" \"2004-01-01\" #> [146] \"2004-02-01\" \"2004-03-01\" \"2004-04-01\" \"2004-05-01\" \"2004-06-01\" #> [151] \"2004-07-01\" \"2004-08-01\" \"2004-09-01\" \"2004-10-01\" \"2004-11-01\" #> [156] \"2004-12-01\" \"2005-01-01\" \"2005-02-01\" \"2005-03-01\" \"2005-04-01\" #> [161] \"2005-05-01\" \"2005-06-01\" \"2005-07-01\" \"2005-08-01\" \"2005-09-01\" #> [166] \"2005-10-01\" \"2005-11-01\" \"2005-12-01\" \"2006-01-01\" \"2006-02-01\" #> [171] \"2006-03-01\" \"2006-04-01\" \"2006-05-01\" \"2006-06-01\" \"2006-07-01\" #> [176] \"2006-08-01\" \"2006-09-01\" \"2006-10-01\" \"2006-11-01\" \"2006-12-01\" #> [181] \"2007-01-01\" \"2007-02-01\" \"2007-03-01\" \"2007-04-01\" \"2007-05-01\" #> [186] \"2007-06-01\" \"2007-07-01\" \"2007-08-01\" \"2007-09-01\" \"2007-10-01\" #> [191] \"2007-11-01\" \"2007-12-01\" \"2008-01-01\" \"2008-02-01\" \"2008-03-01\" #> [196] \"2008-04-01\" \"2008-05-01\" \"2008-06-01\" \"2008-07-01\" \"2008-08-01\" #> [201] \"2008-09-01\" \"2008-10-01\" \"2008-11-01\" \"2008-12-01\" \"2009-01-01\" #> [206] \"2009-02-01\" \"2009-03-01\" \"2009-04-01\" \"2009-05-01\" \"2009-06-01\" #> [211] \"2009-07-01\" \"2009-08-01\" \"2009-09-01\" \"2009-10-01\" \"2009-11-01\" #> [216] \"2009-12-01\" \"2010-01-01\" \"2010-02-01\" \"2010-03-01\" \"2010-04-01\" #> [221] \"2010-05-01\" \"2010-06-01\" \"2010-07-01\" \"2010-08-01\" \"2010-09-01\" #> [226] \"2010-10-01\" \"2010-11-01\" \"2010-12-01\""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/deprecated-rjd3toolkit.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated-rjd3toolkit","title":"Deprecated functions — deprecated-rjd3toolkit","text":"Use sa_decomposition() instead sa.decomposition().","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/deprecated-rjd3toolkit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated-rjd3toolkit","text":"","code":"sa.decomposition(x, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/deprecated-rjd3toolkit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions — deprecated-rjd3toolkit","text":"x object print. ... arguments.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Diagnostics Function — diagnostics","title":"Generic Diagnostics Function — diagnostics","text":"Generic Diagnostics Function","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Diagnostics Function — diagnostics","text":"","code":"diagnostics(x, ...)  # S3 method for class 'JD3' diagnostics(x, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Diagnostics Function — diagnostics","text":"x object extract diagnostics. ... arguments.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dictionary and Result — dictionary","title":"Get Dictionary and Result — dictionary","text":"Extract dictionary \"JD3_ProcResults\" object (dictionary()) extract specific value (result()) list values (user_defined()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dictionary and Result — dictionary","text":"","code":"dictionary(object)  result(object, id)  user_defined(object, userdefined = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dictionary and Result — dictionary","text":"object java object. id name object extract. userdefined vector containing names object extract.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Differencing of a series — differences","title":"Differencing of a series — differences","text":"Differencing series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differencing of a series — differences","text":"","code":"differences(data, lags = 1, mean = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differencing of a series — differences","text":"data series differenced. lags Lags differencing. mean Apply mean correction end differencing process.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differencing of a series — differences","text":"differenced series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differencing of a series — differences","text":"","code":"differences(Retail$BookStores, c(1, 1, 12), FALSE) #>       Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec #> 1993            219  -45    8  -31   15   90 -123   28   49   29 #> 1994 -111   65  -47   29   50   -8  -72  136 -153   -1   69   41 #> 1995   63 -289  147   41    5  -43   42  -34    0  -54  131  -86 #> 1996   29  -36   37    6   -8  -45   11  136 -283  387 -308  170 #> 1997  -23 -169  120  -18   -2   16    7 -109  280 -267  151   22 #> 1998 -346  453 -218    6    1   57  -47   43  -28  -64   27  116 #> 1999 -114   51    6  -39  -10   59   13 -188  131   79  -38   17 #> 2000 -207  266 -155   32  101 -124  -29  248 -224 -128  185 -128 #> 2001  296 -284  154 -125   78  -17   13  267 -495  227   -3   66 #> 2002  260 -780  471   72  -73  -93  143 -118  160 -208   81   51 #> 2003   62 -184   18  165 -108  162 -189  295 -511  226  -38  211 #> 2004 -163   48    7 -131   56   65   -3  -83   74   27   -7   54 #> 2005 -290  258   -1 -104   88  -94  154  -36 -165  109   65  -72 #> 2006   98 -228  111   23   67  -38 -191  165   77  -90   13 -117 #> 2007  234 -177   56    9    8  -50  197  -60 -266  214  -40  -49 #> 2008   73    4 -158  197 -127  -59   97  214 -405  204  -87  119 #> 2009   30 -148  192 -118   -1   81 -118   19  195 -289  116  -18 #> 2010   81  -42   11  -83   78    2  -34 -110  177   20    3  -84"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differencing_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"The series is differenced till its variance is decreasing. — differencing_fast","title":"The series is differenced till its variance is decreasing. — differencing_fast","text":"Automatic differencing","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differencing_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The series is differenced till its variance is decreasing. — differencing_fast","text":"","code":"differencing_fast(data, period, mad = TRUE, centile = 90, k = 1.2)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differencing_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The series is differenced till its variance is decreasing. — differencing_fast","text":"data Series differenced. period Period considered automatic differencing. mad Use MAD computation variance (true default). centile Percentage data used computing variance (90 default). k tolerance decrease variance. algorithm stops new variance higher k*old variance. k equal slightly higher 1 (1.2 default)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differencing_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The series is differenced till its variance is decreasing. — differencing_fast","text":"Stationary transformation ddata: data differencing mean: mean correction differences: lag: \\(ddata(t)=data(t)-data(t-lag)\\) order: order differencing","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/differencing_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The series is differenced till its variance is decreasing. — differencing_fast","text":"","code":"differencing_fast(log(ABS$X0.2.09.10.M), 12) #> $ddata #>                Jan           Feb           Mar           Apr           May #> 1983                                                         -0.0741493458 #> 1984  0.0091461904  0.0026871821 -0.0658394637 -0.0588444482  0.1903421439 #> 1985  0.1435137649 -0.1314178361 -0.0063240191  0.1059458943 -0.0292513650 #> 1986 -0.0333814559 -0.0445838855 -0.0149824076 -0.0290912556  0.0595278241 #> 1987 -0.0681075811 -0.0026823014  0.0209466003  0.0344110474 -0.1773155307 #> 1988 -0.0377543953  0.0437768340  0.0512811469 -0.0626491781 -0.0230348959 #> 1989 -0.0717786136  0.0008396861  0.0569348226 -0.0841818002  0.0574988906 #> 1990  0.0717265265 -0.0112313059 -0.0493230032  0.0537395830 -0.0003425015 #> 1991  0.0270520826  0.0080417082 -0.0415832924  0.0160067409  0.0099583615 #> 1992  0.0406581429  0.0322288161 -0.1213256255  0.1303592885 -0.0463656445 #> 1993 -0.0017018876 -0.0644223794  0.1072988705 -0.0611802343  0.0202477556 #> 1994 -0.0572195378  0.0544940596  0.0528672988 -0.0963700315  0.0123061194 #> 1995 -0.0517314821  0.0179334264 -0.0394954540  0.0981848118 -0.0646425937 #> 1996  0.0802775388 -0.0249245444 -0.0759753338 -0.0129778564  0.0496685629 #> 1997  0.0199286686 -0.0225660995  0.0682342381 -0.1079751731  0.0856839767 #> 1998  0.0646292593 -0.1024789007 -0.0261357810  0.1749928286 -0.1583794488 #> 1999 -0.0235591251  0.0039555236  0.0625831006 -0.1106837400  0.0589652013 #> 2000 -0.0647522370  0.0961931604 -0.0793138731  0.0737707842 -0.0324899202 #> 2001 -0.0012547829 -0.0292292923  0.1002622655 -0.1065489686  0.0514192683 #> 2002  0.0146381333 -0.0236502706 -0.0067549148  0.0085334449  0.0241120051 #> 2003  0.0371628108  0.0007272659 -0.0221949953  0.0825284489 -0.0901558399 #> 2004  0.0373463236  0.0212573009 -0.0597486316  0.0089716368 -0.0094512485 #> 2005  0.0211010036 -0.0053365514  0.0926500960 -0.2411413695  0.0889627992 #> 2006 -0.0570987906  0.0435069769 -0.0773004589  0.2330077651 -0.1534070106 #> 2007  0.0306473741 -0.0509087197  0.0913944774 -0.1350214338  0.1088070874 #> 2008  0.0472731003 -0.0124730881 -0.0705559981  0.0546966115 -0.0294749107 #> 2009 -0.0120433008 -0.1137639588  0.1021185382  0.0517647540 -0.0105884347 #> 2010  0.0444352201  0.0386170635 -0.0560740659 -0.0773655422  0.0198245129 #> 2011 -0.0238233646  0.0442417742 -0.0481916928  0.1011095584 -0.0708468742 #> 2012 -0.0281956119  0.0488110071  0.0080418209 -0.0775315623  0.0903644945 #> 2013  0.0170500671 -0.0414884332  0.0511528953 -0.0731989164  0.0278197352 #> 2014  0.0477879015 -0.0823567193 -0.0327049237  0.1520792670 -0.0957534332 #> 2015  0.0023704579 -0.0243036397  0.0661233052 -0.0561303378  0.0123847057 #> 2016 -0.0231770837  0.0602845799 -0.0325574144 -0.0537494033  0.0085084502 #> 2017 -0.0396288431  0.0051433035 -0.0011521762  0.1057342365 -0.0463057039 #>                Jun           Jul           Aug           Sep           Oct #> 1983  0.0252644272 -0.0212152419  0.0243329695 -0.0070311279  0.0323946955 #> 1984 -0.0788595498  0.0697591196 -0.0546572681 -0.0142756736  0.0572759536 #> 1985 -0.0423471627 -0.0119983663  0.0422043330 -0.0716858522  0.0608215295 #> 1986 -0.0857603002  0.1105559844 -0.0978974634  0.1640635812 -0.1178949945 #> 1987  0.2432639406 -0.1085188078 -0.0487539140 -0.0190797312  0.0477174885 #> 1988  0.0371537152 -0.1272752114  0.1320370232 -0.0056438436 -0.0446195259 #> 1989  0.0534295817 -0.0401175232  0.0609633537 -0.0594317136 -0.0168865075 #> 1990 -0.0072123648 -0.0637096726  0.0547485137 -0.0704294185  0.0677984337 #> 1991 -0.1238350362  0.2204073571 -0.0976443573 -0.0138416201  0.0870437032 #> 1992  0.0415884057 -0.1086245874 -0.0547099857  0.1630563535 -0.0505197121 #> 1993  0.0399913350 -0.0927781350  0.0284385641  0.0228977555 -0.0473575805 #> 1994  0.0267969129 -0.0136716509  0.0771801748 -0.0429850293  0.0035229463 #> 1995 -0.0273006633  0.1239742693 -0.0277431683 -0.1244958143  0.0195474643 #> 1996 -0.0356933792  0.0286578506 -0.0136220947 -0.0443496843  0.0414604498 #> 1997 -0.1229343237  0.1574233887 -0.1285412012  0.1804044746 -0.0738192392 #> 1998  0.0479030584  0.0478920569 -0.0310059897 -0.0394302456  0.0441279081 #> 1999  0.0102320969 -0.0399859733  0.0218238797  0.0313504736 -0.0431154982 #> 2000  0.2249118557 -0.4694562517  0.3197780590 -0.0642099743 -0.0256038705 #> 2001 -0.1940257005  0.3762294955 -0.2945341678  0.0065157606  0.0962976138 #> 2002  0.0508008268 -0.1321269137  0.1245869556 -0.0559756403  0.0222449962 #> 2003  0.0416994036  0.0144762958 -0.0616553250  0.0898762058 -0.0395610851 #> 2004  0.0773092188 -0.0119491741 -0.0418200745  0.0373546653 -0.0636580300 #> 2005  0.0620607267 -0.0615785358  0.0491064692 -0.0678334572 -0.0019539186 #> 2006 -0.0201668601  0.1077684266 -0.0670200989 -0.0702942730  0.0697432509 #> 2007 -0.0312949112 -0.0078040265  0.0247474118  0.0446823611 -0.0354700501 #> 2008 -0.1023714174  0.1410368299 -0.1153295039  0.0583864526 -0.0137682277 #> 2009  0.0012996442 -0.0755420496  0.0633902321 -0.0441032706  0.0429280338 #> 2010  0.0959604004 -0.0268231848 -0.0196671117  0.0287944593 -0.0619507961 #> 2011 -0.0396984411  0.0214464965  0.0078514345 -0.0318442727  0.0131867837 #> 2012  0.0601457384 -0.1674993840  0.1232494255 -0.0331081266  0.0103339983 #> 2013 -0.0397595739  0.0267957091  0.0071418076  0.0100110759  0.0204073018 #> 2014 -0.0294647495  0.1273568495 -0.1408758540  0.0618706618  0.0126784589 #> 2015  0.0012188311  0.0127171700  0.0342731201 -0.0283990437  0.0258432953 #> 2016  0.0603214441 -0.1231745350  0.0193158114  0.0242204862 -0.0402607846 #> 2017 -0.0265345390  0.0090238304  0.0227351143                             #>                Nov           Dec #> 1983  0.0144252111 -0.0036174067 #> 1984 -0.0455651524 -0.0158955805 #> 1985 -0.0230184021  0.0211452554 #> 1986 -0.0383259094  0.1359901092 #> 1987 -0.0047077068  0.0066282454 #> 1988  0.1293729138 -0.0853020995 #> 1989  0.0298167488 -0.0600398569 #> 1990 -0.0370819598 -0.0123229438 #> 1991 -0.0735120691  0.0094488560 #> 1992 -0.0248812212  0.0061451689 #> 1993  0.0188807954  0.0340207902 #> 1994 -0.0215272664  0.0298170775 #> 1995  0.0799188638 -0.0432178182 #> 1996 -0.0009139147 -0.0238252462 #> 1997 -0.0181400303 -0.0047565085 #> 1998 -0.0209691326  0.0266516478 #> 1999  0.0375991817 -0.0128623620 #> 2000 -0.0045193201  0.0300810794 #> 2001  0.0312471068 -0.0458185630 #> 2002  0.0381570553 -0.0759548743 #> 2003 -0.0609986243  0.0140516353 #> 2004 -0.0260144121  0.0255624198 #> 2005  0.0352584930  0.0115724930 #> 2006  0.0297027081 -0.0232354395 #> 2007 -0.0299390840  0.0117137802 #> 2008 -0.0152924854  0.0565315210 #> 2009 -0.0192780462 -0.0676170699 #> 2010  0.0282164144  0.0026762300 #> 2011  0.0149225034  0.0190522048 #> 2012 -0.0188822392  0.0005744047 #> 2013 -0.0166410386 -0.0077543741 #> 2014  0.0007327642  0.0002530341 #> 2015 -0.0325090979  0.0302388411 #> 2016  0.0179255424  0.0051302422 #> 2017                             #>  #> $mean #> [1] FALSE #>  #> $differences #>       [,1] [,2] #> lag      1   12 #> order    1    1 #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/do_stationary.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic stationary transformation — do_stationary","title":"Automatic stationary transformation — do_stationary","text":"Automatic processing (identification order differencing) based auto-correlations mean correction. series seasonal. Source: Tramo","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/do_stationary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic stationary transformation — do_stationary","text":"","code":"do_stationary(data, period)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/do_stationary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic stationary transformation — do_stationary","text":"data Series differenced. period Period series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/do_stationary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic stationary transformation — do_stationary","text":"Stationary transformation ddata: data differencing mean: mean correction differences: lag: \\(ddata(t)=data(t)-data(t-lag)\\) order: order differencing","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/do_stationary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic stationary transformation — do_stationary","text":"","code":"do_stationary(log(ABS$X0.2.09.10.M), 12) #> $ddata #>                Jan           Feb           Mar           Apr           May #> 1982                                                          8.589544e-02 #> 1983 -8.548262e-01 -5.624899e-03  2.198413e-01  6.173893e-02  1.174610e-02 #> 1984 -8.456800e-01 -2.937717e-03  1.540018e-01  2.894483e-03  2.020882e-01 #> 1985 -7.021662e-01 -1.343556e-01  1.476778e-01  1.088404e-01  1.728369e-01 #> 1986 -7.355477e-01 -1.789394e-01  1.326954e-01  7.974912e-02  2.323647e-01 #> 1987 -8.036553e-01 -1.816217e-01  1.536420e-01  1.141602e-01  5.504917e-02 #> 1988 -8.414097e-01 -1.378449e-01  2.049232e-01  5.151099e-02  3.201427e-02 #> 1989 -9.131883e-01 -1.370052e-01  2.618580e-01 -3.267081e-02  8.951316e-02 #> 1990 -8.414618e-01 -1.482365e-01  2.125350e-01  2.106877e-02  8.917066e-02 #> 1991 -8.144097e-01 -1.401948e-01  1.709517e-01  3.707551e-02  9.912902e-02 #> 1992 -7.737515e-01 -1.079660e-01  4.962607e-02  1.674348e-01  5.276338e-02 #> 1993 -7.754534e-01 -1.723884e-01  1.569249e-01  1.062546e-01  7.301114e-02 #> 1994 -8.326730e-01 -1.178943e-01  2.097922e-01  9.884537e-03  8.531726e-02 #> 1995 -8.844044e-01 -9.996089e-02  1.702968e-01  1.080693e-01  2.067466e-02 #> 1996 -8.041269e-01 -1.248854e-01  9.432145e-02  9.509149e-02  7.034322e-02 #> 1997 -7.841982e-01 -1.474515e-01  1.625557e-01 -1.288368e-02  1.560272e-01 #> 1998 -7.195690e-01 -2.499304e-01  1.364199e-01  1.621091e-01 -2.352247e-03 #> 1999 -7.431281e-01 -2.459749e-01  1.990030e-01  5.142541e-02  5.661295e-02 #> 2000 -8.078803e-01 -1.497818e-01  1.196891e-01  1.251962e-01  2.412303e-02 #> 2001 -8.091351e-01 -1.790110e-01  2.199514e-01  1.864722e-02  7.554230e-02 #> 2002 -7.944970e-01 -2.026613e-01  2.131965e-01  2.718067e-02  9.965431e-02 #> 2003 -7.573342e-01 -2.019341e-01  1.910015e-01  1.097091e-01  9.498467e-03 #> 2004 -7.199878e-01 -1.806768e-01  1.312529e-01  1.186808e-01  4.721874e-05 #> 2005 -6.988868e-01 -1.860133e-01  2.239030e-01 -1.224606e-01  8.901002e-02 #> 2006 -7.559856e-01 -1.425063e-01  1.466025e-01  1.105472e-01 -6.439699e-02 #> 2007 -7.253383e-01 -1.934150e-01  2.379970e-01 -2.447428e-02  4.441009e-02 #> 2008 -6.780652e-01 -2.058881e-01  1.674410e-01  3.022233e-02  1.493518e-02 #> 2009 -6.901085e-01 -3.196521e-01  2.695595e-01  8.198708e-02  4.346749e-03 #> 2010 -6.456732e-01 -2.810350e-01  2.134854e-01  4.621540e-03  2.417126e-02 #> 2011 -6.694966e-01 -2.367933e-01  1.652938e-01  1.057311e-01 -4.667561e-02 #> 2012 -6.976922e-01 -1.879822e-01  1.733356e-01  2.819954e-02  4.368888e-02 #> 2013 -6.806421e-01 -2.294707e-01  2.244885e-01 -4.499938e-02  7.150862e-02 #> 2014 -6.328542e-01 -3.118274e-01  1.917835e-01  1.070799e-01 -2.424482e-02 #> 2015 -6.304838e-01 -3.361310e-01  2.579068e-01  5.094955e-02 -1.186011e-02 #> 2016 -6.536609e-01 -2.758465e-01  2.253494e-01 -2.799855e-03 -3.351660e-03 #> 2017 -6.932897e-01 -2.707032e-01  2.241973e-01  1.029344e-01 -4.965736e-02 #>                Jun           Jul           Aug           Sep           Oct #> 1982 -1.268759e-01  3.143872e-02 -4.859164e-02  5.666538e-02 -2.947811e-02 #> 1983 -1.016115e-01  1.022347e-02 -2.425867e-02  4.963425e-02  2.916590e-03 #> 1984 -1.804711e-01  7.998259e-02 -7.891594e-02  3.535857e-02  6.019254e-02 #> 1985 -2.228182e-01  6.798423e-02 -3.671161e-02 -3.632728e-02  1.210141e-01 #> 1986 -3.085785e-01  1.785402e-01 -1.346091e-01  1.277363e-01  3.119078e-03 #> 1987 -6.531458e-02  7.002140e-02 -1.833630e-01  1.086566e-01  5.083657e-02 #> 1988 -2.816087e-02 -5.725381e-02 -5.132596e-02  1.030127e-01  6.217041e-03 #> 1989  2.526871e-02 -9.737133e-02  9.637394e-03  4.358102e-02 -1.066947e-02 #> 1990  1.805635e-02 -1.610810e-01  6.438591e-02 -2.684840e-02  5.712897e-02 #> 1991 -1.057787e-01  5.932635e-02 -3.325845e-02 -4.069002e-02  1.441727e-01 #> 1992 -6.419028e-02 -4.929823e-02 -8.796844e-02  1.223663e-01  9.365296e-02 #> 1993 -2.419895e-02 -1.420764e-01 -5.952987e-02  1.452641e-01  4.629538e-02 #> 1994  2.597966e-03 -1.557480e-01  1.765030e-02  1.022791e-01  4.981832e-02 #> 1995 -2.470270e-02 -3.177375e-02 -1.009286e-02 -2.221676e-02  6.936579e-02 #> 1996 -6.039608e-02 -3.115899e-03 -2.371496e-02 -6.656644e-02  1.108262e-01 #> 1997 -1.833304e-01  1.543075e-01 -1.522562e-01  1.138380e-01  3.700700e-02 #> 1998 -1.354273e-01  2.021995e-01 -1.832622e-01  7.440779e-02  8.113491e-02 #> 1999 -1.251952e-01  1.622136e-01 -1.614383e-01  1.057583e-01  3.801941e-02 #> 2000  9.971661e-02 -3.072427e-01  1.583398e-01  4.154829e-02  1.241554e-02 #> 2001 -9.430909e-02  6.898682e-02 -1.361944e-01  4.806405e-02  1.087132e-01 #> 2002 -4.350826e-02 -6.314010e-02 -1.160742e-02 -7.911594e-03  1.309581e-01 #> 2003 -1.808860e-03 -4.866380e-02 -7.326275e-02  8.196461e-02  9.139706e-02 #> 2004  7.550036e-02 -6.061297e-02 -1.150828e-01  1.193193e-01  2.773903e-02 #> 2005  1.375611e-01 -1.221915e-01 -6.597635e-02  5.148582e-02  2.578511e-02 #> 2006  1.173942e-01 -1.442308e-02 -1.329965e-01 -1.880845e-02  9.552837e-02 #> 2007  8.609931e-02 -2.222711e-02 -1.082490e-01  2.587391e-02  6.005832e-02 #> 2008 -1.627210e-02  1.188097e-01 -2.235785e-01  8.426036e-02  4.629009e-02 #> 2009 -1.497246e-02  4.326767e-02 -1.601883e-01  4.015709e-02  8.921812e-02 #> 2010  8.098794e-02  1.644448e-02 -1.798554e-01  6.895155e-02  2.726733e-02 #> 2011  4.128950e-02  3.789098e-02 -1.720040e-01  3.710728e-02  4.045411e-02 #> 2012  1.014352e-01 -1.296084e-01 -4.875456e-02  3.999150e-03  5.078811e-02 #> 2013  6.167567e-02 -1.028127e-01 -4.161276e-02  1.401023e-02  7.119541e-02 #> 2014  3.221092e-02  2.454416e-02 -1.824886e-01  7.588089e-02  8.387387e-02 #> 2015  3.342975e-02  3.726133e-02 -1.482155e-01  4.748184e-02  1.097172e-01 #> 2016  9.375119e-02 -8.591321e-02 -1.288997e-01  7.170233e-02  6.945638e-02 #> 2017  6.721665e-02 -7.688938e-02 -1.061646e-01                             #>                Nov           Dec #> 1982  1.417053e-01  5.285891e-01 #> 1983  1.561305e-01  5.249717e-01 #> 1984  1.105653e-01  5.090761e-01 #> 1985  8.754692e-02  5.302213e-01 #> 1986  4.922101e-02  6.662114e-01 #> 1987  4.451330e-02  6.728397e-01 #> 1988  1.738862e-01  5.875376e-01 #> 1989  2.037030e-01  5.274977e-01 #> 1990  1.666210e-01  5.151748e-01 #> 1991  9.310894e-02  5.246236e-01 #> 1992  6.822772e-02  5.307688e-01 #> 1993  8.710851e-02  5.647896e-01 #> 1994  6.558124e-02  5.946067e-01 #> 1995  1.455001e-01  5.513889e-01 #> 1996  1.445862e-01  5.275636e-01 #> 1997  1.264462e-01  5.228071e-01 #> 1998  1.054770e-01  5.494588e-01 #> 1999  1.430762e-01  5.365964e-01 #> 2000  1.385569e-01  5.666775e-01 #> 2001  1.698040e-01  5.208589e-01 #> 2002  2.079611e-01  4.449040e-01 #> 2003  1.469624e-01  4.589557e-01 #> 2004  1.209480e-01  4.845181e-01 #> 2005  1.562065e-01  4.960906e-01 #> 2006  1.859092e-01  4.728551e-01 #> 2007  1.559701e-01  4.845689e-01 #> 2008  1.406776e-01  5.411005e-01 #> 2009  1.213996e-01  4.734834e-01 #> 2010  1.496160e-01  4.761596e-01 #> 2011  1.645385e-01  4.952118e-01 #> 2012  1.456563e-01  4.957862e-01 #> 2013  1.290152e-01  4.880318e-01 #> 2014  1.297480e-01  4.882849e-01 #> 2015  9.723891e-02  5.185237e-01 #> 2016  1.151645e-01  5.236540e-01 #> 2017                             #>  #> $mean #> [1] TRUE #>  #> $differences #>       [,1] #> lag      1 #> order    1 #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-add_ud_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Add user-defined variable to a SA model — .add_ud_var","title":"Add user-defined variable to a SA model — .add_ud_var","text":"Add user-defined variable SA model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-add_ud_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add user-defined variable to a SA model — .add_ud_var","text":"","code":".add_ud_var(x, jx, userdefined = NULL, out_class = NULL, result = FALSE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-add_ud_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add user-defined variable to a SA model — .add_ud_var","text":"x model SA jx Reference Java object userdefined vector containing names object extract. out_class Java class result object result Boolean. jx contains results? Default FALSE.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Information on the (log-)likelihood — .likelihood","title":"Information on the (log-)likelihood — .likelihood","text":"Function allowing gather information likelihood estimation","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information on the (log-)likelihood — .likelihood","text":"","code":".likelihood(   nobs,   neffectiveobs = NA,   nparams = 0,   ll,   adjustedll = NA,   aic,   aicc,   bic,   bicc,   ssq )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information on the (log-)likelihood — .likelihood","text":"nobs Number observations neffectiveobs Number effective observations. NA nobs. nparams Number hyper-parameters ll Log-likelihood adjustedll Adjusted log-likelihood series transformed aic AIC aicc AICC bic BIC bicc BIC corrected length ssq Sum squared residuals","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information on the (log-)likelihood — .likelihood","text":"Returns java object class JD3_LIKELIHOOD.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information on the (log-)likelihood — .likelihood","text":"","code":"# Values used below are taken from the following estimation # m <- x13(rjd3toolkit::ABS$X0.2.09.10.M,\"rsa3\") # m$result$preprocessing$estimation$likelihood ll_estimation <- .likelihood(425,4,7,720.2,-2147.407,4308.14,4309.09,4333.96, 433.962, 0.0418)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-tsmoniker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Moniker — .tsmoniker","title":"Create a Moniker — .tsmoniker","text":"Create Moniker","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-tsmoniker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Moniker — .tsmoniker","text":"","code":".tsmoniker(source, id)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-tsmoniker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Moniker — .tsmoniker","text":"source Source time series. id Id time series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-tsmoniker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Moniker — .tsmoniker","text":"Returns java object class JD3_TSMONIKER.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/dot-tsmoniker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Moniker — .tsmoniker","text":"","code":"source <- \"Txt\" # id is split due to length restrictions id1 <- \"demetra://tsprovider/Txt/20111201/SERIES?datePattern=dd%2FMM%2Fyyyy&delimiter=SEMICOLON&\" id2 <- \"file=C%3A%5CDocuments%5CIPI%5CData%5CIPI_nace4.csv#seriesIndex=0\" id<-paste(id1,id2) moniker <- .tsmoniker(source,id)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Easter Sunday dates in given period — easter_dates","title":"Display Easter Sunday dates in given period — easter_dates","text":"Allows display date Easter Sunday year, defined period. Dates displayed \"YYYY-MM-DD\" format number days since January 1st 1970.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Easter Sunday dates in given period — easter_dates","text":"","code":"easter_dates(year0, year1, julian = FALSE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Easter Sunday dates in given period — easter_dates","text":"year0, year1 starting year ending year julian Boolean indicating Julian calendar must used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Easter Sunday dates in given period — easter_dates","text":"named numeric vector. Names dates format \"YYYY-MM-DD\", values number days since January 1st 1970.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Display Easter Sunday dates in given period — easter_dates","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Easter Sunday dates in given period — easter_dates","text":"","code":"# Dates from 2018(included) to 2023 (included) easter_dates(2018, 2023) #> 2018-04-01 2019-04-21 2020-04-12 2021-04-04 2022-04-17 2023-04-09  #>      17622      18007      18364      18721      19099      19456"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Holiday on an Easter related day — easter_day","title":"Set a Holiday on an Easter related day — easter_day","text":"Allows define holiday date related Easter Sunday.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Holiday on an Easter related day — easter_day","text":"","code":"easter_day(offset, julian = FALSE, weight = 1, validity = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Holiday on an Easter related day — easter_day","text":"offset position holiday relation Easter Sunday, measured days (can positive negative). julian Boolean indicating Julian calendar must used. weight weight associated holiday. validity validity period: either NULL (full sample) named list \"start\" /\"end\" dates format \"YYYY-MM-DD\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set a Holiday on an Easter related day — easter_day","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a Holiday on an Easter related day — easter_day","text":"","code":"easter_day(1) # Easter Monday #> Easter related day: offset=1 easter_day(-2) # Easter Good Friday #> Easter related day: offset=-2 # Corpus Christi 60 days after Easter # Sunday in Julian calendar with weight 0.5, from January 2000 to December 2020 easter_day(     offset = 60, julian = TRUE, weight = 0.5,     validity = list(start = \"2000-01-01\", end = \"2020-12-01\") ) #> Easter related day: offset=60 , weight=0.5 , from=2000-01-01 , to=2020-12-01"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Easter regressor — easter_variable","title":"Easter regressor — easter_variable","text":"Allows generate regressor taking account (Julian) Easter effect monthly quarterly time series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easter regressor — easter_variable","text":"","code":"easter_variable(   frequency,   start,   length,   s,   duration = 6,   endpos = -1,   correction = c(\"Simple\", \"PreComputed\", \"Theoretical\", \"None\") )  julianeaster_variable(frequency, start, length, s, duration = 6)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easter regressor — easter_variable","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. duration Duration (length days) Easter effect. (value 1 20, default =6) endpos Position end Easter effect, relatively Easter: -1(default): Easter Sunday, 0: Easter Sunday, 1: Easter Monday) correction mean correction option. Simple\"(default), \"PreComputed\", \"Theoretical\" \"None\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easter regressor — easter_variable","text":"time series (object class \"ts\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Easter regressor — easter_variable","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/easter_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easter regressor — easter_variable","text":"","code":"# Monthly regressor, five-year long, duration 8 days, effect finishing on Easter Monday ee <- easter_variable(12, c(2020, 1), length = 5 * 12, duration = 8, endpos = 1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a holiday on a Fixed Day — fixed_day","title":"Set a holiday on a Fixed Day — fixed_day","text":"creates holiday falling fixed day year, optional weight period validity, like Christmas always celebrated December 25th.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a holiday on a Fixed Day — fixed_day","text":"","code":"fixed_day(month, day, weight = 1, validity = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a holiday on a Fixed Day — fixed_day","text":"month, day month day fixed day add. weight weight associated holiday. validity validity period: either NULL (full sample) named list \"start\" /\"end\" dates format \"YYYY-MM-DD\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a holiday on a Fixed Day — fixed_day","text":"returns object class c(\"JD3_FIXEDDAY\",\"JD3_HOLIDAY\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set a holiday on a Fixed Day — fixed_day","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a holiday on a Fixed Day — fixed_day","text":"","code":"day <- fixed_day(7, 21, .9) day # July 21st, with weight=0.9, on the whole sample #> Fixed day: month=7, day=21 , weight=0.9 day <- fixed_day(12, 25, .5, validity = list(start = \"2010-01-01\")) day # December 25th, with weight=0.5, from January 2010 #> Fixed day: month=12, day=25 , weight=0.5 , from=2010-01-01 day <- fixed_day(12, 25, .5, validity = list(start = \"1968-02-01\", end = \"2010-01-01\")) day # December 25th, with weight=0.9, from February 1968 until January 2010 #> Fixed day: month=12, day=25 , weight=0.5 , from=1968-02-01 , to=2010-01-01"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Holiday on a Fixed Week Day — fixed_week_day","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"Allows define holiday falling fixed week day year, like Labour Day USA always celebrated first Monday September.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"","code":"fixed_week_day(month, week, dayofweek, weight = 1, validity = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"month month holiday: 1 (January) 12 (December). week position specified week day month: 1 (first week month) 5. always lower 5. -1 last dayofweek month. dayofweek day week: 1 (Monday) 7 (Sunday). weight weight associated holiday. validity validity period: either NULL (full sample) named list \"start\" /\"end\" dates format \"YYYY-MM-DD\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"returns object class c(\"JD3_FIXEDWEEKDAY\",\"JD3_HOLIDAY\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/fixed_week_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a Holiday on a Fixed Week Day — fixed_week_day","text":"","code":"day <- fixed_week_day(9, 1, 1) # first Monday(1) of September. day #> Fixed week day: month=9, day of the week=Monday, week=1"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/gammadistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gamma Distribution — density_gamma","title":"The Gamma Distribution — density_gamma","text":"Density, (cumulative) distribution function random generation Gamma distribution.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/gammadistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gamma Distribution — density_gamma","text":"","code":"density_gamma(shape, scale, x)  cdf_gamma(shape, scale, x)  random_gamma(shape, scale, n)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/gammadistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gamma Distribution — density_gamma","text":"shape, scale shape scale parameters. x vector quantiles. n number observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily calendar regressors corresponding to holidays — holidays","title":"Daily calendar regressors corresponding to holidays — holidays","text":"Allows generate daily regressors (dummy variables) corresponding holiday pre-defined calendar.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily calendar regressors corresponding to holidays — holidays","text":"","code":"holidays(   calendar,   start,   length,   nonworking = c(6, 7),   type = c(\"Skip\", \"All\", \"NextWorkingDay\", \"PreviousWorkingDay\"),   single = FALSE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily calendar regressors corresponding to holidays — holidays","text":"calendar calendar holidays defined. start Starting date regressors, format \"YYYY-MM-DD\". length Length regressors days. nonworking Indexes non working days (Monday=1, Sunday=7). type Adjustment type holiday falls week-end: \"NextWorkingDay\": holiday set next day, \"PreviousWorkingDay\": holiday set previous day, \"Skip\": holidays corresponding non working days simply skipped matrix, \"\": (holidays always put matrix, even correspond non working day. single Boolean indication single variable (TRUE) returned matrix (FALSE, default) containing different holidays separate columns.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Daily calendar regressors corresponding to holidays — holidays","text":"matrix (class \"matrix\") column associated holiday (order creation holiday) row date.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily calendar regressors corresponding to holidays — holidays","text":"pre-defined calendar created functions national_calendar weighted_calendar weighted_calendar. many regressors  defined holidays generated, holiday occurs value 1 0 otherwise. kind non-aggregated regressors used calendar correction daily data.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily calendar regressors corresponding to holidays — holidays","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily calendar regressors corresponding to holidays — holidays","text":"","code":"BE <- national_calendar(list(     fixed_day(7, 21),     special_day(\"NEWYEAR\"),     special_day(\"CHRISTMAS\"),     special_day(\"MAYDAY\"),     special_day(\"EASTERMONDAY\"),     special_day(\"ASCENSION\"),     special_day(\"WHITMONDAY\"),     special_day(\"ASSUMPTION\"),     special_day(\"ALLSAINTSDAY\"),     special_day(\"ARMISTICE\") )) q <- holidays(BE, \"2021-01-01\", 366 * 10, type = \"All\") plot(apply(q, 1, max))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Intervention variable — intervention_variable","title":"Intervention variable — intervention_variable","text":"Function allowing create external regressors sequences zeros ones. generated variables added add_usrdefvar function require modelling context definition modelling_context used estimation process.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intervention variable — intervention_variable","text":"","code":"intervention_variable(   frequency,   start,   length,   s,   starts,   ends,   delta = 0,   seasonaldelta = 0 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intervention variable — intervention_variable","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. starts, ends characters specifying sequences starts/ends dates intervention variable. Can characters integers. delta regular differencing order. seasonaldelta seasonal differencing order.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intervention variable — intervention_variable","text":"Intervention variables combinations possible sequence ones zeros (sequence ones defined parameters starts ends) \\(\\frac{1}{(1-B)^d}\\) \\(\\frac{1}{(1-B^s)^D}\\) \\(B\\) backwards operator, \\(s\\) frequency time series, \\(d\\) \\(D\\) parameters delta seasonaldelta. example, delta = 0 seasonaldelta = 0 get temporary level shifts defined parameters starts ends. delta = 1 seasonaldelta = 0 get cumulative sum temporary level shifts, differenced regressor become classical level shift.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intervention variable — intervention_variable","text":"information auxiliary variables JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/intervention_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intervention variable — intervention_variable","text":"","code":"iv1 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\" ) plot(iv1)  iv2 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\", delta = 1 ) plot(iv2)  # using one variable in a a seasonal adjustment process # regressors as a list of two groups reg1 and reg2 vars <- list(reg1 = list(x = iv1), reg2 = list(x = iv2)) # creating the modelling context my_context <- modelling_context(variables = vars) # customize a default specification # init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<- add_usrdefvar(init_spec,id = \"reg1.iv1\", regeffect=\"Trend\") # modelling context is needed for the estimation phase # sa_x13<- rjd3x13::x13(ABS$X0.2.09.10.M, new_spec, context = my_context)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgammadistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Inverse-Gamma Distribution — density_inverse_gamma","title":"The Inverse-Gamma Distribution — density_inverse_gamma","text":"Density, (cumulative) distribution function random generation inverse-gamma distribution.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgammadistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Inverse-Gamma Distribution — density_inverse_gamma","text":"","code":"density_inverse_gamma(shape, scale, x)  cdf_inverse_gamma(shape, scale, x)  random_inverse_gamma(shape, scale, n)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgammadistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Inverse-Gamma Distribution — density_inverse_gamma","text":"shape, scale shape scale parameters. x vector quantiles. n number observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgaussiandistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Inverse-Gaussian Distribution — density_inverse_gaussian","title":"The Inverse-Gaussian Distribution — density_inverse_gaussian","text":"Density, (cumulative) distribution function random generation inverse-gaussian distribution.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgaussiandistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Inverse-Gaussian Distribution — density_inverse_gaussian","text":"","code":"density_inverse_gaussian(shape, scale, x)  cdf_inverse_gaussian(shape, scale, x)  random_inverse_gaussian(shape, scale, n)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/invgaussiandistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Inverse-Gaussian Distribution — density_inverse_gaussian","text":"shape, scale shape scale parameters. x vector quantiles. n number observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_print.html","id":null,"dir":"Reference","previous_headings":"","what":"JD3 print functions — jd3_print","title":"JD3 print functions — jd3_print","text":"JD3 print functions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JD3 print functions — jd3_print","text":"","code":"# S3 method for class 'JD3_ARIMA' print(x, ...)  # S3 method for class 'JD3_UCARIMA' print(x, ...)  # S3 method for class 'JD3_SARIMA' print(x, ...)  # S3 method for class 'JD3_SARIMA_ESTIMATION' print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)  # S3 method for class 'JD3_SPAN' print(x, ...)  # S3 method for class 'JD3_LIKELIHOOD' print(x, ...)  # S3 method for class 'JD3_REGARIMA_RSLTS' print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   summary_info = getOption(\"summary_info\"),   ... )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JD3 print functions — jd3_print","text":"x object print. ... unused parameters. digits minimum number significant digits used numbers. summary_info boolean indicating message suggesting use summary function details printed. default used option \"summary_info\" used, initialized TRUE.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Java Utility Functions — .r2jd_tsdata","title":"Java Utility Functions — .r2jd_tsdata","text":"functions used JDemetra+ 3.0 packages easily interact R Java objects.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Java Utility Functions — .r2jd_tsdata","text":"","code":".r2jd_tsdata(s)  .r2jd_tsdomain(period, startYear, startPeriod, length)  .jd2r_tsdata(s)  .jd2r_mts(s)  .jd2r_lts(s)  .jd2r_matrix(s)  .r2jd_matrix(s)  .jdomain(period, start, end)  .enum_sextract(type, p)  .enum_sof(type, code)  .enum_extract(type, p)  .enum_of(type, code, prefix)  .r2p_parameter(r)  .p2r_parameter(p)  .r2p_parameters(r)  .r2p_lparameters(r)  .p2r_parameters(p)  .p2r_parameters_rslt(p)  .p2r_parameters_rsltx(p)  .p2r_test(p)  .p2r_matrix(p)  .p2r_tsdata(p)  .r2p_tsdata(r)  .p2r_parameters_estimation(p)  .p2r_likelihood(p)  .p2r_date(p)  .r2p_date(s)  .p2r_span(span)  .r2p_span(rspan)  .p2r_arima(p)  .p2r_ucarima(p)  .p2r_spec_sarima(spec)  .r2p_spec_sarima(r)  .p2r_outliers(p)  .r2p_outliers(r)  .p2r_sequences(p)  .r2p_sequences(r)  .p2r_iv(p)  .r2p_iv(r)  .p2r_ivs(p)  .r2p_ivs(r)  .p2r_ramps(p)  .r2p_ramps(r)  .p2r_uservars(p)  .r2p_uservars(r)  .p2r_variables(p)  .p2r_sa_decomposition(p, full = FALSE)  .p2r_sa_diagnostics(p)  .p2r_spec_benchmarking(p)  .r2p_spec_benchmarking(r)  .r2jd_sarima(model)  .jd2r_ucarima(jucm)  .p2jd_calendar(pcalendar)  .r2p_calendar(r)  .proc_numeric(rslt, name)  .proc_vector(rslt, name)  .proc_int(rslt, name)  .proc_bool(rslt, name)  .proc_ts(rslt, name)  .proc_str(rslt, name)  .proc_desc(rslt, name)  .proc_test(rslt, name)  .proc_parameter(rslt, name)  .proc_parameters(rslt, name)  .proc_matrix(rslt, name)  .proc_data(rslt, name)  .proc_dictionary(name)  .proc_dictionary2(jobj)  .proc_likelihood(jrslt, prefix)  .r2p_moniker(r)  .p2r_moniker(p)  .r2p_datasupplier(name, r)  .p2r_metadata(p)  .r2p_metadata(r, type)  .p2r_ts(p)  .r2p_ts(r)  .p2r_tscollection(p)  .r2p_tscollection(r)  .r2jd_ts(s)  .jd2r_ts(js)  .r2jd_tscollection(s)  .jd2r_tscollection(js)  .p2r_datasupplier(p)  .r2p_datasuppliers(r)  .p2r_datasuppliers(p)  .p2jd_variables(p)  .jd2p_variables(jd)  .jd2r_variables(jcals)  .r2jd_variables(r)  .p2r_context(p)  .r2p_context(r)  .p2jd_context(p)  .jd2p_context(jd)  .jd2r_modellingcontext(jcontext)  .r2jd_modellingcontext(r)  .p2r_calendars(p)  .r2p_calendars(r)  .p2jd_calendars(p)  .jd2p_calendars(jd)  .jd2r_calendars(jcals)  .r2jd_calendars(r)  .jd3_object(jobjRef, subclasses = NULL, result = FALSE)  .p2r_regarima_rslts(p)  .r2jd_tmp_ts(s, name)  .r2jd_make_ts(source, id, type = \"All\")  .r2jd_make_tscollection(source, id, type = \"All\")  DATE_MIN  DATE_MAX  jversion"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_utilities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Java Utility Functions — .r2jd_tsdata","text":"object class Message length 3. object class Message length 3. object class integer length 1.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/jd3_utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Java Utility Functions — .r2jd_tsdata","text":"s Time series startYear Initial year time domain startPeriod Initial period time domain(1 first period) length Length p, r, spec, jucm, start, end, name, period, type, code, prefix, span, rspan, full, rslt, jd, jcontext, jobjRef, jcals, subclasses, result, pcalendar parameters. model Model jobj Java object jrslt Reference Java object js Java time series source Source time series information id Identifier time series information (source-dependent)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ljungbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Ljung-Box Test — ljungbox","title":"Ljung-Box Test — ljungbox","text":"Compute Ljung-Box test check independence data.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ljungbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ljung-Box Test — ljungbox","text":"","code":"ljungbox(data, k = 1, lag = 1, nhp = 0, sign = 0, mean = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ljungbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ljung-Box Test — ljungbox","text":"data data tested. k number auto-correlations used test lag number lags used two auto-correlations. nhp number hyper parameters (correct degree freedom) sign sign = 1, positive auto-correlations considered test. sign = -1, negative auto-correlations considered. sign = 0, auto-correlations integrated test. mean Mean correction. TRUE, auto-correlations computed usual. FALSE, consider (known) mean 0 series corrected .","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ljungbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ljung-Box Test — ljungbox","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ljungbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ljung-Box Test — ljungbox","text":"","code":"ljungbox(random_t(2, 100), lag = 24, k = 1) #> Value: 0.370185  #> P-Value: 0.5429  ljungbox(ABS$X0.2.09.10.M, lag = 24, k = 1) #> Value: 350.021  #> P-Value: 0.0000"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Long-term means for a set of calendar regressors — long_term_mean","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"Given pre-defined calendar set groups, function displays long-term means used seasonally adjust corresponding regressors, final value using contrasts \"number days group - long term mean\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"","code":"long_term_mean(   calendar,   frequency,   groups = c(1, 2, 3, 4, 5, 6, 0),   holiday = 7 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"calendar calendar containing required holidays frequency Frequency series, number periods per year (12, 4, 3, 2...) groups Groups days. length array must 7. indicates group week day belongs. first item corresponds Mondays last one Sundays. group used contrasts (usually Sundays) identified 0. groups identified 1, 2,... n (<= 6). instance, usual trading days defined c(1, 2, 3, 4, 5, 6, 0), week days c(1, 1, 1, 1, 1, 0, 0), week days, Saturdays, Sundays c(1, 1, 1, 1, 1, 2, 0) etc. holiday Day aggregate holidays . (holidays considered day). 1 Monday... 7 Sunday. necessary belong 0-group.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"returns object class c(\"matrix\",\"array\") long term means corresponding group/period, starting 0-group.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"long-term mean probability based computation average value every period every group. (see references). monthly regressors 12 types periods (January December).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/long_term_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Long-term means for a set of calendar regressors — long_term_mean","text":"","code":"BE <- national_calendar(list(     fixed_day(7, 21),     special_day(\"NEWYEAR\"),     special_day(\"CHRISTMAS\"),     special_day(\"MAYDAY\"),     special_day(\"EASTERMONDAY\"),     special_day(\"ASCENSION\"),     special_day(\"WHITMONDAY\"),     special_day(\"ASSUMPTION\"),     special_day(\"ALLSAINTSDAY\"),     special_day(\"ARMISTICE\") )) lt <- long_term_mean(BE, 12,     groups = c(1, 1, 1, 1, 1, 0, 0),     holiday = 7 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Leap Year regressor — lp_variable","title":"Leap Year regressor — lp_variable","text":"Allows generate regressor correcting leap year length--period effect.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leap Year regressor — lp_variable","text":"","code":"lp_variable(   frequency,   start,   length,   s,   type = c(\"LeapYear\", \"LengthOfPeriod\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leap Year regressor — lp_variable","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. type modelling leap year effect: contrast variable (type = \"LeapYear\", default) length--month (length--quarter; type = \"LengthOfPeriod\").","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leap Year regressor — lp_variable","text":"Time series (object class \"ts\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leap Year regressor — lp_variable","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/lp_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leap Year regressor — lp_variable","text":"","code":"# Leap years occur in year 2000, 2004, 2008 and 2012 lp_variable(4, start = c(2000, 1), length = 4 * 13) #>       Qtr1  Qtr2  Qtr3  Qtr4 #> 2000  0.75  0.00  0.00  0.00 #> 2001 -0.25  0.00  0.00  0.00 #> 2002 -0.25  0.00  0.00  0.00 #> 2003 -0.25  0.00  0.00  0.00 #> 2004  0.75  0.00  0.00  0.00 #> 2005 -0.25  0.00  0.00  0.00 #> 2006 -0.25  0.00  0.00  0.00 #> 2007 -0.25  0.00  0.00  0.00 #> 2008  0.75  0.00  0.00  0.00 #> 2009 -0.25  0.00  0.00  0.00 #> 2010 -0.25  0.00  0.00  0.00 #> 2011 -0.25  0.00  0.00  0.00 #> 2012  0.75  0.00  0.00  0.00 lper <- lp_variable(12, c(2000, 1), length = 10 * 12, type = \"LengthOfPeriod\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a robust median absolute deviation (MAD) — mad","title":"Compute a robust median absolute deviation (MAD) — mad","text":"Compute robust median absolute deviation (MAD)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a robust median absolute deviation (MAD) — mad","text":"","code":"mad(data, centile = 50, medianCorrected = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a robust median absolute deviation (MAD) — mad","text":"data data compute robust deviation centile centile used exclude extreme values (\"centile\" part data compute mad) medianCorrected TRUE series corrected median, FALSE median supposed 0","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a robust median absolute deviation (MAD) — mad","text":"median absolute deviation","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a robust median absolute deviation (MAD) — mad","text":"","code":"y <- rnorm(1000) m <- rjd3toolkit::mad(y, centile = 70)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create modelling context — modelling_context","title":"Create modelling context — modelling_context","text":"Function allowing include calendars external regressors format makes usable estimation process (reg-arima tramo modelling, stand alone pre-processing seasonal adjustment). regressors can created functions available package come source, provided ts class objects.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create modelling context — modelling_context","text":"","code":"modelling_context(calendars = NULL, variables = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create modelling context — modelling_context","text":"calendars list calendars. variables list variables.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create modelling context — modelling_context","text":"list calendars variables","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create modelling context — modelling_context","text":"information auxiliary variables JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/modelling_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create modelling context — modelling_context","text":"","code":"# creating one or several external regressors (TS objects), which will # be gathered in one or several groups iv1 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\" ) iv2 <- intervention_variable(12, c(2000, 1), 60,     starts = \"2001-01-01\", ends = \"2001-12-01\", delta = 1 ) # regressors as a list of two groups reg1 and reg2 vars <- list(reg1 = list(x = iv1), reg2 = list(x = iv2)) # creating the modelling context my_context <- modelling_context(variables = vars) # customize a default specification # init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<- add_usrdefvar(init_spec,name = \"reg1.iv1\", regeffect=\"Trend\") # modelling context is needed for the estimation phase # sa_x13<- rjd3x13::x13(ABS$X0.2.09.10.M, new_spec, context = my_context)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/monotonic_cspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Monotonic cubic spline — monotonic_cspline","title":"Monotonic cubic spline — monotonic_cspline","text":"Monotonic cubic spline","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/monotonic_cspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monotonic cubic spline — monotonic_cspline","text":"","code":"monotonic_cspline(x, y, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/monotonic_cspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monotonic cubic spline — monotonic_cspline","text":"x Abscissas knots y Ordinates knots pos Requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/monotonic_cspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monotonic cubic spline — monotonic_cspline","text":"array corresponding values spline requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/monotonic_cspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monotonic cubic spline — monotonic_cspline","text":"","code":"s<-monotonic_cspline(x = c(0,.2,.3, .9,.95), y= c(1,3,5,8,12), pos=seq(0,1,0.01)) plot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a National Calendar — national_calendar","title":"Create a National Calendar — national_calendar","text":"create calendar list days corresponding required holidays. holidays generated one functions: fixed_day(), fixed_week_day(), easter_day(), special_day() single_day().","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a National Calendar — national_calendar","text":"","code":"national_calendar(days, mean_correction = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a National Calendar — national_calendar","text":"days list holidays taken account calendar mean_correction TRUE variables generated calendar contain long term mean corrections (default). FALSE otherwise.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a National Calendar — national_calendar","text":"returns object class c(\"JD3_CALENDAR\",\"JD3_CALENDARDEFINITION\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a National Calendar — national_calendar","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/national_calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a National Calendar — national_calendar","text":"","code":"# Fictional calendar using all possibilities to set the required holidays MyCalendar <- national_calendar(list(     fixed_day(7, 21),     special_day(\"NEWYEAR\"),     special_day(\"CHRISTMAS\"),     fixed_week_day(7, 2, 3), # second Wednesday of July     special_day(\"MAYDAY\"),     easter_day(1), # Easter Monday     easter_day(-2), # Good Friday     single_day(\"2001-09-11\"), # appearing once     special_day(\"ASCENSION\"),     easter_day(         offset = 60, julian = FALSE, weight = 0.5,         validity = list(start = \"2000-01-01\", end = \"2020-12-01\")     ), # Corpus Christi     special_day(\"WHITMONDAY\"),     special_day(\"ASSUMPTION\"),     special_day(\"ALLSAINTSDAY\"),     special_day(\"ARMISTICE\") ))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/natural_cspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Natural cubic spline — natural_cspline","title":"Natural cubic spline — natural_cspline","text":"Natural cubic spline","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/natural_cspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Natural cubic spline — natural_cspline","text":"","code":"natural_cspline(x, y, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/natural_cspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Natural cubic spline — natural_cspline","text":"x Abscissas knots y Ordinates knots pos Requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/natural_cspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Natural cubic spline — natural_cspline","text":"array corresponding values spline requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/natural_cspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Natural cubic spline — natural_cspline","text":"","code":"s<-natural_cspline(x = c(0,.2,.3, .9,.95), y= c(1,3,5,8,12), pos=seq(0,1,0.01)) plot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Normality Tests — normality_tests","title":"Normality Tests — normality_tests","text":"Set functions test normality time series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normality Tests — normality_tests","text":"","code":"bowmanshenton(data)  doornikhansen(data)  jarquebera(data, k = 0, sample = TRUE)  skewness(data)  kurtosis(data)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normality Tests — normality_tests","text":"data data tested. k number degrees freedom subtracted input time series series residuals. sample boolean indicating unbiased empirical moments computed.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normality Tests — normality_tests","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Normality Tests — normality_tests","text":"bowmanshenton(): Bowman-Shenton test doornikhansen(): Doornik-Hansen test jarquebera(): Jarque-Bera test skewness(): Skewness test kurtosis(): Kurtosis test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/normality_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normality Tests — normality_tests","text":"","code":"x <- rnorm(100) # null bowmanshenton(x) #> Value: 0.09858598  #> P-Value: 0.9519  doornikhansen(x) #> Value: 0.05114668  #> P-Value: 0.9748  jarquebera(x) #> Value: 0.04550024  #> P-Value: 0.9775   x <- random_t(2, 100) # alternative bowmanshenton(x) #> Value: 5068.628  #> P-Value: 0.0000  doornikhansen(x) #> Value: 404.9431  #> P-Value: 0.0000  jarquebera(x) #> Value: 5596.582  #> P-Value: 0.0000"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/outliers_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating Outlier regressors — outliers_variables","title":"Generating Outlier regressors — outliers_variables","text":"Generating Outlier regressors","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/outliers_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating Outlier regressors — outliers_variables","text":"","code":"ao_variable(frequency, start, length, s, pos, date = NULL)  tc_variable(frequency, start, length, s, pos, date = NULL, rate = 0.7)  ls_variable(frequency, start, length, s, pos, date = NULL, zeroended = TRUE)  so_variable(frequency, start, length, s, pos, date = NULL, zeroended = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/outliers_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating Outlier regressors — outliers_variables","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. pos, date date outlier, defined position period compared first date (pos parameter) specific date defined format \"YYYY-MM-DD\". rate decay rate transitory change regressor (see details). zeroended Boolean indicating regressor end 0 (zeroended = TRUE, default) 1 (zeroended = FALSE), argument valid LS .","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/outliers_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating Outlier regressors — outliers_variables","text":"additive outlier (AO, ao_variable) defined : $$AO_t = \\begin{cases}1 &\\text{} t=t_0 \\\\  0 & \\text{}t\\ne t_0\\end{cases}$$ level shift (LS, ls_variable) defined (zeroended = TRUE): $$LS_t = \\begin{cases}-1 &\\text{} t < t_0 \\\\  0 & \\text{}t\\geq t_0 \\end{cases}$$ transitory change (TC, tc_variable) defined : $$TC_t = \\begin{cases} 0 &\\text{}t < t_0 \\\\ \\alpha^{t-t_0} & t\\geq t_0 \\end{cases}$$ seasonal outlier (, so_variable) defined (zeroended = TRUE): $$SO_t = \\begin{cases} 0 &\\text{}t\\geq t_0 \\\\ -1 & \\text{}t < t_0 \\text{ $t$ periode }t_0\\\\  -\\frac{1}{s-1} & \\text{otherwise }\\end{cases}$$","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/outliers_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating Outlier regressors — outliers_variables","text":"","code":"# Outliers in February 2002 ao <- ao_variable(12, c(2000, 1), length = 12 * 4, date = \"2002-02-01\") ls <- ls_variable(12, c(2000, 1), length = 12 * 4, date = \"2002-02-01\") tc <- tc_variable(12, c(2000, 1), length = 12 * 4, date = \"2002-02-01\") so <- so_variable(12, c(2000, 1), length = 12 * 4, date = \"2002-02-01\") plot.ts(ts.union(ao, ls, tc, so),     plot.type = \"single\",     col = c(\"black\", \"orange\", \"green\", \"gray\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_bsplines.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic B-Splines — periodic_bsplines","title":"Periodic B-Splines — periodic_bsplines","text":"Periodic B-Splines","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_bsplines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic B-Splines — periodic_bsplines","text":"","code":"periodic_bsplines(order = 4, period = 1, knots, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_bsplines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic B-Splines — periodic_bsplines","text":"order Order splines (4 cubic) period Period splines (1 default) knots Knots splines ([0, period[) pos Requested positions ([0, period[). rows returned matrix correspond positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_bsplines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic B-Splines — periodic_bsplines","text":"matrix (len(pos) x len(knots))","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_bsplines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic B-Splines — periodic_bsplines","text":"","code":"s<-periodic_bsplines(knots = c(0,.2,.3, .9,.95), pos=seq(0,1,0.01)) matplot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_cspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic cubic spline — periodic_cspline","title":"Periodic cubic spline — periodic_cspline","text":"Periodic cubic spline","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_cspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic cubic spline — periodic_cspline","text":"","code":"periodic_cspline(x, y, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_cspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic cubic spline — periodic_cspline","text":"x Abscissas knots y Ordinates knots pos Requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_cspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic cubic spline — periodic_cspline","text":"array corresponding values spline requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_cspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic cubic spline — periodic_cspline","text":"","code":"s<-periodic_cspline(x = c(0,.2,.3, .9,.95, 1), y= c(1,3,8,5,12, 1), pos=seq(0,1,0.01)) plot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_csplines.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic cardinal cubic splines — periodic_csplines","title":"Periodic cardinal cubic splines — periodic_csplines","text":"Periodic cardinal cubic splines","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_csplines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic cardinal cubic splines — periodic_csplines","text":"","code":"periodic_csplines(x, pos)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_csplines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic cardinal cubic splines — periodic_csplines","text":"x Abscissas knots pos Requested positions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_csplines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic cardinal cubic splines — periodic_csplines","text":"matrix (len(pos) x len(knots))","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_csplines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic cardinal cubic splines — periodic_csplines","text":"","code":"s<-periodic_csplines(x = c(0,.2,.3, .9,.95, 1), pos=seq(0,1,0.01)) matplot(s, type='l')"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_dummies.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic dummies and contrasts — periodic_dummies","title":"Periodic dummies and contrasts — periodic_dummies","text":"Periodic dummies contrasts","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_dummies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic dummies and contrasts — periodic_dummies","text":"","code":"periodic_dummies(frequency, start, length, s)  periodic_contrasts(frequency, start, length, s)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_dummies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic dummies and contrasts — periodic_dummies","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_dummies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodic dummies and contrasts — periodic_dummies","text":"function periodic_dummies creates many time series types periods year (4 12) value one one given type period (ex Q1) periodic_contrasts function based periodic_dummies adds -1 period preceding 1.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/periodic_dummies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodic dummies and contrasts — periodic_dummies","text":"","code":"# periodic dummies for a quarterly series p <- periodic_dummies(4, c(2000, 1), 60) # periodic contrasts for a quarterly series q <- periodic_contrasts(4, c(2000, 1), 60) q[1:9, ] #>       Series 1 Series 2 Series 3 #>  [1,]        1        0        0 #>  [2,]        0        1        0 #>  [3,]        0        0        1 #>  [4,]       -1       -1       -1 #>  [5,]        1        0        0 #>  [6,]        0        1        0 #>  [7,]        0        0        1 #>  [8,]       -1       -1       -1 #>  [9,]        1        0        0"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/print.calendars.html","id":null,"dir":"Reference","previous_headings":"","what":"Calendars Print Methods — print.calendars","title":"Calendars Print Methods — print.calendars","text":"Print functions calendars","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/print.calendars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calendars Print Methods — print.calendars","text":"","code":"# S3 method for class 'JD3_FIXEDDAY' print(x, ...)  # S3 method for class 'JD3_FIXEDWEEKDAY' print(x, ...)  # S3 method for class 'JD3_EASTERDAY' print(x, ...)  # S3 method for class 'JD3_SPECIALDAY' print(x, ...)  # S3 method for class 'JD3_SINGLEDAY' print(x, ...)  # S3 method for class 'JD3_CALENDAR' print(x, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/print.calendars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calendars Print Methods — print.calendars","text":"x object. ... unused parameters.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/r2jd_calendarts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Java CalendarTimeSeries — r2jd_calendarts","title":"Create Java CalendarTimeSeries — r2jd_calendarts","text":"Create Java CalendarTimeSeries","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/r2jd_calendarts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Java CalendarTimeSeries — r2jd_calendarts","text":"","code":"r2jd_calendarts(calendarobs)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/r2jd_calendarts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Java CalendarTimeSeries — r2jd_calendarts","text":"calendarobs list.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/r2jd_calendarts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Java CalendarTimeSeries — r2jd_calendarts","text":"","code":"# example code  obs <- list(     list(start = as.Date(\"1980-01-01\"), end = as.Date(\"1999-12-31\"), value = 2000),     list(start = as.Date(\"2000-01-01\"), end = as.Date(\"2010-01-01\"), value = 1000) ) jobj <- r2jd_calendarts(obs)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ramp_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Ramp regressor — ramp_variable","title":"Ramp regressor — ramp_variable","text":"Ramp regressor","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ramp_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ramp regressor — ramp_variable","text":"","code":"ramp_variable(frequency, start, length, s, range)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ramp_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ramp regressor — ramp_variable","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. range range regressor. vector length 2 containing datesin format \"YYYY-MM-DD\" position series, number periods counting series start.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ramp_variable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ramp regressor — ramp_variable","text":"ramp two dates \\(t_0\\) \\(t_1\\) defined : $$RP_t= \\begin{cases} -1 & \\text{}t\\geq t_0 \\\\ \\frac{t-t_0}{t_1-t_0}-1 & t_0< t < t_1 \\\\ 0 & t \\leq t_1 \\end{cases} $$","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ramp_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ramp regressor — ramp_variable","text":"","code":"# Ramp variable from January 2001 to September 2001 rp <- ramp_variable(12, c(2000, 1), length = 12 * 4, range = c(13, 21)) # Or equivalently rp <- ramp_variable(12, c(2000, 1), length = 12 * 4, range = c(\"2001-01-01\", \"2001-09-02\")) plot.ts(rp)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Range-Mean Regression — rangemean_tstat","title":"Range-Mean Regression — rangemean_tstat","text":"Function perform range-mean regression, trimmed avoid outlier distortion. can used select whether original series transformed log maintain level.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range-Mean Regression — rangemean_tstat","text":"","code":"rangemean_tstat(data, period = 0, groupsize = 0, trim = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range-Mean Regression — rangemean_tstat","text":"data data test. period periodicity data. groupsize number observations per group (trimmed). default group size (groupsize = 0) computed followed: period = 12 period = 6, equal 12; period = 4 equal 12 data least 166 observations, 8 otherwise; period = 3 period = 2 equal 12 data least 166 observations, 6 otherwise; period = 1 equal 9 data least 166 observations, 5 otherwise; equal period otherwise. trim number trimmed observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range-Mean Regression — rangemean_tstat","text":"T-Stat slope range-mean regression.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Range-Mean Regression — rangemean_tstat","text":"First, data divided \\(n\\) groups successive observations length \\(l\\) (groupsize). , first group formed first \\(l\\) observations, second group formed observations \\(1+l\\) \\(2l\\), etc. , group \\(\\), observations sorted trim smallest largest observations rejected (avoid outlier distortion). observations, range (noted \\(y_i\\)) mean (noted \\(m_i\\)) computed. Finally, following regression performed : $$ y_t = \\alpha + \\beta m_t + u_t. $$ function rangemean_tstat returns T-statistic associated \\(\\beta\\). significantly higher 0, log transformation recommended.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/rangemean_tstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range-Mean Regression — rangemean_tstat","text":"","code":"y <- ABS$X0.2.09.10.M # Multiplicative pattern plot(y)  period <- 12 rm_t <- rangemean_tstat(y, period = period, groupsize = period) rm_t # higher than 0 #> [1] 32.41607 # Can be tested: pt(rm_t, period - 2, lower.tail = FALSE) #> [1] 9.196296e-12 # Or : 1 - cdf_t(period - 2, rm_t) #> [1] 9.19631e-12  # Close to 0 rm_t_log <- rangemean_tstat(log(y), period = period, groupsize = period) rm_t_log #> [1] 0.5946804 pt(rm_t_log, period - 2, lower.tail = FALSE) #> [1] 0.2826345"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/reload_dictionaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload dictionaries — reload_dictionaries","title":"Reload dictionaries — reload_dictionaries","text":"Reload dictionaries","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/reload_dictionaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload dictionaries — reload_dictionaries","text":"","code":"reload_dictionaries()"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Tests around the mean or the median — runstests","title":"Runs Tests around the mean or the median — runstests","text":"Functions compute runs test around mean median (testofruns) runs test (testofupdownruns) check randomness data.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Tests around the mean or the median — runstests","text":"","code":"testofruns(data, mean = TRUE, number = TRUE)  testofupdownruns(data, number = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Tests around the mean or the median — runstests","text":"data data tested. mean TRUE, runs around mean. Otherwise, runs around median. number TRUE, test number runs. Otherwise, test lengths runs.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Tests around the mean or the median — runstests","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Runs Tests around the mean or the median — runstests","text":"testofruns(): Runs test around mean median testofupdownruns(): runs test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/runstests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs Tests around the mean or the median — runstests","text":"","code":"x <- random_t(5, 1000) # random values testofruns(x) #> Value: -1.827409  #> P-Value: 0.0676  testofupdownruns(x) #> Value: -1.451316  #> P-Value: 0.1467  # non-random values testofruns(ABS$X0.2.09.10.M) #> Value: -14.05884  #> P-Value: 0.0000  testofupdownruns(ABS$X0.2.09.10.M) #> Value: -10.0303  #> P-Value: 0.0000"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_decomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Function for Seasonal Adjustment Decomposition — sadecomposition","title":"Generic Function for Seasonal Adjustment Decomposition — sadecomposition","text":"Generic function format seasonal adjustment decomposition components. sa_decomposition() generic function defined packages.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_decomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Function for Seasonal Adjustment Decomposition — sadecomposition","text":"","code":"sadecomposition(y, sa, t, s, i, mul)  # S3 method for class 'JD3_SADECOMPOSITION' print(x, n_last_obs = frequency(x$series), ...)  # S3 method for class 'JD3_SADECOMPOSITION' plot(   x,   first_date = NULL,   last_date = NULL,   type_chart = c(\"sa-trend\", \"seas-irr\"),   caption = c(`sa-trend` = \"Y, Sa, trend\", `seas-irr` = \"Sea., irr.\")[type_chart],   colors = c(y = \"#F0B400\", t = \"#1E6C0B\", sa = \"#155692\", s = \"#1E6C0B\", i = \"#155692\"),   ... )  sa_decomposition(x, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_decomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Function for Seasonal Adjustment Decomposition — sadecomposition","text":"y, sa, t, s, , mul seasonal adjustment decomposition parameters. x object print. n_last_obs number observations print (default equal frequency series). ... arguments. first_date, last_date first last date plot (default data used). type_chart chart plot: \"sa-trend\" (default) plots input time series, seasonally adjusted trend; \"seas-irr\" plots seasonal irregular components. caption caption plot. colors colours used plot.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_decomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Function for Seasonal Adjustment Decomposition — sadecomposition","text":"\"JD3_SADECOMPOSITION\" object.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Preprocessing Function — sa_preprocessing","title":"Generic Preprocessing Function — sa_preprocessing","text":"Generic function preprocessing defined packages.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Preprocessing Function — sa_preprocessing","text":"","code":"sa_preprocessing(x, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sa_preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Preprocessing Function — sa_preprocessing","text":"x, ... parameters.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","title":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","text":"Decompose SARIMA Model three components trend, seasonal, irregular","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","text":"","code":"sarima_decompose(model, rmod = 0, epsphi = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","text":"model SARIMA model decompose. rmod trend threshold. epsphi seasonal tolerance (degrees).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_decompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","text":"UCARIMA model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_decompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose SARIMA Model into three components trend, seasonal, irregular — sarima_decompose","text":"","code":"model <- sarima_model(period = 12, d = 1, bd = 1, theta = -0.6, btheta = -0.5) ucm <- sarima_decompose(model)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate SARIMA Model — sarima_estimate","title":"Estimate SARIMA Model — sarima_estimate","text":"Estimate SARIMA Model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate SARIMA Model — sarima_estimate","text":"","code":"sarima_estimate(   x,   order = c(0, 0, 0),   seasonal = list(order = c(0, 0, 0), period = NA),   mean = FALSE,   xreg = NULL,   eps = 1e-09 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate SARIMA Model — sarima_estimate","text":"x univariate time series (class Ts object). order vector specifying non-seasonal part ARIMA model: AR order, degree differencing, MA order. seasonal specification seasonal part ARIMA model seasonal frequency (default equals frequency(x)). Either  list components order period numeric vector specifying seasonal order (default period used). mean SARIMA model include intercept term. xreg vector matrix external regressors. eps precision.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate SARIMA Model — sarima_estimate","text":"object class JD3_SARIMA_ESTIMATE containing: estimated parameters, raw data, regressors, standard errors, log-likelihood (number observations, number effective observations, number parameters, log-likelihood, adjusted log-likelihood, AIC, AICC, BIC, BICC, sum squares), residuals, orders model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate SARIMA Model — sarima_estimate","text":"","code":"y <- ABS$X0.2.09.10.M sarima_estimate(y, order = c(0, 1, 1), seasonal = c(0, 1, 1)) #> SARIMA model: (0,1,1) (0,1,1) [12] #>  #> Coefficients #>  theta(1) btheta(1)  #>   -0.8764   -0.3875  #>  #> No regression variables #>  #> For a more detailed output, use the 'summary()' function."},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_hannan_rissanen.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","title":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","text":"Estimate ARIMA Model Hannan-Rissanen method","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_hannan_rissanen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","text":"","code":"sarima_hannan_rissanen(   x,   order = c(0, 0, 0),   seasonal = list(order = c(0, 0, 0), period = NA),   initialization = c(\"Ols\", \"Levinson\", \"Burg\"),   biasCorrection = TRUE,   finalCorrection = TRUE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_hannan_rissanen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","text":"x univariate time series (TS object). order vector specifying non-seasonal part ARIMA model: AR order, degree differencing, MA order. seasonal specification seasonal part ARIMA model seasonal frequency (default equals frequency(x)). Either  list components order period numeric vector specifying seasonal order (default period used). initialization Algorithm used computation long order auto-regressive model (used estimate innovations) biasCorrection Bias correction finalCorrection Final correction implemented Tramo","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_hannan_rissanen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","text":"object class JD3_SARIMA estimated coefficient.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_hannan_rissanen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate ARIMA Model with Hannan-Rissanen method — sarima_hannan_rissanen","text":"","code":"y <- ABS$X0.2.09.10.M model<- sarima_hannan_rissanen(y, order = c(0, 1, 1), seasonal = c(0, 1, 1))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","title":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","text":"Seasonal ARIMA model (Box-Jenkins)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","text":"","code":"sarima_model(   name = \"sarima\",   period,   phi = NULL,   d = 0,   theta = NULL,   bphi = NULL,   bd = 0,   btheta = NULL )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","text":"name name model. period period model. phi coefficients regular auto-regressive polynomial (\\(1 + \\phi_1B + \\phi_2B + ...\\)). True signs. d regular differencing order. theta coefficients regular moving average polynomial (\\(1 + \\theta_1B + \\theta_2B + ...\\)). True signs. bphi coefficients seasonal auto-regressive polynomial. True signs. bd seasonal differencing order. btheta coefficients seasonal moving average polynomial. True signs.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","text":"\"JD3_SARIMA\" model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seasonal ARIMA model (Box-Jenkins) — sarima_model","text":"","code":"mod1 <- sarima_model(period = 12, d = 1, bd = 1, theta = 0.2, btheta = 0.2)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"SARIMA Properties — sarima_properties","title":"SARIMA Properties — sarima_properties","text":"SARIMA Properties","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SARIMA Properties — sarima_properties","text":"","code":"sarima_properties(model, nspectrum = 601, nacf = 36)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SARIMA Properties — sarima_properties","text":"model \"JD3_SARIMA\" model (created sarima_model()). nspectrum number points [0, pi] calculate spectrum. nacf maximum lag calculate acf.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SARIMA Properties — sarima_properties","text":"List acf spectrum model.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SARIMA Properties — sarima_properties","text":"","code":"mod1 <- sarima_model(period = 12, d = 1, bd = 1, theta = 0.2, btheta = 0.2) sarima_properties(mod1) #> $acf #>  [1] 1.0816 0.2080 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 #> [11] 0.0000 0.0400 0.2080 0.0400 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 #> [21] 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 #> [31] 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 #>  #> $spectrum #>   [1]          Inf 3.048542e+06 1.904078e+05 3.757001e+04 1.186911e+04 #>   [6] 4.852008e+03 2.334284e+03 1.256435e+03 7.341164e+02 4.566364e+02 #>  [11] 2.983896e+02 2.029030e+02 1.425764e+02 1.029812e+02 7.614304e+01 #>  [16] 5.744465e+01 4.410402e+01 3.438651e+01 2.717781e+01 2.174303e+01 #>  [21] 1.758611e+01 1.436518e+01 1.184022e+01 9.839817e+00 8.239721e+00 #>  [26] 6.948573e+00 5.898350e+00 5.037809e+00 4.327925e+00 3.738686e+00 #>  [31] 3.246795e+00 2.834010e+00 2.485938e+00 2.191132e+00 1.940430e+00 #>  [36] 1.726445e+00 1.543192e+00 1.385786e+00 1.250227e+00 1.133215e+00 #>  [41] 1.032020e+00 9.443727e-01 8.683780e-01 8.024479e-01 7.452470e-01 #>  [46] 6.956493e-01 6.527022e-01 6.155984e-01 5.836523e-01 5.562807e-01 #>  [51] 5.329876e-01 5.133509e-01 4.970123e-01 4.836678e-01 4.730614e-01 #>  [56] 4.649785e-01 4.592414e-01 4.557054e-01 4.542555e-01 4.548043e-01 #>  [61] 4.572899e-01 4.616751e-01 4.679464e-01 4.761139e-01 4.862123e-01 #>  [66] 4.983013e-01 5.124678e-01 5.288280e-01 5.475312e-01 5.687639e-01 #>  [71] 5.927555e-01 6.197859e-01 6.501944e-01 6.843922e-01 7.228773e-01 #>  [76] 7.662546e-01 8.152617e-01 8.708028e-01 9.339933e-01 1.006220e+00 #>  [81] 1.089223e+00 1.185206e+00 1.296994e+00 1.428255e+00 1.583818e+00 #>  [86] 1.770149e+00 1.996066e+00 2.273849e+00 2.621021e+00 3.063300e+00 #>  [91] 3.639693e+00 4.411733e+00 5.481206e+00 7.026638e+00 9.385309e+00 #>  [96] 1.325968e+01 2.032288e+01 3.543243e+01 7.816714e+01 3.064959e+02 #> [101]          Inf 2.943031e+02 7.207113e+01 3.136880e+01 1.727554e+01 #> [106] 1.082219e+01 7.354422e+00 5.286213e+00 3.958638e+00 3.058604e+00 #> [111] 2.422097e+00 1.956562e+00 1.606619e+00 1.337517e+00 1.126578e+00 #> [116] 9.585047e-01 8.226844e-01 7.115721e-01 6.196891e-01 5.429822e-01 #> [121] 4.784025e-01 4.236228e-01 3.768426e-01 3.366523e-01 3.019363e-01 #> [126] 2.718029e-01 2.455329e-01 2.225412e-01 2.023485e-01 1.845590e-01 #> [131] 1.688442e-01 1.549293e-01 1.425837e-01 1.316125e-01 1.218503e-01 #> [136] 1.131562e-01 1.054098e-01 9.850760e-02 9.236050e-02 8.689160e-02 #> [141] 8.203436e-02 7.773109e-02 7.393172e-02 7.059277e-02 6.767649e-02 #> [146] 6.515017e-02 6.298547e-02 6.115800e-02 5.964686e-02 5.843431e-02 #> [151] 5.750545e-02 5.684806e-02 5.645236e-02 5.631091e-02 5.641846e-02 #> [156] 5.677197e-02 5.737051e-02 5.821533e-02 5.930988e-02 6.065993e-02 #> [161] 6.227369e-02 6.416201e-02 6.633862e-02 6.882045e-02 7.162802e-02 #> [166] 7.478593e-02 7.832347e-02 8.227534e-02 8.668261e-02 9.159382e-02 #> [171] 9.706645e-02 1.031686e-01 1.099814e-01 1.176017e-01 1.261455e-01 #> [176] 1.357529e-01 1.465941e-01 1.588768e-01 1.728572e-01 1.888533e-01 #> [181] 2.072643e-01 2.285963e-01 2.534986e-01 2.828152e-01 3.176596e-01 #> [186] 3.595251e-01 4.104521e-01 4.732880e-01 5.521044e-01 6.528896e-01 #> [191] 7.847468e-01 9.620683e-01 1.208715e+00 1.566635e+00 2.115265e+00 #> [196] 3.020441e+00 4.678112e+00 8.240682e+00 1.836512e+01 7.273337e+01 #> [201]          Inf 7.121737e+01 1.760750e+01 7.736028e+00 4.300066e+00 #> [206] 2.718460e+00 1.864074e+00 1.351791e+00 1.021189e+00 7.958388e-01 #> [211] 6.355973e-01 5.177514e-01 4.286740e-01 3.597914e-01 3.054933e-01 #> [216] 2.619849e-01 2.266264e-01 1.975359e-01 1.733430e-01 1.530311e-01 #> [221] 1.358335e-01 1.211630e-01 1.085643e-01 9.767984e-02 8.822580e-02 #> [226] 7.997471e-02 7.274258e-02 6.637932e-02 6.076161e-02 5.578736e-02 #> [231] 5.137157e-02 4.744302e-02 4.394169e-02 4.081681e-02 3.802518e-02 #> [236] 3.552991e-02 3.329939e-02 3.130645e-02 2.952766e-02 2.794279e-02 #> [241] 2.653431e-02 2.528706e-02 2.418788e-02 2.322540e-02 2.238978e-02 #> [246] 2.167254e-02 2.106643e-02 2.056528e-02 2.016389e-02 1.985798e-02 #> [251] 1.964412e-02 1.951963e-02 1.948259e-02 1.953183e-02 1.966684e-02 #> [256] 1.988785e-02 2.019580e-02 2.059239e-02 2.108008e-02 2.166216e-02 #> [261] 2.234286e-02 2.312736e-02 2.402198e-02 2.503423e-02 2.617309e-02 #> [266] 2.744911e-02 2.887474e-02 3.046458e-02 3.223582e-02 3.420870e-02 #> [271] 3.640705e-02 3.885912e-02 4.159840e-02 4.466486e-02 4.810642e-02 #> [276] 5.198084e-02 5.635824e-02 6.132432e-02 6.698466e-02 7.347052e-02 #> [281] 8.094663e-02 8.962196e-02 9.976479e-02 1.117241e-01 1.259605e-01 #> [286] 1.430922e-01 1.639646e-01 1.897582e-01 2.221624e-01 2.636637e-01 #> [291] 3.180451e-01 3.912920e-01 4.933356e-01 6.416493e-01 8.693482e-01 #> [296] 1.245623e+00 1.935810e+00 3.421523e+00 7.650732e+00 3.040077e+01 #> [301]          Inf 2.996315e+01 7.432050e+00 3.275878e+00 1.826725e+00 #> [306] 1.158509e+00 7.969072e-01 5.797125e-01 4.392965e-01 3.434122e-01 #> [311] 2.751074e-01 2.247822e-01 1.866719e-01 1.571465e-01 1.338286e-01 #> [316] 1.151087e-01 9.986612e-02 8.730138e-02 7.683171e-02 6.802443e-02 #> [321] 6.055287e-02 5.416674e-02 4.867172e-02 4.391509e-02 3.977554e-02 #> [326] 3.615574e-02 3.297692e-02 3.017475e-02 2.769634e-02 2.549789e-02 #> [331] 2.354288e-02 2.180071e-02 2.024557e-02 1.885561e-02 1.761224e-02 #> [336] 1.649957e-02 1.550401e-02 1.461384e-02 1.381899e-02 1.311076e-02 #> [341] 1.248162e-02 1.192506e-02 1.143546e-02 1.100796e-02 1.063839e-02 #> [346] 1.032316e-02 1.005924e-02 9.844082e-03 9.675561e-03 9.551976e-03 #> [351] 9.472002e-03 9.434678e-03 9.439389e-03 9.485861e-03 9.574158e-03 #> [356] 9.704686e-03 9.878205e-03 1.009584e-02 1.035911e-02 1.066995e-02 #> [361] 1.103076e-02 1.144445e-02 1.191450e-02 1.244502e-02 1.304087e-02 #> [366] 1.370777e-02 1.445238e-02 1.528255e-02 1.620747e-02 1.723795e-02 #> [371] 1.838669e-02 1.966875e-02 2.110197e-02 2.270762e-02 2.451122e-02 #> [376] 2.654351e-02 2.884183e-02 3.145180e-02 3.442965e-02 3.784532e-02 #> [381] 4.178660e-02 4.636488e-02 5.172327e-02 5.804795e-02 6.558484e-02 #> [386] 7.466410e-02 8.573741e-02 9.943584e-02 1.166629e-01 1.387492e-01 #> [391] 1.677199e-01 2.067810e-01 2.612547e-01 3.405096e-01 4.623104e-01 #> [396] 6.637938e-01 1.033746e+00 1.830939e+00 4.102598e+00 1.633581e+01 #> [401]          Inf 1.616737e+01 4.018430e+00 1.774884e+00 9.917656e-01 #> [406] 6.302709e-01 4.344371e-01 3.166808e-01 2.404672e-01 1.883658e-01 #> [411] 1.512083e-01 1.238003e-01 1.030206e-01 8.690298e-02 7.415882e-02 #> [416] 6.391539e-02 5.556464e-02 4.867251e-02 4.292249e-02 3.807946e-02 #> [421] 3.396578e-02 3.044530e-02 2.741225e-02 2.478345e-02 2.249283e-02 #> [426] 2.048732e-02 1.872396e-02 1.716765e-02 1.578954e-02 1.456569e-02 #> [431] 1.347616e-02 1.250424e-02 1.163581e-02 1.085895e-02 1.016348e-02 #> [436] 9.540729e-03 8.983266e-03 8.484700e-03 8.039534e-03 7.643023e-03 #> [441] 7.291074e-03 6.980155e-03 6.707222e-03 6.469655e-03 6.265216e-03 #> [446] 6.091998e-03 5.948397e-03 5.833084e-03 5.744980e-03 5.683237e-03 #> [451] 5.647231e-03 5.636546e-03 5.650971e-03 5.690499e-03 5.755322e-03 #> [456] 5.845844e-03 5.962682e-03 6.106681e-03 6.278929e-03 6.480780e-03 #> [461] 6.713879e-03 6.980194e-03 7.282058e-03 7.622218e-03 8.003896e-03 #> [466] 8.430859e-03 8.907515e-03 9.439017e-03 1.003140e-02 1.069175e-02 #> [471] 1.142840e-02 1.225121e-02 1.317187e-02 1.420432e-02 1.536525e-02 #> [476] 1.667481e-02 1.815745e-02 1.984309e-02 2.176858e-02 2.397979e-02 #> [481] 2.653431e-02 2.950528e-02 3.298667e-02 3.710081e-02 4.200936e-02 #> [486] 4.792950e-02 5.515844e-02 6.411171e-02 7.538455e-02 8.985400e-02 #> [491] 1.088557e-01 1.345053e-01 1.703167e-01 2.224792e-01 3.027352e-01 #> [496] 4.356464e-01 6.799689e-01 1.207051e+00 2.710753e+00 1.081816e+01 #> [501]          Inf 1.075532e+01 2.679354e+00 1.186140e+00 6.643082e-01 #> [506] 4.231412e-01 2.923379e-01 2.135910e-01 1.625633e-01 1.276372e-01 #> [511] 1.026980e-01 8.427946e-02 7.029768e-02 5.943895e-02 5.084189e-02 #> [516] 4.392275e-02 3.827459e-02 3.360677e-02 2.970721e-02 2.641827e-02 #> [521] 2.362081e-02 2.122346e-02 1.915517e-02 1.736008e-02 1.579375e-02 #> [526] 1.442052e-02 1.321146e-02 1.214295e-02 1.119557e-02 1.035319e-02 #> [531] 9.602379e-03 8.931867e-03 8.332152e-03 7.795189e-03 7.314131e-03 #> [536] 6.883138e-03 6.497208e-03 6.152047e-03 5.843966e-03 5.569789e-03 #> [541] 5.326781e-03 5.112594e-03 4.925210e-03 4.762908e-03 4.624226e-03 #> [546] 4.507937e-03 4.413023e-03 4.338661e-03 4.284204e-03 4.249176e-03 #> [551] 4.233258e-03 4.236289e-03 4.258258e-03 4.299309e-03 4.359738e-03 #> [556] 4.440004e-03 4.540736e-03 4.662740e-03 4.807020e-03 4.974793e-03 #> [561] 5.167513e-03 5.386899e-03 5.634972e-03 5.914093e-03 6.227020e-03 #> [566] 6.576968e-03 6.967682e-03 7.403537e-03 7.889649e-03 8.432014e-03 #> [571] 9.037689e-03 9.715007e-03 1.047385e-02 1.132601e-02 1.228561e-02 #> [576] 1.336968e-02 1.459894e-02 1.599868e-02 1.760015e-02 1.944220e-02 #> [581] 2.157370e-02 2.405668e-02 2.697095e-02 3.042045e-02 3.454262e-02 #> [586] 3.952223e-02 4.561236e-02 5.316702e-02 6.269375e-02 7.494085e-02 #> [591] 9.104877e-02 1.128252e-01 1.432750e-01 1.876944e-01 2.561391e-01 #> [596] 3.696581e-01 5.786429e-01 1.030160e+00 2.320219e+00 9.286549e+00 #> [601]          Inf #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Seasonal ARIMA — sarima_random","title":"Simulate Seasonal ARIMA — sarima_random","text":"Simulate Seasonal ARIMA","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Seasonal ARIMA — sarima_random","text":"","code":"sarima_random(model, length, stde = 1, tdegree = 0, seed = -1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Seasonal ARIMA — sarima_random","text":"model \"JD3_SARIMA\" model (see sarima_model() function). length length output series. stde deviation normal distribution innovations simulated series. Unused tdegree larger 0. tdegree degrees freedom T distribution innovations. tdegree = 0 normal distribution used. seed seed random numbers generator. Negative values mean random seeds","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Seasonal ARIMA — sarima_random","text":"numeric vector simulated series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/sarima_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Seasonal ARIMA — sarima_random","text":"","code":"# Airline model s_model <- sarima_model(period = 12, d = 1, bd = 1, theta = 0.2, btheta = 0.2) x <- sarima_random(s_model, length = 64, seed = 0) plot(x, type = \"l\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen.html","id":null,"dir":"Reference","previous_headings":"","what":"Canova-Hansen seasonality test — seasonality_canovahansen","title":"Canova-Hansen seasonality test — seasonality_canovahansen","text":"Canova-Hansen seasonality test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canova-Hansen seasonality test — seasonality_canovahansen","text":"","code":"seasonality_canovahansen(   data,   period,   type = c(\"Contrast\", \"Dummy\", \"Trigonometric\"),   lag1 = TRUE,   kernel = c(\"Bartlett\", \"Square\", \"Welch\", \"Tukey\", \"Hamming\", \"Parzen\"),   order = NA,   start = 1 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canova-Hansen seasonality test — seasonality_canovahansen","text":"data input data. period Tested periodicity. Can missing input time series type Trigonometric variables, seasonal dummies seasonal contrasts. lag1 Lagged variable regression model. kernel Kernel used compute robust Newey-West covariance matrix. order truncation parameter used compute robust Newey-West covariance matrix. start Position first observation series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canova-Hansen seasonality test — seasonality_canovahansen","text":"list FTest seasonal variables, joint test details stability different seasonal variables","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canova-Hansen seasonality test — seasonality_canovahansen","text":"","code":"s <- log(ABS$X0.2.20.10.M) seasonality_canovahansen(s, 12, type = \"Contrast\") #> $seasonality #> $seasonality$value #> [1] 792.4501 #>  #> $seasonality$pvalue #> [1] 8.183367e-269 #>  #>  #> $joint #> [1] 2.775692 #>  #> $details #>  [1] 0.19827842 0.79054669 0.67577086 0.13224572 0.09191475 0.12770741 #>  [7] 0.11695464 0.68944569 1.66909605 1.33869879 1.22087073 1.97065542 #>  seasonality_canovahansen(s, 12, type = \"Trigonometric\") #> $seasonality #> $seasonality$value #> [1] 792.4501 #>  #> $seasonality$pvalue #> [1] 8.183367e-269 #>  #>  #> $joint #> [1] 2.775692 #>  #> $details #> [1] 0.5923512 1.8096344 1.4492822 0.9050069 2.0166651 0.9540823 #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen_trigs.html","id":null,"dir":"Reference","previous_headings":"","what":"Canova-Hansen test using trigonometric variables — seasonality_canovahansen_trigs","title":"Canova-Hansen test using trigonometric variables — seasonality_canovahansen_trigs","text":"Canova-Hansen test using trigonometric variables","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen_trigs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canova-Hansen test using trigonometric variables — seasonality_canovahansen_trigs","text":"","code":"seasonality_canovahansen_trigs(   data,   periods,   lag1 = TRUE,   kernel = c(\"Bartlett\", \"Square\", \"Welch\", \"Tukey\", \"Hamming\", \"Parzen\"),   order = NA,   original = FALSE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen_trigs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canova-Hansen test using trigonometric variables — seasonality_canovahansen_trigs","text":"data input data. periods Periodicities. lag1 Lagged variable regression model. kernel Kernel used compute robust Newey-West covariance matrix. order truncation parameter used compute robust Newey-West covariance matrix. original TRUE original algorithm, FALSE solution proposed T. Proietti (based Ox code).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_canovahansen_trigs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canova-Hansen test using trigonometric variables — seasonality_canovahansen_trigs","text":"","code":"s <- log(ABS$X0.2.20.10.M) freqs <- seq(0.01, 0.5, 0.001) plot(seasonality_canovahansen_trigs(s, 1 / freqs, original = FALSE), type = \"l\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_combined.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"\"X12\" Test Seasonality","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_combined.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"seasonality_combined(   data,   period = NA,   firstperiod = cycle(data)[1],   mul = TRUE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_combined.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"data input data. period Tested periodicity. Can missing input time series firstperiod Position cycle first obs. example, monthly, firstperiod = 1 means January. data \"ts\" object, firstperiod = 1 default. mul boolean indicating seasonal decomposition multiplicative (mul = TRUE) additive (mul = FALSE).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_combined.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"","text":"Combined test presence identifiable seasonality (see Ladiray Quenneville, 1999).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_combined.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_combined(s) #> $seasonality #> [1] \"PRESENT\" #>  #> $kruskalwallis #> Value: 333.9183  #> P-Value: 0.0000  #>  #> $stable #> $stable$SSM #> [1] 33.26444 #>  #> $stable$dfM #> [1] 11 #>  #> $stable$SSR #> [1] 2.0756 #>  #> $stable$dfR #> [1] 412 #>  #> $stable$test #> Value: 600.2623  #> P-Value: 0.0000  #>  #>  #> $evolutive #> $evolutive$SSM #> [1] 0.004203856 #>  #> $evolutive$dfM #> [1] 33 #>  #> $evolutive$SSR #> [1] 2.008952 #>  #> $evolutive$dfR #> [1] 363 #>  #> $evolutive$test #> Value: 0.02301817  #> P-Value: 1.0000  #>  #>  seasonality_combined(random_t(2, 1000), 7) #> $seasonality #> [1] \"NONE\" #>  #> $kruskalwallis #> Value: 14.8307  #> P-Value: 0.0216  #>  #> $stable #> $stable$SSM #> [1] 241.9807 #>  #> $stable$dfM #> [1] 6 #>  #> $stable$SSR #> [1] 91944.35 #>  #> $stable$dfR #> [1] 993 #>  #> $stable$test #> Value: 0.4355658  #> P-Value: 0.8554  #>  #>  #> $evolutive #> $evolutive$SSM #> [1] 12099.66 #>  #> $evolutive$dfM #> [1] 141 #>  #> $evolutive$SSR #> [1] 75339.45 #>  #> $evolutive$dfR #> [1] 846 #>  #> $evolutive$test #> Value: 0.9636119  #> P-Value: 0.6010  #>  #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":null,"dir":"Reference","previous_headings":"","what":"F-test on seasonal dummies — seasonality_f","title":"F-test on seasonal dummies — seasonality_f","text":"F-test seasonal dummies","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"F-test on seasonal dummies — seasonality_f","text":"","code":"seasonality_f(data, period = NA, model = c(\"AR\", \"D1\", \"WN\"), nyears = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"F-test on seasonal dummies — seasonality_f","text":"data input data. period Tested periodicity. Can missing input time series model model use residuals. nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"F-test on seasonal dummies — seasonality_f","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"F-test on seasonal dummies — seasonality_f","text":"Estimation model seasonal dummies. Joint F-test coefficients dummies.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"F-test on seasonal dummies — seasonality_f","text":"","code":"seasonality_f(ABS$X0.2.09.10.M, model = \"D1\") #> Value: 388.7851  #> P-Value: 0.0000  seasonality_f(random_t(2, 1000), 7) #> Value: 1.252006  #> P-Value: 0.2772"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":null,"dir":"Reference","previous_headings":"","what":"Friedman Seasonality Test — seasonality_friedman","title":"Friedman Seasonality Test — seasonality_friedman","text":"Friedman Seasonality Test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Friedman Seasonality Test — seasonality_friedman","text":"","code":"seasonality_friedman(data, period = NA, nyears = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Friedman Seasonality Test — seasonality_friedman","text":"data input data. period Tested periodicity. Can missing input time series nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Friedman Seasonality Test — seasonality_friedman","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Friedman Seasonality Test — seasonality_friedman","text":"Non parametric test (\"ANOVA\"-type).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_friedman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Friedman Seasonality Test — seasonality_friedman","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_friedman(s) #> Value: 301.0967  #> P-Value: 0.0000  seasonality_friedman(random_t(2, 1000), 12) #> Value: 9.708063  #> P-Value: 0.5568"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"Kruskall-Wallis Seasonality Test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"","code":"seasonality_kruskalwallis(data, period, nyears = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"data input data. period Tested periodicity. Can missing input time series nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"Non parametric test ranks.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_kruskalwallis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kruskall-Wallis Seasonality Test — seasonality_kruskalwallis","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_kruskalwallis(s) #> Value: 333.9183  #> P-Value: 0.0000  seasonality_kruskalwallis(random_t(2, 1000), 7) #> Value: 6.62143  #> P-Value: 0.3573"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"Modified QS Seasonality Test (Maravall)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"","code":"seasonality_modified_qs(data, period = NA, nyears = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"data input data. period Tested periodicity. Can missing input time series nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"value test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"Thresholds p-values: p.9=2.49, p.95=3.83, p.99=7.06, p.999=11.88. Computed 100.000.000 random series (different lengths). Remark: length series impact p-values, mainly short series. critical.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_modified_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified QS Seasonality Test (Maravall) — seasonality_modified_qs","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_modified_qs(s) #> [1] 747.7281"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodogram Seasonality Test — seasonality_periodogram","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"Periodogram Seasonality Test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"","code":"seasonality_periodogram(data, period = NA, nyears = 0)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"data input data. period Tested periodicity. Can missing input time series nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"Tests sum periodogram seasonal frequencies.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_periodogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Periodogram Seasonality Test — seasonality_periodogram","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_periodogram(s) #> Value: 598.6239  #> P-Value: 0.0000  seasonality_periodogram(random_t(2, 1000), 7) #> Value: 1.419803  #> P-Value: 0.2037"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"QS (seasonal Ljung-Box) test. — seasonality_qs","title":"QS (seasonal Ljung-Box) test. — seasonality_qs","text":"QS (seasonal Ljung-Box) test.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QS (seasonal Ljung-Box) test. — seasonality_qs","text":"","code":"seasonality_qs(data, period = NA, nyears = 0, type = 1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QS (seasonal Ljung-Box) test. — seasonality_qs","text":"data input data. period Tested periodicity. Can missing input time series nyears Number periods number cycles considered test, end series: periods (positive value) years (negative values). default (nyears = 0), entire sample used. type 1 positive autocorrelations, -1 negative autocorrelations, 0 autocorrelations. default (type = 1)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QS (seasonal Ljung-Box) test. — seasonality_qs","text":"c(\"JD3_TEST\", \"JD3\") object (see statisticaltest() details).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/seasonality_qs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QS (seasonal Ljung-Box) test. — seasonality_qs","text":"","code":"s <- do_stationary(log(ABS$X0.2.09.10.M))$ddata seasonality_qs(s) #> Value: 747.7281  #> P-Value: 0.0000  seasonality_qs(random_t(2, 1000), 7) #> Value: 0  #> P-Value: 1.0000"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"Function allowing customize ARIMA model structure automatic modelling disabled.(see example)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"","code":"set_arima(   x,   mean = NA,   mean.type = c(NA, \"Undefined\", \"Fixed\", \"Initial\"),   p = NA,   d = NA,   q = NA,   bp = NA,   bd = NA,   bq = NA,   coef = NA,   coef.type = c(NA, \"Undefined\", \"Fixed\", \"Initial\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"x specification customize, must \"SPEC\" class object (see details). mean fix coefficient mean. mean = 0, mean disabled. mean.type character defining mean coefficient estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficient estimated), \"Fixed\" = coefficients fixed value provided user, \"Initial\" = value defined user used initial condition. p, d, q, bp, bd, bq specify order SARIMA model form ARIMA(p,d,q)(bp,bd,bd). coef vector providing coefficients regular seasonal AR MA polynomials. vector length must equal sum regular seasonal AR MA orders. coefficients shall provided following order: regular AR (Phi; p elements), regular MA  (Theta; q elements), seasonal AR (BPhi; bp elements) seasonal MA (BTheta; bq elements). E.g.: arima.coef=c(0.6,0.7) p=1, q=0,bp=1 bq=0. coef.type vector defining ARMA coefficients estimation procedure. Possible procedures : \"Undefined\" = use user-defined input (.e. coefficients estimated), \"Fixed\" = coefficients fixed value provided user, \"Initial\" = value defined user used initial condition.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"information reg-arima modelling JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ARIMA Model Structure in Pre-Processing Specification — set_arima","text":"","code":"# create default spec # my_spec<-rjd3x13::x13_spec(\"rsa5c\") # disable automatic arima modelling # my_spec<-set_automodel(my_spec, enabled = FALSE) # customize arima model # my_spec <-set_arima(my_spec,mean = 0.2, #                      mean.type = \"Fixed\", #                      p = 1, d = 2, q = 0, #                      bp = 1, bd = 1, bq = 0, #                      coef = c(0.6,0.7), #                      coef.type = c(\"Initial\",\"Fixed\"))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"Function allowing customize Arima model identification procedure.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"","code":"set_automodel(   x,   enabled = NA,   acceptdefault = NA,   cancel = NA,   ub1 = NA,   ub2 = NA,   reducecv = NA,   ljungboxlimit = NA,   tsig = NA,   ubfinal = NA,   checkmu = NA,   mixed = NA,   fct = NA,   balanced = NA,   amicompare = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"x specification customize, must \"SPEC\" class object (see details). enabled logical. TRUE, automatic modelling ARIMA model enabled. FALSE, parameters ARIMA model can specified. acceptdefault logical. TRUE, default model (ARIMA(0,1,1)(0,1,1)) chosen first step automatic model identification, Ljung-Box Q statistics residuals acceptable. attempt made identify better model. Default = FALSE cancel numeric cancellation limit. limit AR MA roots assumed equal. option used automatic identification differencing order. difference moduli AR MA root (estimating ARIMA(1,0,1)(1,0,1) models second step automatic identification differencing polynomial) smaller cancellation limit, two roots cancel . Default = 0.1. ub1 numeric, first unit root limit. threshold value initial unit root test automatic differencing procedure. one roots estimation ARIMA(2,0,0)(1,0,0) plus mean model, performed first step automatic model identification procedure, larger first unit root limit modulus, set equal unity. Default =   1.030928. ub2 numeric, second unit root limit. one roots estimation ARIMA(1,0,1)(1,0,1) plus mean model, performed second step automatic model identification procedure, larger second unit root limit modulus, checked common factor corresponding AR MA polynomials ARMA model can cancelled (see automdl.cancel). cancellation, AR root set equal unity (.e. differencing order changes). Default = 1.136364. reducecv numeric, ReduceCV. percentage outlier critical value reduced identified model found Ljung-Box statistic unacceptable confidence coefficient. parameter 0 1, active automatic outlier identification enabled. reduced critical value set (1 - ReduceCV) x CV, CV original critical value. Default =  0.14268. ljungboxlimit numeric, Ljung Box limit, setting acceptance criterion confidence intervals Ljung-Box Q-statistic. LjungBox Q statistics residuals final model greater Ljung Box limit, model rejected, outlier critical value reduced, model outlier identification (specified) redone reduced value. Default = 0.95. tsig numeric, arma limit. threshold value t-statistics ARMA coefficients constant term used final test model parsimony. highest order ARMA coefficient t-value smaller value magnitude, order model reduced. constant term t-value smaller ARMA limit magnitude, removed set regressors. Default=1. ubfinal (REGARIMA/X13 Specific) numeric, final unit root limit. threshold value final unit root test. magnitude AR root final model smaller final unit root limit, unit root assumed, order AR polynomial reduced one appropriate order differencing (non-seasonal, seasonal) increased. parameter value greater one. Default = 1.05. checkmu (REGARIMA/X13 Specific) logical indicating automatic model selection checks significance constant term. mixed (REGARIMA/X13 Specific) logical. variable controls whether ARIMA models non-seasonal AR MA terms seasonal AR MA terms considered automatic model identification procedure. FALSE, model AR MA terms seasonal non-seasonal parts model can acceptable, provided AR MA terms either seasonal non-seasonal terms. fct (REGARIMA/X13 Specific) numeric. TODO. balanced (REGARIMA/X13 Specific) logical TRUE, automatic model identification procedure preference balanced models (.e. models order combined AR differencing operators equal order combined MA operators). Default = FALSE amicompare (TRAMO Specific) logical. TRUE, program compares model identified automatic procedure default model (\\(ARIMA(0,1,1)(0,1,1)\\)) model best fit selected. Criteria considered residual diagnostics, model structure number outliers.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"information reg-arima modelling JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_automodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Arima Model Identification in Pre-Processing Specification — set_automodel","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<-set_automodel(init_spec, #                        enabled = FALSE, #                        acceptdefault = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Set estimation sub-span and quality check specification — set_basic","title":"Set estimation sub-span and quality check specification — set_basic","text":"Function allowing check series can processed define sub-span estimation performed","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set estimation sub-span and quality check specification — set_basic","text":"","code":"set_basic(   x,   type = c(NA, \"All\", \"From\", \"To\", \"Between\", \"Last\", \"First\", \"Excluding\"),   d0 = NULL,   d1 = NULL,   n0 = 0,   n1 = 0,   preliminary.check = NA,   preprocessing = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set estimation sub-span and quality check specification — set_basic","text":"x specification customize, must \"SPEC\" class object (see details). type, d0, d1, n0, n1 parameters specify sub-span . d0 d1 characters format \"YYYY-MM-DD\" specify first/last date span type equals \"\", \"\" \"\". Date corresponding d0 included sub-span Date corresponding d1 excluded sub span n0 n1 numeric specify number periods beginning/end series used defining sub-span (type equals \"First\", \"Last\") exclude (type equals \"Excluding\"). preliminary.check Boolean check quality input series exclude highly problematic ones (e.g. series number identical observations /missing values pre-specified threshold values). preprocessing (REGARIMA/X13 Specific) Boolean enable/disable pre-processing. Option disabled moment.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set estimation sub-span and quality check specification — set_basic","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set estimation sub-span and quality check specification — set_basic","text":"information JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_basic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set estimation sub-span and quality check specification — set_basic","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # estimation on sub-span between two dates (date d1 is excluded) # new_spec<-set_basic(init_spec,type = \"Between\",d0 = \"2014-01-01\", # d1 = \"2019-01-01\", preliminary.check = TRUE, preprocessing = TRUE) # Estimation on the first 60 observations # new_spec <-set_basic(init_spec,Type=\"First\", n0 = 60, #                      preliminary.check = TRUE, #                      preprocessing= TRUE) # Estimation on the last 60 observations # new_spec <-set_basic(init_spec,Type=\"Last\", n1 = 60, #                      preliminary.check = TRUE, #                      preprocessing= TRUE) # Estimation excluding 60 observations at the beginning and 36 at the end of the series # new_spec <-set_basic(init_spec,Type=\"Excluding\", n0=60, n1=36, #                      preliminary.check = TRUE, #                      preprocessing= TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Benchmarking Specification — set_benchmarking","title":"Set Benchmarking Specification — set_benchmarking","text":"Function allowing perform benchmarking procedure decomposition step seasonal adjustment (disabled default). benchmarking refers procedure  ensuring consistency year seasonally adjusted raw (calendar adjusted) data, seasonal  adjustment can cause discrepancies annual totals seasonally  adjusted series corresponding annual totals raw (calendar adjusted) series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Benchmarking Specification — set_benchmarking","text":"","code":"set_benchmarking(   x,   enabled = NA,   target = c(NA, \"CalendarAdjusted\", \"Original\"),   rho = NA,   lambda = NA,   forecast = NA,   bias = c(NA, \"None\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Benchmarking Specification — set_benchmarking","text":"x specification customize, must \"SPEC\" class object (see details). enabled Boolean enable user perform benchmarking. target specifies target series benchmarking procedure, can raw series (\"Normal\"); series adjusted calendar effects (\"CalendarAdjusted\"). rho value AR(1) parameter (set 0 1) function used benchmarking. Default =1. lambda parameter function used benchmarking relates weights regression equation; typically equal 0, 1/2 1. forecast Boolean indicating forecasts seasonally adjusted series target variable (target) used benchmarking computation benchmarking constrain also applied forecasting period. bias TODO","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Benchmarking Specification — set_benchmarking","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Benchmarking Specification — set_benchmarking","text":"information benchmarking JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_benchmarking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Benchmarking Specification — set_benchmarking","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<- set_benchmarking(init_spec, #                            enabled = TRUE, #                            target = \"Normal\", #                            rho = 0.8, #                            lambda = 0.5, #                            forecast = FALSE, #                            bias = \"None\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Easter effect correction in Pre-Processing Specification — set_easter","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"Set Easter effect correction Pre-Processing Specification","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"","code":"set_easter(   x,   enabled = NA,   julian = NA,   duration = NA,   test = c(NA, \"Add\", \"Remove\", \"None\"),   coef = NA,   coef.type = c(NA, \"Estimated\", \"Fixed\"),   type = c(NA, \"Unused\", \"Standard\", \"IncludeEaster\", \"IncludeEasterMonday\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"x specification customize, must \"SPEC\" class object (see details). enabled logical indicating program considers Easter effect pre-processing model. Default = TRUE. julian logical indicating program uses Julian Easter (expressed Gregorian calendar). duration numeric indicating duration Easter effect (length days, 1 20). Default value = 8 REGARIMA/X-13 6 TRAMO. test defines pre-tests significance Easter effect based t-statistic (Easter effect considered significant t-statistic greater 1.96): \"Add\" = Easter effect variable included initial regression model can added RegARIMA model test; \"Remove\" = Easter effect variable belongs initial regression model can removed RegARIMA model test; \"None\" = Easter effect variable pre-tested included model. coef set coefficient easter regressor.(Test parameter set \"None\") coef.type character defining easter regressor coefficient estimation procedure. Possible procedures : \"Estimated\" =  coefficient estimated, \"Fixed\" = coefficients fixed. default coefficient estimated. type (TRAMO specific) character specifies presence length Easter effect: \"Unused\" = Easter effect considered; \"Standard\" = influences period n days strictly Easter Sunday; \"IncludeEaster\" = influences entire period (n) including Easter Sunday; \"IncludeEasterMonday\" = influences entire period (n) including Easter Monday.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_easter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Easter effect correction in Pre-Processing Specification — set_easter","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<-set_easter(init_spec, #                     enabled = TRUE, #                     duration = 12, #                    test = \"None\", #                    type = \"IncludeEasterMonday\") # sa<-rjd3x13::x13(ABS$X0.2.09.10.M,new_spec)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"Function allowing define numeric boundaries estimation define sub-span reg-arima (tramo) modelling performed (pre-processing step)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"","code":"set_estimate(   x,   type = c(NA, \"All\", \"From\", \"To\", \"Between\", \"Last\", \"First\", \"Excluding\"),   d0 = NULL,   d1 = NULL,   n0 = 0,   n1 = 0,   tol = NA,   exact.ml = NA,   unit.root.limit = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"x specification customize, must \"SPEC\" class object (see details). type, d0, d1, n0, n1 parameters specify sub-span . d0 d1 characters format \"YYYY-MM-DD\" specify first/last date span type equals \"\", \"\" \"\". Date corresponding d0 included sub-span Date corresponding d1 excluded sub span n0 n1 numeric specify number periods beginning/end series used defining sub-span (type equals \"First\", \"Last\") exclude (type equals \"Excluding\"). tol numeric, convergence tolerance. absolute changes log-likelihood function compared value check convergence estimation iterations. (default setting 0.0000001) exact.ml (TRAMO specific) logical, exact maximum likelihood estimation. TRUE, program performs exact maximum likelihood estimation. FASLE, Unconditional Least Squares method used. (Default=TRUE) unit.root.limit (TRAMO specific) numeric, final unit root limit. threshold value final unit root test identification differencing orders. magnitude AR root final model smaller number, unit root assumed, order AR polynomial reduced one appropriate order differencing (non-seasonal, seasonal) increased.(Default value: 0.96)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Numeric Estimation Parameters and Modelling Span — set_estimate","text":"","code":"# init_spec <- rjd3tramoseats::spec_tramoseats(\"rsafull\") # new_spec<-set_estimate(init_spec, type= \"From\", d0 = \"2012-01-01\", tol = 0.0000002, # exact.ml = FALSE, unit.root.limit = 0.98)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Outlier Detection Parameters — set_outlier","title":"Set Outlier Detection Parameters — set_outlier","text":"Function allowing customize automatic outlier detection process built pre-processing step (regarima tramo).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Outlier Detection Parameters — set_outlier","text":"","code":"set_outlier(   x,   span.type = c(NA, \"All\", \"From\", \"To\", \"Between\", \"Last\", \"First\", \"Excluding\"),   d0 = NULL,   d1 = NULL,   n0 = 0,   n1 = 0,   outliers.type = NA,   critical.value = NA,   tc.rate = NA,   method = c(NA, \"AddOne\", \"AddAll\"),   maxiter = NA,   lsrun = NA,   eml.est = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Outlier Detection Parameters — set_outlier","text":"x specification customize, must \"SPEC\" class object (see details). span.type, d0, d1, n0, n1 parameters specify sub-span outliers detected. d0 d1 characters format \"YYYY-MM-DD\" specify first/last date span type equals \"\", \"\" \"\". n0 n1 numerics specify number periods beginning/end series used span (type equals \"\", \"\") exclude (type equals \"Excluding\"). outliers.type vector characters outliers automatically detected. \"AO\" additive outliers, \"TC\" transitory changes, \"LS\" level shifts, \"\" seasonal outliers. example outliers.type = c(\"AO\", \"LS\") enable detection additive outliers level shifts. outliers.type = NULL outliers.type = character(), automatic detection outliers disabled. Default value = outliers.type = c(\"AO\", \"LS\", \"TC\") critical.value numeric. Critical value outlier detection procedure. equal 0 critical value automatically determined number observations outlier detection time span. (Default value = 4 REGARIMA/X13 3.5 TRAMO) tc.rate rate decay transitory change outlier. (Default = 0.7). method (REGARIMA/X13 Specific) determines program successively adds detected outliers model. Currently, \"AddOne\" method supported. maxiter (REGARIMA/X13 Specific) maximum number iterations (Default = 30). lsrun (REGARIMA/X13 Specific) number successive level shifts test cancellation (Default = 0). eml.est (TRAMO Specific) logical exact likelihood estimation method. controls method applied parameter estimation intermediate steps. TRUE, exact likelihood estimation method used. FALSE, fast Hannan-Rissanen method used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Outlier Detection Parameters — set_outlier","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()). Seasonal adjustment process performed, type Outlier allocated pre-defined component decomposition: \"AO\" \"TC\" irregular, \"LS\" trend \"\" seasonal component.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Outlier Detection Parameters — set_outlier","text":"information outliers auxiliary variables JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Outlier Detection Parameters — set_outlier","text":"","code":"# init_spec <- rjd3tramoseats::spec_tramoseats(\"rsafull\") # new_spec<-set_outlier(init_spec, span.type= \"From\", d0 = \"2012-01-01\", #                      outliers.type = c(\"LS\", \"AO\"), #                      critical.value = 5, #                      tc.rate =0.85)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"Function allowing select trading-days regressors used calendar correction pre-processing step seasonal adjustment procedure. default \"TradingDays\", easter specific effect enabled. (see set_easter) built-regressors meant correct type day effect take account holiday. user-defined regressors built.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"","code":"set_tradingdays(   x,   option = c(NA, \"TradingDays\", \"WorkingDays\", \"TD2c\", \"TD3\", \"TD3c\", \"TD4\", \"None\",     \"UserDefined\"),   calendar.name = NA,   uservariable = NA,   stocktd = NA,   test = c(NA, \"None\", \"Remove\", \"Add\", \"Separate_T\", \"Joint_F\"),   coef = NA,   coef.type = c(NA, \"Fixed\", \"Estimated\"),   automatic = c(NA, \"Unused\", \"FTest\", \"WaldTest\", \"Aic\", \"Bic\"),   pftd = NA,   autoadjust = NA,   leapyear = c(NA, \"LeapYear\", \"LengthOfPeriod\", \"None\"),   leapyear.coef = NA,   leapyear.coef.type = c(NA, \"Fixed\", \"Estimated\") )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"x specification customize, must \"SPEC\" class object (see details). option specify set trading days regression variables: \"TradingDays\" = six contrast variables, type day (Monday Saturday) vs Sundays; \"WorkingDays\" = one working (week days) vs non-working (week-ends) day contrast variable; \"TD2c\" = one working (Mondays Saturdays) vs non-working (Sundays) day contrast variable; \"TD3\" = two contrast variables: week-days vs Sundays  Saturdays vs Sundays; \"TD3c\" = two contrast variables: week-days (Mondays Thursdays) vs Sundays  Fridays+Saturdays vs Sundays; \"TD4\" = three contrast variables: week-days (Mondays Thursdays) vs Sundays, Fridays vs Sundays, Saturdays vs Sundays; \"None\" = correction trading days; \"UserDefined\" = userdefined trading days regressors. calendar.name name (string) user-defined calendar taken account generating built-regressors set option (\"UserDefined\").(see examples) uservariable vector characters specify name user-defined calendar regressors. specified, automatically set option = \"UserDefined\". Names modelling_context, see example. stocktd numeric indicating day month inventories stock reported (denote last day month, set variable 31). specified, automatically set option = \"None\". See stock_td function details. test defines pre-tests significance trading day regression variables based AICC statistics: \"None\" = trading day variables pre-tested included model; (REGARIMA/X-13 specific) \"Add\" = trading day variables included initial regression model can added RegARIMA model test; \"Remove\" = trading day variables belong initial regression model can removed RegARIMA model test; (TRAMO specific) \"Separate_T\" = t-test applied trading day variable separately trading day variables included RegArima model least one t-statistic greater 2.6 two t-statistics greater 2.0 (absolute terms); \"Joint_F\" = joint F-test significance trading day variables. trading day effect significant F statistic greater 0.95. coef vector coefficients trading-days regressors. coef.type, leapyear.coef.type vector defining coefficients fixed estimated. automatic defines whether calendar effects added model manually (\"Unused\") automatically. automatic selection, choice number calendar variables can based F-Test (\"FTest\", TRAMO specific), Wald Test (\"WaldTest\"), minimizing AIC BIC; model higher F-value chosen, provided higher pftd). pftd (TRAMO SPECIFIC) numeric. p-value used assess significance pre-tested calendar effects. autoadjust logical indicating program corrects automatically raw series leap year effect leap year regressor significant. used data log transformed. leapyear character specify whether include leap-year effect model: \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period (REGARIMA/X-13 specific), \"None\" = effect included. Default: leap year effect regressor included built-set trading day regressors. leapyear.coef coefficient leap year regressor.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_tradingdays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Calendar effects correction in Pre-Processing Specification — set_tradingdays","text":"","code":"# Pre-defined regressors # y_raw<-ABS$X0.2.09.10.M # init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<-set_tradingdays(init_spec, #                          option = \"TD4\", #                          test =  \"None\", #                        coef=c(0.7,NA,0.5), #        coef.type=c(\"Fixed\",\"Estimated\",\"Fixed\"), #        leapyear=\"LengthOfPeriod\", #        leapyear.coef=0.6) # sa<-rjd3x13::x13(y_raw,new_spec)  # Pre-defined regressors based on user-defined calendar ### create a calendar BE <- national_calendar(list(     fixed_day(7, 21),     special_day(\"NEWYEAR\"),     special_day(\"CHRISTMAS\"),     special_day(\"MAYDAY\"),     special_day(\"EASTERMONDAY\"),     special_day(\"ASCENSION\"),     special_day(\"WHITMONDAY\"),     special_day(\"ASSUMPTION\"),     special_day(\"ALLSAINTSDAY\"),     special_day(\"ARMISTICE\") )) ## put into a context my_context <- modelling_context(calendars = list(cal = BE)) ## create a specification # init_spec <- rjd3x13::x13_spec(\"RSA5c\") ## modify the specification # new_spec<-set_tradingdays(init_spec, #                          option = \"TradingDays\", calendar.name=\"cal\") ## estimate with context # sa<-rjd3x13::x13(y_raw,new_spec, context=my_context)  # User-defined regressors # init_spec <- rjd3x13::x13_spec(\"RSA5c\") # add regressors to context # variables<-list(Monday,Tuesday, Wednesday, # Thursday, Friday, Saturday) # my_context<-modelling_context(variables=variables) # create a new spec (here default group name: r) # new_spec<-set_tradingdays(init_spec, #                          option = \"UserDefined\", # uservariable=c(\"r.Monday\",\"r.Tuesday\",\"r.Wednesday\",\"r.Thursday\",\"r.Friday\",\"r.Saturday\"), # test = \"None\") # estimate with context # sa<-rjd3x13::x13(y_raw,new_spec, context=my_context)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"Set Log-level Transformation Decomposition scheme Pre-Processing Specification","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"","code":"set_transform(   x,   fun = c(NA, \"Auto\", \"Log\", \"None\"),   adjust = c(NA, \"None\", \"LeapYear\", \"LengthOfPeriod\"),   outliers = NA,   aicdiff = NA,   fct = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"x specification customize, must \"SPEC\" class object (see details). fun transformation input series: \"None\" = transformation series; \"Log\" = takes log series; \"Auto\" = program tests log-level specification. adjust pre-adjustment input series length period leap year effects: \"None\" = adjustment; \"LeapYear\" = leap year effect; \"LengthOfPeriod\" = length period. Modifications variable taken account function = \"Log\". outliers Boolean indicating pre-correction large outliers (AO LS ) done test log-level specification (fun = \"Auto\"). default FALSE. aicdiff (REGARIMA/X-13 specific)  numeric defining difference AICC needed accept transformation automatic transformation selection chosen (considered fun = \"Auto\"). Default= -2. fct (TRAMO specific) numeric controlling bias log/level pre-test: transform.fct> 1 favours levels, transform.fct< 1 favours logs. Considered fun = \"Auto\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"x specification parameter must JD3_X13_SPEC\" class object generated rjd3x13::x13_spec() (\"JD3_REGARIMA_SPEC\" generated rjd3x13::spec_regarima() \"JD3_TRAMOSEATS_SPEC\" generated rjd3tramoseats::spec_tramoseats() \"JD3_TRAMO_SPEC\" generated rjd3tramoseats::spec_tramo()).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"information JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/set_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Log-level Transformation and Decomposition scheme in Pre-Processing Specification — set_transform","text":"","code":"# init_spec <- rjd3x13::x13_spec(\"RSA5c\") # new_spec<- set_transform(init_spec, #                        fun = \"Log\", #                        outliers = TRUE) # sa<-rjd3x13::x13(ABS$X0.2.09.10.M,new_spec)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/single_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a holiday on a Single Day — single_day","title":"Set a holiday on a Single Day — single_day","text":"Allows set holiday -occurring event.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/single_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a holiday on a Single Day — single_day","text":"","code":"single_day(date, weight = 1)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/single_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a holiday on a Single Day — single_day","text":"date date holiday format \"YYYY-MM-DD\". weight weight associated holiday.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/single_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set a holiday on a Single Day — single_day","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/single_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a holiday on a Single Day — single_day","text":"","code":"single_day(\"1999-03-19\") #> Single date: 1999-03-19"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Pre-Defined Holidays to choose from — special_day","title":"List of Pre-Defined Holidays to choose from — special_day","text":"Allows define holiday choosing list pre-specified events, equivalent use fixed_day easter_day functions.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Pre-Defined Holidays to choose from — special_day","text":"","code":"special_day(event, offset = 0, weight = 1, validity = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Pre-Defined Holidays to choose from — special_day","text":"event event add (see details). offset position holiday relation selected pre-specified holiday measured days (can positive negative). default offset = 0. weight weight associated holiday. validity validity period: either NULL (full sample) named list \"start\" /\"end\" dates format \"YYYY-MM-DD\".","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of Pre-Defined Holidays to choose from — special_day","text":"Possible values :","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List of Pre-Defined Holidays to choose from — special_day","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/special_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Pre-Defined Holidays to choose from — special_day","text":"","code":"# To add Easter Monday special_day(\"EASTERMONDAY\") #> Prespecified holiday: event=EASTERMONDAY # To define a holiday for the day after Christmas, with validity and weight special_day(\"CHRISTMAS\",     offset = 1, weight = 0.8,     validity = list(start = \"2000-01-01\", end = \"2020-12-01\") ) #> Prespecified holiday: event=CHRISTMAS , offset=1 , weight=0.8 , from=2000-01-01 , to=2020-12-01"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/statisticaltest.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Function For 'JDemetra+' Tests — statisticaltest","title":"Generic Function For 'JDemetra+' Tests — statisticaltest","text":"Generic function format results 'JDemetra+' tests.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/statisticaltest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Function For 'JDemetra+' Tests — statisticaltest","text":"","code":"statisticaltest(val, pval, dist = NULL)  # S3 method for class 'JD3_TEST' print(x, details = FALSE, ...)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/statisticaltest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Function For 'JDemetra+' Tests — statisticaltest","text":"val, pval, dist statistical parameters. x object print. details boolean indicating statistical distribution printed. ... arguments (ignored).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/statisticaltest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Function For 'JDemetra+' Tests — statisticaltest","text":"c(\"JD3_TEST\", \"JD3\") object list three parameters: value statistical value test. pvalue p-value test. distribution statistical distribution used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/statisticaltest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Function For 'JDemetra+' Tests — statisticaltest","text":"","code":"udr_test <- testofupdownruns(random_t(5, 1000)) udr_test # default print #> Value: -0.400363  #> P-Value: 0.6889  print(udr_test, details = TRUE) # with the distribution #> Value: -0.400363  #> P-Value: 0.6889  #> [ Normal with Mean = 0.0 and Stdev = 1.0 ]"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":null,"dir":"Reference","previous_headings":"","what":"Trading day Regressor for Stock series — stock_td","title":"Trading day Regressor for Stock series — stock_td","text":"Allows generate specific regressor correcting trading days effects Stock series.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trading day Regressor for Stock series — stock_td","text":"","code":"stock_td(frequency, start, length, s, w = 31)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trading day Regressor for Stock series — stock_td","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. w indicates day month inventories stocks reported. (denote last day month enter 31).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trading day Regressor for Stock series — stock_td","text":"Time series (object class c(\"ts\",\"mts\",\"matrix\")).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trading day Regressor for Stock series — stock_td","text":"regressor value -1 w-th day Sunday, 1 Monday 0 otherwise.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/stock_td.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trading day Regressor for Stock series — stock_td","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/studentdistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Student Distribution — density_t","title":"The Student Distribution — density_t","text":"Density, (cumulative) distribution function random generation Student distribution.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/studentdistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Student Distribution — density_t","text":"","code":"density_t(df, x)  cdf_t(df, x)  random_t(df, n)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/studentdistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Student Distribution — density_t","text":"df degrees freedom. x vector quantiles. n number observations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/studentdistribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Student Distribution — density_t","text":"","code":"# T with 2 degrees of freedom. z <- density_t(2, .01 * seq(-100, 100, 1)) # T with 2 degrees of freedom. 100 random z <- random_t(2, 100)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":null,"dir":"Reference","previous_headings":"","what":"Trading day regressors without holidays — td","title":"Trading day regressors without holidays — td","text":"Allows generate trading day regressors (many defined groups), taking account 7 less different types days, Monday Sunday, specific holidays. Regressors corrected long term mean.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trading day regressors without holidays — td","text":"","code":"td(   frequency,   start,   length,   s,   groups = c(1, 2, 3, 4, 5, 6, 0),   contrasts = TRUE )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trading day regressors without holidays — td","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. groups Groups days. length array must 7. indicates group week day belongs. first item corresponds Mondays last one Sundays. group used contrasts (usually Sundays) identified 0. groups identified 1, 2,... n (<= 6). instance, usual trading days defined c(1, 2, 3, 4, 5, 6, 0), week days c(1, 1, 1, 1, 1, 0, 0), week days, Saturdays, Sundays c(1, 1, 1, 1, 1, 2, 0) etc. contrasts true, variables defined contrasts 0-group. Otherwise, raw number days provided.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trading day regressors without holidays — td","text":"Time series (object class c(\"ts\",\"mts\",\"matrix\")) corresponding group, starting 0-group (contrasts = FALSE) 1-group (contrasts = TRUE).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trading day regressors without holidays — td","text":"Aggregated values monthly quarterly numbers days belonging given group. Contrasts differences number days given group (1 6) number days reference group (0).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trading day regressors without holidays — td","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trading day regressors without holidays — td","text":"","code":"# Monthly regressors for Trading Days: each type of day is different # contrasts to Sundays (6 series) regs_td <- td(12, c(2020, 1), 60, groups = c(1, 2, 3, 4, 5, 6, 0), contrasts = TRUE) # Quarterly regressors for Working Days: week days are similar # contrasts to week-end days (1 series) regs_wd <- td(4, c(2020, 1), 60, groups = c(1, 1, 1, 1, 1, 0, 0), contrasts = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_canovahansen.html","id":null,"dir":"Reference","previous_headings":"","what":"Canova-Hansen test for stable trading days — td_canovahansen","title":"Canova-Hansen test for stable trading days — td_canovahansen","text":"Canova-Hansen test stable trading days","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_canovahansen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canova-Hansen test for stable trading days — td_canovahansen","text":"","code":"td_canovahansen(   s,   differencing,   kernel = c(\"Bartlett\", \"Square\", \"Welch\", \"Tukey\", \"Hamming\", \"Parzen\"),   order = NA )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_canovahansen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canova-Hansen test for stable trading days — td_canovahansen","text":"s ts object corresponds input time series test. differencing Differencing lags. kernel Kernel used compute robust covariance matrix. order truncation parameter used compute robust covariance matrix.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_canovahansen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canova-Hansen test for stable trading days — td_canovahansen","text":"list ftest td, joint test details stability different days (starting Mondays).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_canovahansen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canova-Hansen test for stable trading days — td_canovahansen","text":"","code":"s <- log(ABS$X0.2.20.10.M) td_canovahansen(s, c(1, 12)) #> $td #> $td$value #> [1] 21.31204 #>  #> $td$pvalue #> [1] 9.130842e-22 #>  #>  #> $joint #> [1] 2.522328 #>  #> $details #> [1] 0.9437191 1.5160559 1.8346550 1.8401795 1.1661557 0.9028408 1.7277995 #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual Trading Days Test — td_f","title":"Residual Trading Days Test — td_f","text":"Residual Trading Days Test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual Trading Days Test — td_f","text":"","code":"td_f(   s,   model = c(\"D1\", \"DY\", \"DYD1\", \"WN\", \"AIRLINE\", \"R011\", \"R100\"),   nyears = 0 )"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual Trading Days Test — td_f","text":"s ts object corresponds input time series test. model model use residuals. See details. nyears integer corresponds length sub series, starting end series, used test: number periods (positive value) years (negative values). default (nyears = 0), entire sample used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_f.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residual Trading Days Test — td_f","text":"function performs residual seasonality test joint F-Test coefficients trading days regressors. Several specifications can used model: model = \"WN\" following model used: $$ y_t - \\bar y =\\beta TD_t +  \\varepsilon_t $$ model = \"D1\" (default) following model used: $$ \\Delta y_t - \\overline{\\Delta y} =\\beta \\Delta TD_t +  \\varepsilon_t $$ model = \"DY\" following model used: $$ \\Delta_s y_t - \\overline{\\Delta_s y} =\\beta \\Delta_s TD_t +  \\varepsilon_t $$ model = \"DYD1\" following model used: $$ \\Delta_s\\Delta y_t - \\overline{\\Delta_s \\Delta y} =\\beta \\Delta_s \\Delta TD_t + \\varepsilon_t $$ model = \"AIRLINE\" following model used: $$ y_t =\\beta TD_t +  \\varepsilon_t \\text{ }\\varepsilon_t \\sim ARIMA(0,1,1)(0,1,1) $$ model = \"R011\" following model used: $$ y_t =\\beta TD_t +  \\varepsilon_t \\text{ }\\varepsilon_t \\sim ARIMA(0,1,1) $$ model = \"R100\" following model used: $$ y_t =\\alpha_0 + \\alpha_1 y_{t-1} + \\beta TD_t +  \\varepsilon_t $$","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual Trading Days Test — td_f","text":"","code":"td_f(ABS$X0.2.09.10.M) #> Value: 0.5919107  #> P-Value: 0.7369"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_timevarying.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio test on time varying trading days — td_timevarying","title":"Likelihood ratio test on time varying trading days — td_timevarying","text":"Likelihood ratio test time varying trading days","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_timevarying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio test on time varying trading days — td_timevarying","text":"","code":"td_timevarying(s, groups = c(1, 2, 3, 4, 5, 6, 0), contrasts = FALSE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_timevarying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio test on time varying trading days — td_timevarying","text":"s tested time series groups groups days used generate regression variables. contrasts covariance matrix multivariate random walk model used time-varying coefficients related contrasts TRUE, actual number days (days driven variance) FALSE.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_timevarying.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio test on time varying trading days — td_timevarying","text":"Chi2 test","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/td_timevarying.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood ratio test on time varying trading days — td_timevarying","text":"","code":"s <- log(ABS$X0.2.20.10.M) td_timevarying(s) #> Value: 75.04509  #> P-Value: 0.0000"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a time series object — to_ts","title":"Creates a time series object — to_ts","text":"Creates time series object","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a time series object — to_ts","text":"","code":"to_ts(source, id, type = \"All\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a time series object — to_ts","text":"source Source time series id Identifier time series (source-dependent) type Type requested information (Data, Metadata...). default.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a time series object — to_ts","text":"object type \"JD3_TS\". List containing identifiers, data metadata","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_tscollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a collection of time series — to_tscollection","title":"Creates a collection of time series — to_tscollection","text":"Creates collection time series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_tscollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a collection of time series — to_tscollection","text":"","code":"to_tscollection(source, id, type = \"All\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_tscollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a collection of time series — to_tscollection","text":"source Source collection time series id Identifier collection time series (source-dependent) type Type requested information (Data, Metadata...). default.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_tscollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a collection of time series — to_tscollection","text":"object type \"JD3_TSCOLLECTION\". List containing identifiers, metadata series (data).","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/to_tscollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a collection of time series — to_tscollection","text":"","code":"# id is split due to length restrictions # id1 <- \"demetra://tsprovider/Txt/20111201/SERIES?datePattern=dd%2FMM%2Fyyyy&delimiter=SEMICOLON&\" # id2 <- \"file=C%3A%5CDocuments%5CIPI%5CData%5CIPI_nace4.csv#seriesIndex=0\" # id<-paste(id1,id2) # source <-\"Txt\" # my_collection<-to_tscollection(source,id)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/trigonometric_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigonometric variables — trigonometric_variables","title":"Trigonometric variables — trigonometric_variables","text":"Computes trigonometric variables different frequencies.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/trigonometric_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigonometric variables — trigonometric_variables","text":"","code":"trigonometric_variables(frequency, start, length, s, seasonal_frequency = NULL)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/trigonometric_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigonometric variables — trigonometric_variables","text":"frequency Frequency series, number periods per year (12, 4, 3, 2...) start, length First date (array first year first period, instance c(1980, 1)) number periods output variables. Can also provided s argument s time series used get dates trading days variables. supplied parameters frequency, start length ignored. seasonal_frequency seasonal frequencies. default fundamental seasonal frequency harmonics used.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/trigonometric_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trigonometric variables — trigonometric_variables","text":"Denote \\(P\\) value frequency (= period) \\(f_1\\), ..., \\(f_n\\) frequencies provides seasonal_frequency (seasonal_frequency = NULL \\(n=\\lfloor P/2\\rfloor\\) \\(f_i\\)=). trigonometric_variables returns matrix size \\(length\\times(2n)\\). date \\(t\\) associated period \\(m\\) (\\(m\\[1,P]\\)), columns \\(2i\\) \\(2i-1\\) equal : $$ \\cos \\left( \\frac{2 \\pi}{P}  \\times m \\times f_i \\right) \\text{ } \\sin \\left( \\frac{2 \\pi}{P} \\times m \\times f_i \\right) $$ Take example case first date (date) January, frequency = 12 (monthly time series), length = 12 seasonal_frequency = NULL. first frequency, \\(\\lambda_1 = 2\\pi /12\\) represents fundamental seasonal frequency frequencies (\\(\\lambda_2 = 2\\pi /12 \\times 2\\), ..., \\(\\lambda_6 = 2\\pi /12 \\times 6\\)) five harmonics. output matrix equal : $$ \\begin{pmatrix} \\cos(\\lambda_1) & \\sin (\\lambda_1) & \\cdots & \\cos(\\lambda_6) & \\sin (\\lambda_6) \\\\ \\cos(\\lambda_1\\times 2) & \\sin (\\lambda_1\\times 2) & \\cdots & \\cos(\\lambda_6\\times 2) & \\sin (\\lambda_6\\times 2)\\\\ \\vdots & \\vdots & \\cdots & \\vdots & \\vdots \\\\ \\cos(\\lambda_1\\times 12) & \\sin (\\lambda_1\\times 12) & \\cdots & \\cos(\\lambda_6\\times 12) & \\sin (\\lambda_6\\times 12) \\end{pmatrix} $$","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_adjust.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","title":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","text":"Multiplicative adjustment time series leap year / length periods","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_adjust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","text":"","code":"ts_adjust(s, method = c(\"LeapYear\", \"LengthOfPeriod\"), reverse = FALSE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_adjust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","text":"s original time series method \"LeapYear\": correction leap year \"LengthOfPeriod\": correction length periods reverse Adjustment reverse operation","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_adjust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","text":"interpolated series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_adjust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplicative adjustment of a time series for leap year / length of periods — ts_adjust","text":"","code":"y <- ABS$X0.2.09.10.M ts_adjust(y) #>            Jan       Feb       Mar       Apr       May       Jun       Jul #> 1982                                460.1000  502.6000  443.8000  459.1000 #> 1983  379.2000  381.3750  472.1000  503.4000  510.6000  462.4000  468.3000 #> 1984  414.7000  403.7802  484.7000  487.3000  597.9000  500.4000  543.4000 #> 1985  516.3000  456.5402  525.8000  587.7000  700.3000  561.8000  602.8000 #> 1986  570.5000  482.4696  547.4000  594.3000  751.6000  553.4000  663.2000 #> 1987  613.9000  517.7821  599.9000  674.1000  714.0000  670.5000  720.9000 #> 1988  631.0000  536.8474  678.1000  715.7000  740.8000  722.0000  683.5000 #> 1989  631.5000  556.9286  719.0000  697.6000  764.8000  786.3000  715.1000 #> 1990  678.2000  591.4339  726.8000  744.1000  815.5000  832.4000  710.3000 #> 1991  694.0000  610.0991  719.2000  748.2000  828.2000  746.9000  794.5000 #> 1992  740.0000  648.6784  701.5000  831.4000  878.6000  826.0000  788.2000 #> 1993  762.1000  648.7411  754.1000  840.7000  906.6000  887.1000  771.5000 #> 1994  745.7000  670.3321  821.5000  831.7000  908.0000  912.6000  782.9000 #> 1995  752.4000  688.5938  811.2000  906.0000  927.2000  906.8000  880.6000 #> 1996  833.1000  718.0371  812.0000  895.2000  962.8000  908.6000  908.0000 #> 1997  840.9000  733.8946  857.9000  849.0000  994.8000  830.2000  971.1000 #> 1998  917.3000  722.5946  822.9000  970.1000  970.2000  849.4000 1042.3000 #> 1999  942.0000  744.9929  903.2000  953.2000 1011.2000  894.4000 1054.5000 #> 2000  924.9000  777.5569  901.9000 1024.7000 1052.3000 1165.5000  859.3000 #> 2001  971.9000  821.8732 1017.5000 1039.2000 1123.5000 1024.9000 1100.8000 #> 2002 1027.9000  848.9125 1043.9000 1075.3000 1190.9000 1143.0000 1075.7000 #> 2003 1099.3000  908.5402 1092.7000 1222.4000 1237.1000 1237.9000 1182.0000 #> 2004 1182.9000  964.2017 1131.4000 1277.1000 1280.3000 1384.1000 1305.9000 #> 2005 1246.3000 1046.5616 1300.8000 1153.7000 1264.2000 1454.2000 1290.1000 #> 2006 1193.7000 1046.9652 1204.5000 1348.6000 1267.6000 1429.0000 1412.0000 #> 2007 1267.3000 1056.3482 1331.6000 1302.6000 1365.1000 1491.5000 1462.3000 #> 2008 1397.8000 1111.0043 1351.7000 1396.6000 1421.1000 1401.6000 1582.3000 #> 2009 1451.0000 1066.0339 1386.9000 1509.1000 1519.4000 1500.5000 1570.7000 #> 2010 1469.1000 1121.8277 1379.9000 1389.7000 1427.2000 1551.4000 1581.0000 #> 2011 1412.6000 1127.4777 1321.6000 1472.6000 1408.9000 1471.9000 1532.5000 #> 2012 1362.4000 1102.4319 1349.2000 1391.2000 1456.9000 1616.4000 1423.4000 #> 2013 1397.4000 1123.5429 1397.3000 1339.1000 1441.9000 1537.4000 1390.6000 #> 2014 1451.0000 1074.4080 1293.2000 1442.9000 1411.8000 1461.6000 1501.6000 #> 2015 1471.2000 1063.2089 1367.2000 1442.2000 1428.7000 1480.9000 1540.9000 #> 2016 1519.2000 1125.9086 1451.5000 1451.0000 1449.7000 1596.1000 1468.3000 #> 2017 1428.5000 1102.1536 1370.3000 1522.6000 1452.4000 1557.2000 1445.5000 #>            Aug       Sep       Oct       Nov       Dec #> 1982  438.4000  465.1000  452.7000  522.9000  889.3000 #> 1983  458.2000  482.7000  485.3000  568.7000  963.7000 #> 1984  503.4000  522.8000  556.6000  623.2000 1039.4000 #> 1985  582.5000  563.1000  637.1000  697.1000 1187.5000 #> 1986  581.1000  661.9000  665.6000  700.9000 1367.9000 #> 1987  601.6000  672.3000  709.1000  743.2000 1460.1000 #> 1988  650.9000  723.3000  729.6000  870.3000 1570.0000 #> 1989  723.8000  757.9000  751.7000  923.8000 1569.4000 #> 1990  759.4000  741.1000  786.6000  931.5000 1563.1000 #> 1991  770.4000  741.5000  858.6000  944.7000 1600.3000 #> 1992  723.6000  819.8000  902.5000  968.6000 1650.9000 #> 1993  728.7000  844.7000  886.9000  970.0000 1710.5000 #> 1994  798.8000  887.0000  934.6000 1000.4000 1817.5000 #> 1995  873.9000  856.8000  920.6000 1067.4000 1857.2000 #> 1996  888.9000  833.7000  933.7000 1081.6000 1837.6000 #> 1997  836.0000  939.1000  976.9000 1111.3000 1879.1000 #> 1998  869.9000  939.4000 1021.3000 1137.7000 1975.7000 #> 1999  899.5000 1002.3000 1043.7000 1207.2000 2069.6000 #> 2000 1009.2000 1054.6000 1070.4000 1232.5000 2177.5000 #> 2001  963.0000 1012.9000 1132.0000 1344.8000 2269.5000 #> 2002 1065.9000 1060.1000 1211.4000 1495.1000 2338.6000 #> 2003 1101.2000 1198.2000 1316.1000 1528.2000 2424.2000 #> 2004 1166.8000 1317.9000 1358.3000 1536.7000 2500.8000 #> 2005 1210.7000 1277.8000 1314.4000 1540.4000 2536.0000 #> 2006 1239.2000 1219.1000 1344.6000 1623.3000 2611.1000 #> 2007 1315.5000 1353.3000 1440.6000 1687.9000 2747.0000 #> 2008 1268.4000 1383.3000 1452.4000 1675.9000 2886.1000 #> 2009 1341.5000 1399.9000 1534.3000 1736.6000 2795.1000 #> 2010 1324.0000 1422.0000 1464.9000 1705.5000 2752.4000 #> 2011 1293.5000 1345.7000 1404.7000 1660.0000 2730.5000 #> 2012 1359.0000 1367.8000 1442.6000 1672.9000 2753.3000 #> 2013 1337.2000 1359.4000 1463.3000 1668.9000 2725.5000 #> 2014 1254.2000 1356.4000 1478.7000 1687.7000 2756.9000 #> 2015 1331.9000 1400.1000 1566.3000 1730.5000 2913.6000 #> 2016 1293.9000 1393.5000 1497.4000 1684.3000 2850.4000 #> 2017 1303.1000                                         # with reverse we can find the all.equal(ts_adjust(ts_adjust(y), reverse = TRUE), y) #> [1] TRUE"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation of a time series with missing values — ts_interpolate","title":"Interpolation of a time series with missing values — ts_interpolate","text":"Interpolation time series missing values","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation of a time series with missing values — ts_interpolate","text":"","code":"ts_interpolate(s, method = c(\"airline\", \"average\"))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation of a time series with missing values — ts_interpolate","text":"s original time series method airline: interpolation estimated airline model average: interpolation using average previous next non missing values","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ts_interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolation of a time series with missing values — ts_interpolate","text":"interpolated series","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/tsdata_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tsdata_of","title":"Title — tsdata_of","text":"Title","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/tsdata_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tsdata_of","text":"","code":"tsdata_of(values, dates)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/tsdata_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tsdata_of","text":"values Values time series dates Dates values (date inside considered period)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/tsdata_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tsdata_of","text":"ts object. frequency identified automatically missing values added need . identified frequency lowest frequency match figures. provided data can contain missing values (NA)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/tsdata_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tsdata_of","text":"","code":"# Annual series s <- tsdata_of(c(1, 2, 3, 4), c(\"1990-01-01\", \"1995-01-01\", \"1996-01-01\",         \"2000-11-01\")) # Quarterly series t <- tsdata_of(c(1, 2, 3, NA, 4), c(\"1990-01-01\", \"1995-01-01\", \"1996-01-01\",         \"2000-08-01\", \"2000-11-01\"))"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_canonical.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","title":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","text":"Makes UCARIMA model canonical; specifically, put noise components one dedicated component","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_canonical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","text":"","code":"ucarima_canonical(ucm, cmp = 0, adjust = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_canonical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","text":"ucm UCARIMA model returned ucarima_model(). cmp Index component contain noises; 0 new component noises added model adjust TRUE, noise added model ensure components positive (pseudo-)spectrum","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_canonical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","text":"new UCARIMA model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_canonical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes a UCARIMA model canonical; more specifically, put all the noise of the components in one dedicated component — ucarima_canonical","text":"","code":"mod1 <- arima_model(\"trend\", delta = c(1, -2, 1)) mod2 <- arima_model(\"noise\", var = 1600) hp <- ucarima_model(components = list(mod1, mod2)) hpc <- ucarima_canonical(hp, cmp = 2)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate UCARIMA Model — ucarima_estimate","title":"Estimate UCARIMA Model — ucarima_estimate","text":"Estimate UCARIMA Model","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate UCARIMA Model — ucarima_estimate","text":"","code":"ucarima_estimate(x, ucm, stdev = TRUE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate UCARIMA Model — ucarima_estimate","text":"x Univariate time series ucm UCARIMA model returned ucarima_model(). stdev TRUE standard deviation components computed","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate UCARIMA Model — ucarima_estimate","text":"matrix containing different components standard deviations stdev TRUE.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate UCARIMA Model — ucarima_estimate","text":"","code":"mod1 <- arima_model(\"trend\", delta = c(1, -2, 1)) mod2 <- arima_model(\"noise\", var = 16) hp <- ucarima_model(components = list(mod1, mod2)) s <- log(aggregate(Retail$AutomobileDealers)) all <- ucarima_estimate(s, hp, stdev = TRUE) plot(s, type = \"l\") t <- ts(all[, 1], frequency = frequency(s), start = start(s)) lines(t, col = \"blue\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","title":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","text":"Creates UCARIMA model, composed ARIMA models independent innovations.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","text":"","code":"ucarima_model(model = NULL, components, complements = NULL, checkmodel = FALSE)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","text":"model reduced model. Usually provided. components ARIMA models representing components complements Complements () components. Usually provided checkmodel model provided checkmodel TRUE, check indeed corresponds reduced form components; similar controls applied complements. Currently implemented","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","text":"list reduced model, components complements","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an UCARIMA model, which is composed of ARIMA models with independent innovations. — ucarima_model","text":"","code":"mod1 <- arima_model(\"trend\", delta = c(1, -2, 1)) mod2 <- arima_model(\"noise\", var = 1600) hp <- ucarima_model(components = list(mod1, mod2)) print(hp$model) #> arima  #>  #> DIF: 1 -2 1  #> MA: 1 -1.777091 0.7994438  #> var:  2001.392  #>"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_wk.html","id":null,"dir":"Reference","previous_headings":"","what":"Wiener Kolmogorov Estimators — ucarima_wk","title":"Wiener Kolmogorov Estimators — ucarima_wk","text":"Wiener Kolmogorov Estimators","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_wk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wiener Kolmogorov Estimators — ucarima_wk","text":"","code":"ucarima_wk(ucm, cmp, signal = TRUE, nspectrum = 601, nwk = 300)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_wk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wiener Kolmogorov Estimators — ucarima_wk","text":"ucm UCARIMA model returned ucarima_model(). cmp Index component want compute filter signal TRUE signal (component), FALSE noise (complement) nspectrum Number points used compute (pseudo-) spectrum estimator nwk Number weights Wiener-Kolmogorov filter returned result","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_wk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wiener Kolmogorov Estimators — ucarima_wk","text":"list (pseudo-)spectrum, weights filter squared-gain function (number points spectrum)","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/ucarima_wk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wiener Kolmogorov Estimators — ucarima_wk","text":"","code":"mod1 <- arima_model(\"trend\", delta = c(1, -2, 1)) mod2 <- arima_model(\"noise\", var = 1600) hp <- ucarima_model(components = list(mod1, mod2)) wk1 <- ucarima_wk(hp, 1, nwk = 50) wk2 <- ucarima_wk(hp, 2) plot(wk1$filter, type = \"h\")"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Composite Calendar — weighted_calendar","title":"Create a Composite Calendar — weighted_calendar","text":"Allows combine two calendars one calendar, weighting holidays .","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Composite Calendar — weighted_calendar","text":"","code":"weighted_calendar(calendars, weights)"},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Composite Calendar — weighted_calendar","text":"calendars list calendars. weights vector weights associated calendar.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Composite Calendar — weighted_calendar","text":"returns object class c(\"JD3_WEIGHTEDCALENDAR\", \"JD3_CALENDARDEFINITION\")","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Composite Calendar — weighted_calendar","text":"Composite calendars useful series including data one country/region. can used, example, create calendar European Union create national calendar country, regional holidays celebrated. example, Germany public holidays determined federal states. Therefore, Epiphany celebrated Baden-Wurttemberg, Bavaria Saxony-Anhalt, 1994 Day Repentance Prayer celebrated Saxony.","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Composite Calendar — weighted_calendar","text":"information calendar correction JDemetra+ online documentation: https://jdemetra-new-documentation.netlify.app/-calendar-correction","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/reference/weighted_calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Composite Calendar — weighted_calendar","text":"","code":"Belgium <- national_calendar(list(special_day(\"NEWYEAR\"), fixed_day(7, 21))) France <- national_calendar(list(special_day(\"NEWYEAR\"), fixed_day(7, 14))) composite_calendar <- weighted_calendar(list(France, Belgium), weights = c(1, 2))"},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"rjd3toolkit-3519000","dir":"Changelog","previous_headings":"","what":"rjd3toolkit 3.5.1.9000","title":"rjd3toolkit 3.5.1.9000","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":[]},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"changed-3-5-1-9000","dir":"Changelog","previous_headings":"3.5.1 - 2025-06-18","what":"Changed","title":"rjd3toolkit 3.5.1.9000","text":"New JARS","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"changed-3-5-1-9000-1","dir":"Changelog","previous_headings":"3.5.0 - 2025-04-09","what":"Changed","title":"rjd3toolkit 3.5.1.9000","text":"New JARS Replace . _ function’s name #88 dataset retail renamed Retail #89 number regressor false TD3c #92","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"added-3-5-1-9000","dir":"Changelog","previous_headings":"3.5.0 - 2025-04-09","what":"Added","title":"rjd3toolkit 3.5.1.9000","text":"Spline functions (periodic, b-splines, cardinal splines) function .add_ud_var ({rjd3tramoseats} {rjd3x13}) warning added function calendar_td #10 Regressor TD2c regarima specifications #53","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"changed-3-5-1-9000-2","dir":"Changelog","previous_headings":"3.3.0 - 2024-10-28","what":"Changed","title":"rjd3toolkit 3.5.1.9000","text":"New JARS Improve Canova-Hansen tests seasonality trading days (new options, output) Document (UC)ARIMA models","code":""},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"changed-3-5-1-9000-3","dir":"Changelog","previous_headings":"3.2.4 - 2024-07-12","what":"Changed","title":"rjd3toolkit 3.5.1.9000","text":"New .jar (related release 3.2.4) linting R functions","code":""},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"fixed-3-5-1-9000","dir":"Changelog","previous_headings":"3.2.4 - 2024-07-12","what":"Fixed","title":"rjd3toolkit 3.5.1.9000","text":"Correct SA decomposition backcasts forecasts (Java R transfer) #2","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rjdverse.github.io/rjd3toolkit/news/index.html","id":"added-3-5-1-9000-1","dir":"Changelog","previous_headings":"3.0.0 - 2023-06-14","what":"Added","title":"rjd3toolkit 3.5.1.9000","text":"Release based JD+_main : v3.0.2","code":""}]
